///
/// Generated file. Do not edit.
///
// coverage:ignore-file
// ignore_for_file: type=lint, unused_import

import 'package:flutter/widgets.dart';
import 'package:intl/intl.dart';
import 'package:slang/generated.dart';
import 'translations.g.dart';

// Path: <root>
class TranslationsPt extends Translations {
	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	TranslationsPt({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver, TranslationMetadata<AppLocale, Translations>? meta})
		: assert(overrides == null, 'Set "translation_overrides: true" in order to enable this feature.'),
		  $meta = meta ?? TranslationMetadata(
		    locale: AppLocale.pt,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ),
		  super(cardinalResolver: cardinalResolver, ordinalResolver: ordinalResolver) {
		super.$meta.setFlatMapFunction($meta.getTranslation); // copy base translations to super.$meta
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <pt>.
	@override final TranslationMetadata<AppLocale, Translations> $meta;

	/// Access flat map
	@override dynamic operator[](String key) => $meta.getTranslation(key) ?? super.$meta.getTranslation(key);

	late final TranslationsPt _root = this; // ignore: unused_field

	@override 
	TranslationsPt $copyWith({TranslationMetadata<AppLocale, Translations>? meta}) => TranslationsPt(meta: meta ?? this.$meta);

	// Translations
	@override String userCommentedCurationYouIn({required Object name}) => '${name} comentou uma curadoria em que foste mencionado';
	@override String userCommentedNoteYouIn({required Object name}) => '${name} comentou uma nota em que foste mencionado';
	@override String userCommentedPaidNoteYouIn({required Object name}) => '${name} comentou um pagamento em que foste mencionado na nota';
	@override String userCommentedPollYouIn({required Object name}) => '${name} comentou uma sondagem em que foste mencionado';
	@override String userCommentedSmartWidgetYouIn({required Object name}) => '${name} comentou um smart que foste mencionado no widget';
	@override String userCommentedVideoYouIn({required Object name}) => '${name} comentou um vídeo em que foste mencionado';
	@override String userCommentedArticleYouIn({required Object name}) => '${name} comentou um artigo em que foste mencionado';
	@override String userCommentedYourArticle({required Object name}) => '${name} comentou o teu artigo';
	@override String userCommentedYourCuration({required Object name}) => '${name} comentou a tua curadoria';
	@override String userCommentedYourNote({required Object name}) => '${name} comentou a tua nota';
	@override String userCommentedYourPaidNote({required Object name}) => '${name} comentou a tua nota paga';
	@override String userCommentedYourPoll({required Object name}) => '${name} comentou a tua sondagem';
	@override String userCommentedYourSmartWidget({required Object name}) => '${name} comentou o teu smart widget';
	@override String userCommentedYourVideo({required Object name}) => '${name} comentou o teu vídeo';
	@override String userNoArticles({required Object name}) => '${name} não tem artigos';
	@override String userNoCurations({required Object name}) => '${name} não tem curadorias';
	@override String userNoNotes({required Object name}) => '${name} não tem notas';
	@override String userNoSmartWidgets({required Object name}) => '${name} não tem smart widgets';
	@override String userNoVideos({required Object name}) => '${name} não tem vídeos';
	@override String userSubmittedPaidNote({required Object name}) => '${name} submeteu uma nota paga';
	@override String userMentionedYouInCuration({required Object name}) => '${name} mencionou-te numa curadoria';
	@override String userMentionedYouInNote({required Object name}) => '${name} mencionou-te numa nota';
	@override String userMentionedYouInPaidNote({required Object name}) => '${name} mencionou-te numa nota paga';
	@override String userMentionedYouInPoll({required Object name}) => '${name} mencionou-te numa sondagem';
	@override String userMentionedYouInSmartWidget({required Object name}) => '${name} mencionou-te num smart widget';
	@override String userMentionedYouInVideo({required Object name}) => '${name} mencionou-te num vídeo';
	@override String userMentionedYouInArticle({required Object name}) => '${name} mencionou-te num artigo';
	@override String userPublishedCuration({required Object name}) => '${name} publicou uma curadoria';
	@override String userPublishedPaidNote({required Object name}) => '${name} publicou uma nota paga';
	@override String userPublishedPoll({required Object name}) => '${name} publicou uma sondagem';
	@override String userPublishedSmartWidget({required Object name}) => '${name} publicou um smart widget';
	@override String userPublishedVideo({required Object name}) => '${name} publicou um vídeo';
	@override String userPublishedArticle({required Object name}) => '${name} publicou um artigo';
	@override String userQuotedCurationYouIn({required Object name}) => '${name} citou uma curadoria em que foste mencionado';
	@override String userQuotedNoteYouIn({required Object name}) => '${name} citou uma nota em que foste mencionado';
	@override String userQuotedPaidNoteYouIn({required Object name}) => '${name} citou uma nota paga em foste mencionado';
	@override String userQuotedVideoYouIn({required Object name}) => '${name} citou um vídeo em que foste mencionado';
	@override String userQuotedArticleYouIn({required Object name}) => '${name} citou um artigo em que foste mencionado';
	@override String userQuotedYourArticle({required Object name}) => '${name} citou o teu artigo';
	@override String userQuotedYourCuration({required Object name}) => '${name} citou a tua curadoria';
	@override String userQuotedYourNote({required Object name}) => '${name} citou a tua nota';
	@override String userQuotedYourPaidNote({required Object name}) => '${name} citou a tua nota paga';
	@override String userQuotedYourVideo({required Object name}) => '${name} citou o teu vídeo';
	@override String userReactedCurationYouIn({required Object name, required Object reaction}) => '${name} reagiu ${reaction} a uma curadoria em que foste mencionado';
	@override String userReactedNoteYouIn({required Object name, required Object reaction}) => '${name} reagiu ${reaction} a uma nota em que foste mencionado';
	@override String userReactedPaidNoteYouIn({required Object name, required Object reaction}) => '${name} reagiu ${reaction} a uma nota paga em que foste mencionado';
	@override String userReactedPollYouIn({required Object name, required Object reaction}) => '${name} reagiu ${reaction} a uma sondagem em que foste mencionado';
	@override String userReactedSmartWidgetYouIn({required Object name, required Object reaction}) => '${name} reagiu ${reaction} a um smart widget em que foste mencionado';
	@override String userReactedVideoYouIn({required Object name, required Object reaction}) => '${name} reagiu ${reaction} a um vídeo em que foste mencionado';
	@override String userReactedArticleYouIn({required Object name, required Object reaction}) => '${name} reagiu ${reaction} a um artigo em que foste mencionado';
	@override String userReactedYou({required Object name, required Object reaction}) => '${name} reagiu ${reaction}';
	@override String userReactedYourArticle({required Object name, required Object reaction}) => '${name} reagiu ${reaction} ao teu artigo';
	@override String userReactedYourCuration({required Object name, required Object reaction}) => '${name} reagiu ${reaction} à tua curadoria';
	@override String userReactedYourMessage({required Object name, required Object reaction}) => '${name} reagiu ${reaction} à tua mensagem';
	@override String userReactedYourNote({required Object name, required Object reaction}) => '${name} reagiu ${reaction} à tua nota';
	@override String userReactedYourPaidNote({required Object name, required Object reaction}) => '${name} reagiu ${reaction} à tua nota paga';
	@override String userReactedYourPoll({required Object name, required Object reaction}) => '${name} reagiu ${reaction} à tua sondagem';
	@override String userReactedYourSmartWidget({required Object name, required Object reaction}) => '${name} reagiu ${reaction} ao teu smart widget';
	@override String userReactedYourVideo({required Object name, required Object reaction}) => '${name} reagiu ${reaction} ao teu vídeo';
	@override String reactedWith({required Object name, required Object reaction}) => '${name} reagiu com ${reaction}';
	@override String userReceivedSat({required Object name, required Object number}) => '${name} recebeu os teus ${number} Sats';
	@override String userRepliedArticleYouIn({required Object name}) => '${name} respondeu a um artigo em que foste mencionado';
	@override String userRepliedCurationYouIn({required Object name}) => '${name} respondeu a uma curadoria em que foste mencionado';
	@override String userRepliedNoteYouIn({required Object name}) => '${name} respondeu a uma nota em que foste mencionado';
	@override String userRepliedPaidNoteYouIn({required Object name}) => '${name} respondeu a uma nota paga em que foste mencionado';
	@override String userRepliedPollYouIn({required Object name}) => '${name} respondeu a uma sondagem em que foste mencionado';
	@override String userRepliedSmartWidgetYouIn({required Object name}) => '${name} respondeu a um smart widget em que foste mencionado';
	@override String userRepliedVideoYouIn({required Object name}) => '${name} respondeu a um vídeo em que foste mencionado';
	@override String userRepliedYourArticle({required Object name}) => '${name} respondeu ao teu artigo';
	@override String userRepliedYourCuration({required Object name}) => '${name} respondeu à tua curadoria';
	@override String userRepliedYourNote({required Object name}) => '${name} respondeu à tua nota';
	@override String userRepliedYourPaidNote({required Object name}) => '${name} respondeu à tua nota paga';
	@override String userRepliedYourPoll({required Object name}) => '${name} respondeu à tua sondagem';
	@override String userRepliedYourSmartWidget({required Object name}) => '${name} respondeu ao teu smart widget';
	@override String userRepliedYourVideo({required Object name}) => '${name} respondeu ao teu vídeo';
	@override String userRepostedNoteYouIn({required Object name}) => '${name} republicou uma nota em que foste mencionado';
	@override String userRepostedPaidNoteYouIn({required Object name}) => '${name} republicou uma nota paga em que foste mencionado';
	@override String userRepostedYou({required Object name}) => '${name} republicou o teu conteúdo';
	@override String userRepostedYourNote({required Object name}) => '${name} republicou a tua nota';
	@override String userRepostedYourPaidNote({required Object name}) => '${name} republicou a tua nota paga';
	@override String userSentSat({required Object name, required Object number}) => '${name} enviou-te ${number} Sats';
	@override String userZappedYou({required Object name, required Object number}) => '${name} enviou-te um zap de ${number} sats';
	@override String userZappedYourArticle({required Object name, required Object number}) => '${name} zapped o teu artigo ${number} sats';
	@override String userZappedYourCuration({required Object name, required Object number}) => '${name} zapped a tua curadoria ${number} sats';
	@override String userZappedYourNote({required Object name, required Object number}) => '${name} zapped a tua nota ${number} sats';
	@override String userZappedYourPaidNote({required Object name, required Object number}) => '${name} zapped a tua nota paga ${number} sats';
	@override String userZappedYourPoll({required Object name, required Object number}) => '${name} zapped a tua sondagem ${number} sats';
	@override String userZappedYourSmartWidget({required Object name, required Object number}) => '${name} zapped o teu smart widget ${number} sats';
	@override String userZappedYourVideo({required Object name, required Object number}) => '${name} zapped o teu vídeo ${number} sats';
	@override String userNewArticle({required Object name}) => 'novo artigo de ${name}';
	@override String userNewCuration({required Object name}) => 'nova curadoria de ${name}';
	@override String userPaidNote({required Object name}) => 'nova nota paga de ${name}';
	@override String userNewSmartWidget({required Object name}) => 'novo smart widget de ${name}';
	@override String userReply({required Object name}) => 'a resposta de ${name}';
	@override String userNewVideo({required Object name}) => 'o vídeo de ${name}';
	@override String articlesNum({required Object number}) => '${number} artigo(s)';
	@override String availableArticles({required Object number}) => '${number} artigo(s) disponível(véis)';
	@override String availableVideos({required Object number}) => '${number} vídeo(s) disponível(véis)';
	@override String bookmarksListCount({required Object number}) => '${number} listas de marcadores';
	@override String componentsSMCount({required Object number}) => '${number} componentes neste widget';
	@override String followersNum({required Object number}) => '${number} seguidores';
	@override String itemsNumber({required Object number}) => '${number} item(ns)';
	@override String levelsRequiredNum({required Object number}) => '${number} níveis necessários';
	@override String pointsRemaining({required Object number}) => '${number} restante';
	@override String videosNum({required Object number}) => '${number} vídeo(s)';
	@override String viewsNumber({required Object number}) => '${number} visualização';
	@override String readTime({required Object time}) => '${time} min de leitura';
	@override String mutualsNum({required Object number}) => '+ ${number} mútuo(s)';
	@override String peopleCountPlus({required Object number}) => '+${number} pessoas';
	@override String get supportUs => '❤︎ Apoia-nos';
	@override String get consumablePointsPerks1 => '1- Envia o teu conteúdo para certificação';
	@override String get consumablePointsPerks2 => '2- Resgata pontos para publicar notas pagas';
	@override String get consumablePointsPerks3 => '3- Resgata pontos para SATs (Limites aleatórios são selecionados e serás notificado sempre que o resgate estiver disponível)';
	@override String get highlightedNote => 'Uma nota destacada para mais exposição.';
	@override String get minimumOfOneRequired => 'É necessária uma quantidade mínima de 1';
	@override String get useValidTitle => 'Um título válido necessita de ser utilizado';
	@override String get aboutYou => 'Sobre ti';
	@override String get actGoodFaith => 'Age em Boa-fé';
	@override String get add => 'adicionar';
	@override String get addUrlNevent => 'Adiciona um URL/nevent adequado';
	@override String get addProperUrlNevent => 'Adiciona um URL/nevent adequado';
	@override String get addAccount => 'Adiciona conta';
	@override String get addBookmarkList => 'Adiciona lista de marcadores';
	@override String get addCover => 'Adiciona capa';
	@override String get addCuration => 'Adiciona curadoria';
	@override String get addInterests => 'Adiciona interesses';
	@override String get addNote => 'Adiciona nota';
	@override String get addToCuration => 'Adiciona à curadoria';
	@override String get addUser => 'Adiciona utilizador';
	@override String get addWallet => 'Adicionar carteira';
	@override String get addYourTopics => 'Adiciona os teus tópicos';
	@override String get adjustSpeed => 'Ajusta velocidade';
	@override String get adjustVolume => 'Ajusta volume';
	@override String get alby => 'Alby';
	@override String get albyConnect => 'Alby connect';
	@override String get all => 'todos';
	@override String get allRelays => 'Todas as relays';
	@override String get allUsersZapped => 'Todos os utilizadores foram zapped!';
	@override String get amberNotInstalled => 'O aplicativo Amber não está instalado';
	@override String get amountInSats => 'Quantia em sats';
	@override String get errorAddingArticle => 'Ocorreu um erro ao adicionar o artigo';
	@override String get errorAddingCuration => 'Ocorreu um erro ao adicionar a curadoria';
	@override String get errorAddingWidget => 'Ocorreu um erro ao adicionar o smart widget';
	@override String get errorAddingVideo => 'Ocorreu um erro ao adicionar o vídeo';
	@override String get errorUpdatingCuration => 'Ocorreu um erro ao atualizar a curadoria';
	@override String userInvoiceGenerated({required Object name}) => 'Uma fatura para ${name} foi gerada';
	@override String get verifiedNoteRateSealed => 'Uma nota verificada que avaliaste foi selada.';
	@override String get apiKeyRequired => 'Chave de API (obrigatória)';
	@override String get appLanguage => 'Idioma do aplicativo';
	@override String get appTheme => 'Tema do aplicativo';
	@override String get appearance => 'Aparência';
	@override String get article => 'artigo';
	@override String get articleNotFound => 'Não foi possível encontrar o artigo';
	@override String get articleAddedCuration => 'O artigo foi adicionado à tua curadoria.';
	@override String get articles => 'artigos';
	@override String get articlesAvailableCuration => 'Artigos disponíveis nesta curadoria';
	@override String get askMeSomething => 'Pergunte-me alguma coisa!';
	@override String get attemptConnectAmber => 'A tentativa de conexão com Amber foi rejeitada.';
	@override String get attemptsRemained => 'Tentativas restantes ';
	@override String get autoSavedArticleDeleted => 'O artigo salvo automaticamente foi excluído';
	@override String get autoSavedSMdeleted => 'O widget inteligente salvo automaticamente foi excluído';
	@override String get availableWallets => 'Carteiras disponíveis';
	@override String get back => 'voltar';
	@override String get backgroundColor => 'Cor de fundo';
	@override String get balance => 'Equilíbrio';
	@override String get beHelpful => 'Sê útil, mesmo para com aqueles que discordam';
	@override String get beFirstCommentThisVideo => 'Sê o primeiro a comentar este vídeo!';
	@override String bio({required Object content}) => 'Biografia: ${content}';
	@override String get blankWidget => 'Widget em branco';
	@override String get bookmark => 'marcador';
	@override String get bookmarkAdded => 'Lista de marcadores foi adicionada';
	@override String get bookmarkLists => 'Listas de marcadores';
	@override String get bookmarks => 'Marcadores';
	@override String get borderColor => 'Cor da marchem';
	@override String get button => 'botão';
	@override String get buttonColor => 'Cor do botão';
	@override String get buttonCustomization => 'Personalização de botão';
	@override String get buttonText => 'Texto do botão';
	@override String get by => 'por';
	@override String byPerson({required Object name}) => 'Por ${name}';
	@override String get byContinuing => 'Ao continuar, concordas com o nosso\n';
	@override String get camera => 'Câmera';
	@override String get cancel => 'cancelar';
	@override String get checkSmartWidget => 'Confere um smart widget';
	@override String get checkoutArticle => 'confere o meu artigo';
	@override String get checkoutCuration => 'confere a minha curadoria';
	@override String get checkoutPaidNote => 'confere a minha nota paga';
	@override String get checkoutSmartWidget => 'confere o meu smart widget';
	@override String get checkValidity => 'Verifica a validade';
	@override String get checkModelRouter => 'Verifica o teu modem ou router';
	@override String get checkoutVideo => 'confere o meu vídeo';
	@override String get claim => 'Reivindicação';
	@override String claimTime({required Object time}) => 'Reivindica em ${time}';
	@override String get clear => 'limpar';
	@override String get clearAppCache => 'Limpar cache do aplicativo';
	@override String get clearChat => 'Limpar chat';
	@override String get clearDate => 'Limpar dados';
	@override String get click => 'Clique';
	@override String get clickBelowToConnect => 'Clique abaixo para conectar';
	@override String get clone => 'copiar conforme';
	@override String get close => 'encerrar';
	@override String pollClosedAt({required Object date}) => 'Encerrado em: ${date}';
	@override String pollClosesAt({required Object date}) => 'Encerra em: ${date}';
	@override String get color => 'cor';
	@override String get comment => 'Comentário';
	@override String get comments => 'Comentários';
	@override String get communityPolls => 'Sondagens da comunidade';
	@override String get communityWallet => 'Carteira comunitária';
	@override String get communityWidgets => 'Widgets da comunidade';
	@override String get compose => 'Compor';
	@override String get confirmPayment => 'Confirmar pagamento';
	@override String get congratulations => 'Parabéns';
	@override String get connect => 'Conectar';
	@override String get connectWithNwc => 'Conectar com NWC';
	@override String get connected => 'Conectado';
	@override String get consumablePoints => 'Pontos consumíveis';
	@override String get contact => 'Contato';
	@override String get container => 'recipiente';
	@override String get containerCustomization => 'Personalização do recipiente';
	@override String get contentModeration => 'Moderação do conteúdo';
	@override String get contentTextColor => 'Cor do texto do conteúdo';
	@override String get contentTranslation => 'Tradução do conteúdo';
	@override String contentData({required Object description}) => 'Conteúdo: ${description}';
	@override String get continueAsGuest => 'Continuar como convidado';
	@override String get contributeUnderstanding => 'Contribua para a criação de entendimento';
	@override String get copy => 'cópia';
	@override String get copyInvoice => 'Copiar fatura';
	@override String get copyLn => 'Copiar endereço lightining';
	@override String get copyNaddr => 'copiar naddr';
	@override String get copyNoteId => 'Copiar ID da nota';
	@override String get copyNpub => 'Copiar npub';
	@override String get copyNwc => 'Copiar NWC';
	@override String get userInvoiceNotGenerated => 'Não foi possível criar uma fatura para este utilizador.';
	@override String get notFindSMwithAddr => 'Não foi possível encontrar o smart widget com esse endereço';
	@override String get couldNotUpdateRelaysList => 'Não foi possível atualizar a lista de relays';
	@override String get coverUrl => 'Ocultar url';
	@override String get createWalletSendRecSats => 'Cria uma carteira para enviar e receber sats';
	@override String get createAccount => 'Cria uma conta';
	@override String get createWallet => 'Criar carteira';
	@override String get yakiNwcDesc => 'Cria uma carteira usando o canal de YakiHonne';
	@override String get createYakiWallet => 'Cria uma carteira YakiHonne';
	@override String get createdAt => 'Criado em';
	@override String createdAtEditedAt({required Object date1, required Object date2}) => 'criado em ${date1}, editado em ${date2}';
	@override String get curation => 'curadoria';
	@override String get curationNotFound => 'Não foi possível encontrar a curadoria';
	@override String get curationType => 'Tipo de curadoria';
	@override String get curations => 'curadorias';
	@override String get currentlyLinkedMessage => 'Atualmente vinculado ao teu perfil para recepção de zaps';
	@override String get customization => 'Personalização';
	@override String get customizeYourFeed => 'Personaliza o teu feed';
	@override String get dashboard => 'painel';
	@override String get decrMessage => 'Decifrando mensagem';
	@override String get defaultKey => 'Padrão';
	@override String get delete => 'excluir';
	@override String deleteContent({required Object type}) => 'Excluir ${type}';
	@override String get deleteAccount => 'Excluir conta';
	@override String get deleteBookmarkList => 'Excluir lista de marcadores';
	@override String get deleteCoverPic => 'Excluir foto da capa!';
	@override String get deleteDraft => 'Excluir rascunho';
	@override String get deleteWallet => 'Excluir carteira';
	@override String get description => 'descrição';
	@override String get descriptionOptional => 'descrição (opcional)';
	@override String get details => 'detalhes';
	@override String get disableSecureDms => 'Desative DMs seguras';
	@override String get disconnecting => 'Desconectando...';
	@override String get discordUrl => 'url do Discord';
	@override String get discover => 'descobrir';
	@override String get dismiss => 'dispensar';
	@override String get displayName => 'Nome de exibição';
	@override String get findThisHelpful => 'Achas isto útil?';
	@override String get findThisNotHelpful => 'Achas que isto não é útil?';
	@override String get dontHaveWallet => 'Não tens ainda uma carteira?';
	@override String get unTextR3Desc => 'Não te preocupes, todos nós recebemos algumas destas! Estas classificações são comuns e podem levar a alterações de status se um número suficiente de pessoas concordarem que uma nota útil não é suficientemente útil.';
	@override String get donations => 'Doações';
	@override String get downvotes => 'Votos negativos';
	@override String get draft => 'rascunho';
	@override String get duoLayout => 'Layout duplo';
	@override String get earnSats => 'Ganha SATs';
	@override String get edit => 'editar';
	@override String get editCover => 'Editar capa';
	@override String get editProfile => 'Editar perfil';
	@override String get editToAddZapPoll => 'Edite para adicionar enquete zap';
	@override String editedOn({required Object date}) => 'Editado em: ${date}';
	@override String get emptyVerifiedNote => 'Conteúdo de nota verificado vazio!';
	@override String get enableSecureDms => 'Habilite DMs seguros';
	@override String get eula => 'Contrato de licença de usuário final (EULA)';
	@override String get engagementChart => 'Gráfico de engajamento';
	@override String get enjoyExpOwnData => 'Aproveite a experiência de possuir\n';
	@override String get ensureLnSet => 'Certifique-se de que seu endereço relâmpago esteja bem definido';
	@override String get enterSMaddr => 'Insira um widget inteligente naddr para verificar sua validade.';
	@override String get enterLn => 'Digite seu endereço LUD-06 ou LUD-16';
	@override String get enterCoverUrl => 'Insira o URL da sua capa';
	@override String get enterNip05 => 'Digite seu endereço NIP-05';
	@override String get enterPictureUrl => 'Digite o URL da sua foto';
	@override String get erase => 'apagar';
	@override String get errorAddingBookmark => 'Ocorreu um erro ao adicionar o favorito';
	@override String get errorAddingVerifiedNote => 'Ocorreu um erro ao adicionar sua nota verificada';
	@override String get errorClaimingReward => 'Ocorreu um erro ao reivindicar uma recompensa';
	@override String get errorConnectingRelay => 'Ocorreu um erro ao conectar ao relé';
	@override String get errorCreatingWallet => 'Ocorreu um erro ao criar a carteira';
	@override String get errorDecodingData => 'Ocorreu um erro ao decodificar os dados';
	@override String get errorDeletingContent => 'Ocorreu um erro ao excluir o conteúdo';
	@override String get errorDeletingRating => 'Ocorreu um erro ao excluir sua avaliação';
	@override String get errorGeneratingEvent => 'Ocorreu um erro ao gerar o evento';
	@override String get errorGeneratingInvoice => 'Ocorreu um erro ao gerar a fatura';
	@override String get errorLoggingYakiChest => 'Ocorreu um erro ao fazer login no baú de Yakihonne';
	@override String get errorPayingInvoice => 'Ocorreu um erro ao pagar usando a fatura';
	@override String get errorSendingSats => 'Ocorreu um erro ao enviar sats';
	@override String get errorSendingEvent => 'Ocorreu um erro ao enviar o evento';
	@override String get errorSendingMessage => 'ocorreu um erro ao enviar a mensagem';
	@override String get errorSettingToken => 'Ocorreu um erro ao configurar o token';
	@override String get errorSigningEvent => 'Ocorreu um erro ao assinar o evento';
	@override String get errorSubmittingRating => 'Ocorreu um erro ao enviar sua classificação';
	@override String get errorTranslating => 'Ocorreu um erro ao traduzir o conteúdo.';
	@override String get errorUpdatingData => 'Ocorreu um erro ao atualizar os dados';
	@override String get errorUpdatingRelaysList => 'Ocorreu um erro ao atualizar a lista de relés';
	@override String get errorUploadingMedia => 'Ocorreu um erro ao enviar a mídia';
	@override String get errorUploadingVideo => 'Ocorreu um erro ao carregar o vídeo';
	@override String get errorUsingWallet => 'Ocorreu um erro ao usar a carteira!';
	@override String get errorZappingUsers => 'Ocorreu um erro ao enviar zapps aos utilizadores';
	@override String get errorUploadingImage => 'Ocorreu um erro ao carregar a imagem';
	@override String get errorLoadingVideo => 'Erro ao carregar o vídeo';
	@override String get errorUsingExternalWallet => 'Erro ao usar carteira externa.';
	@override String get eventNotFound => 'Não foi possível encontrar o evento';
	@override String get eventNotRecognized => 'O evento não pôde ser reconhecido';
	@override String get exit => 'Sair';
	@override String get expandWorld => 'Expande o mundo adicionando o que mais te fascina. Seleciona os teus interesses e deixa que a viagem comece.';
	@override String get explanation => 'Explicação';
	@override String get explore => 'explorar';
	@override String get externalWallet => 'Carteira externa';
	@override String get feedOptions => 'Opções do feed';
	@override String get fetchingArticle => 'Rastreando artigo';
	@override String get fetchingCuration => 'Rastreando curadoria';
	@override String get fetchingEvent => 'Rastreando evento';
	@override String get fetchingEventUserRelays => 'Rastreando evento nas relays do utilizador';
	@override String get fetchingNote => 'Rastreando nota';
	@override String get fetchingProfile => 'Rastreando perfil';
	@override String get fetchingSmartWidget => 'Rastreando smart widget';
	@override String get fetchingUserInboxRelays => 'Rastreando relays da caixa de entrada do utilizador';
	@override String get fetchingVideo => 'Rastreando vídeo';
	@override String get fileSharing => 'Partilha de arquivos';
	@override String get fillColor => 'Cor de preenchimento';
	@override String get finished => 'finalizado!';
	@override String get follow => 'segue';
	@override String get followAll => 'Segue todos';
	@override String get followMeOnNostr => 'Segue-me no Nostr';
	@override String get followers => 'Seguidores';
	@override String get following => 'seguindo';
	@override String get pendingFollowing => 'Seguindo...';
	@override String get followings => 'Seguidores';
	@override String get followsYou => 'Segue-te';
	@override String get fontSize => 'Tamanho da fonte';
	@override String forName({required Object name}) => 'para ${name}';
	@override String get enableSecureDmsMessage => 'Para mais segurança e privacidade, considera ativar DMs seguros.';
	@override String get zapSplitsMessage => 'Para zap splits, deve haver pelo menos uma pessoa';
	@override String get free => 'Grátis';
	@override String get fuelYakihonne => 'Estimula o crescimento de YakiHonne! O teu apoio contribui para a criação de novos recursos e a para uma melhor experiência para todos.';
	@override String get gain => 'Ganho';
	@override String get gallery => 'Galeria';
	@override String get generateInvoice => 'Gerar fatura';
	@override String get generateInvoices => 'Gerar faturas';
	@override String get getApiKey => 'Obtém chave API';
	@override String get getInvoice => 'Obtém fatura';
	@override String get getStartedNow => 'Começa já';
	@override String get gifs => 'gifs';
	@override String get gotIt => 'Entendi!';
	@override String get granted => 'Concedido';
	@override String get earnSatsDesc => 'Ajuda-nos a fornecer perspetivas mais descentralizadas para rever esta nota paga.';
	@override String get heyWelcomeBack => 'Olá,\nBem-vindo\nDe volta';
	@override String get hideSuggestions => 'Ocultar sugestões';
	@override String get highlights => 'destaques';
	@override String get home => 'Página principal';
	@override String get hfCustomization => 'Personalização do feed da página principal';
	@override String get horizontalVideo => 'Vídeo horizontal';
	@override String get wantToShareRevenues => 'Quero compartilhar estas receitas';
	@override String get identifier => 'Identificador';
	@override String get image => 'imagem';
	@override String get imageAspectRatio => 'Proporção da imagem';
	@override String get imageCustomization => 'Personalização de imagem';
	@override String get imageUrl => 'URL da imagem';
	@override String get imageUploadHistory => 'Histórico de carregamento de imagens';
	@override String get important => 'Importante';
	@override String inTag({required Object name}) => 'Em ${name}';
	@override String get inaccessibleLink => 'Link inacessível';
	@override String get inbox => 'caixa de entrada';
	@override String get initializingAccount => 'Inicializando conta...';
	@override String get insertText => 'Inserir texto';
	@override String get instantConntect => 'Conexão instantânea à relay';
	@override String get interestsUpdateMessage => 'A lista de interesses foi atualizada com sucesso!';
	@override String get interested => 'Interessado';
	@override String get interests => 'interesses';
	@override String get invalidHexKey => 'Hex key inválida!';
	@override String get invalidInvoice => 'Fatura inválida';
	@override String get invalidPairingSecret => 'Emparelhamento de segredo inválido';
	@override String get invalidPrivateKey => 'Chave privada inválida!';
	@override String get invalidRelayUrl => 'URL de relay inválido';
	@override String get invoice => 'fatura';
	@override String get invoiceCopied => 'Código da fatura copiado!';
	@override String get invoicePaid => 'A fatura foi paga com sucesso';
	@override String get invoiceOrLN => 'Fatura ou endereço Lightning';
	@override String get issueOccuredSelectingImage => 'Ocorreu um problema ao selecionar a imagem.';
	@override String get somethingWentWrongDesc => 'Parece que algo de errado aconteceu durante o carregamento de dados. Tenta novamente!';
	@override String get invalidInvoiceDesc => 'Parece que a fatura digitalizada é inválida. Redigitaliza e tenta novamente.';
	@override String get invoiceNotPayed => 'Parece que não pagaste a fatura, verifica novamente';
	@override String get itsLive => 'Estás ao Vivo!';
	@override String get noCommunityNotes => 'Está tudo tranquilo por aqui! Não existem ainda notas da comunidade.';
	@override String joinedOn({required Object date}) => 'Associou-se em: ${date}';
	@override String get keys => 'Chaves';
	@override String get known => 'Conhecido';
	@override String get languagePreferences => 'Preferências de idioma';
	@override String lastGained({required Object date}) => 'Último ganho: ${date}';
	@override String lastUpdatedOn({required Object date}) => 'Última atualização em: ${date}';
	@override String get latest => 'mais recente';
	@override String get layout => 'layout';
	@override String get layoutCustomization => 'Personalização do layout';
	@override String get less => 'Menos';
	@override String get letsGetStarted => 'Vamos começar!';
	@override String levelNumber({required Object number}) => 'Nível ${number}';
	@override String get lightningAddress => 'Endereço Lightning';
	@override String get lnCopied => 'O endereço Lightning foi copiado! 👏';
	@override String get link => 'Link';
	@override String get linkWallet => 'Conecta Carteira';
	@override String get linked => 'Conectado';
	@override String get list => 'lista';
	@override String get loading => 'A carregar';
	@override String get loadingFollowings => 'A carregar seguidores';
	@override String get loadingPreviousPosts => 'A carregar publicação(ões) anterior(es)...';
	@override String get loadingFollowers => 'A carregar seguidores';
	@override String get locked => 'Bloqueado';
	@override String get loggingIn => 'Acedendo...';
	@override String get loggingOut => 'Fazendo logout...';
	@override String get login => 'Nome de acesso';
	@override String get loginYakiChestPoints => 'Faz login no baú de Yakihonne, acumula pontos sendo ativo na plataforma e ganha recompensas preciosos!';
	@override String get logoutAllAccounts => 'Sair de todas as contas';
	@override String get validDescriptionCuration => 'Certifica-te que adicionaste uma descrição válida para esta curadoria';
	@override String get validImageCuration => 'Certifica-te que adicionaste uma imagem válida para esta curadoria';
	@override String get validTitleCuration => 'Certifica-te que adicionaste um título válido para esta curadoria';
	@override String get addValidUrl => 'Certifica-te de adicionar um URL válido';
	@override String get submitValidLud => 'Certifica-te de obter um lud16/lud06 válido.';
	@override String get showSecretDesc => 'Certifica-te que o manténs seguro, pois ele dá acesso total à tua conta.';
	@override String get invalidInvoiceLnurl => 'Certifica-te de definir uma fatura válida ou lnurl';
	@override String get setAllRequiredContent => 'Certifica-te de definir todo o conteúdo necessário.';
	@override String get setOutboxRelays => 'Certifica-te de configurar as tuas relays de caixa de saída';
	@override String get submitValidCloseDate => 'Certifica-te de enviar uma data de encerramento válida.';
	@override String get submitMinMaxSats => 'Certifica-te de submeter uma quantia válida mínima e máxima de satoshis';
	@override String get submitValidOptions => 'Certifica-te de submeter opções válidas.';
	@override String get submitValidData => 'Certifica-te de submeter dados válidos';
	@override String get submitValidInvoice => 'Certifica-te de submeter uma fatura válida';
	@override String get manageAccounts => 'Gerenciar contas';
	@override String get manageInterests => 'Gerenciar interesses';
	@override String get maxSats => 'Máx. sats';
	@override String get maximumSatoshis => 'Máximo de sats';
	@override String get mediaExceedsMaxSize => 'A multimidia excede o tamanho máximo que é 21 MB';
	@override String get mediaUploader => 'Carregador de multimidia';
	@override String get mentions => 'menções';
	@override String get messageOptional => 'Mensagem (opcional)';
	@override String get messageCouldNotBeDecrypted => 'a mensagem não pôde ser decifrada';
	@override String get messageNotDecrypted => 'A mensagem ainda não foi decifrada!';
	@override String get messageCopied => 'Mensagem copiada com sucesso!';
	@override String get metadata => 'metadados';
	@override String get min => 'min';
	@override String get minSats => 'Mínimo de sats';
	@override String get minimumSatoshis => 'Mínimo de Sats';
	@override String get errorMissingKey => 'Chave de API ausente ou subscrição expirada.';
	@override String get monoLayout => 'MonoLayout';
	@override String get monolayoutRequired => 'Monolayout é obrigatório';
	@override String get more => 'Mais';
	@override String get moreDots => 'mais...';
	@override String get moveDown => 'Mover para baixo';
	@override String get moveUp => 'Ir para cima';
	@override String get mute => 'modo silencioso';
	@override String get muteList => 'Lista silenciada';
	@override String get muteUser => 'Silenciar utilizador';
	@override String get mutuals => 'mútuo(s)';
	@override String get myArticles => 'Os meus artigos';
	@override String get myDrafts => 'Os meus rascunhos';
	@override String get myPolls => 'As minhas sondagens';
	@override String get myPublicKey => 'A minha chave pública';
	@override String get mySecretKey => 'A minha chave secreta';
	@override String get myVideos => 'Os meus vídeos';
	@override String get myWidgets => 'Os meus widgets';
	@override String get naddr => 'naddr';
	@override String get nostrWalletConnectDesc => 'Conexão nativa de carteira nostr';
	@override String get needsMoreRating => 'Precisa de mais classificação';
	@override String get needsYourHelp => 'Precisa do teu útil';
	@override String get nevent => 'nevent';
	@override String get newKey => 'Novo';
	@override String get newMessage => 'Nova mensagem';
	@override String get newPostGesture => 'Nova publicação com gesto de pressão longa';
	@override String get next => 'próximo';
	@override String noContentBelongToCuration({required Object type}) => 'Nenhum ${type} pertence a esta curadoria';
	@override String noContentCanBeFound({required Object type}) => 'Nenhum ${type} foi encontrado';
	@override String get noArticlesInCuration => 'Nenhum artigo sobre esta curadoria foi encontrado';
	@override String get addNewBookmark => 'Nenhuma lista de marcadores foi encontrada, tenta adicionar uma!';
	@override String get noBookmarksListFound => 'Nenhuma lista de marcadores foi encontrada, tente adicionar uma!';
	@override String get noCommentsCanBeFound => 'Nenhum comentário foi encontrado';
	@override String get noComponentsDisplayed => 'Nenhum componente pode ser exibido';
	@override String get noCurationsFound => 'Nenhuma curadoria foi encontrada. Tenta criar uma para poderes adicionar conteúdo à mesma.';
	@override String get noDescription => 'Nenhuma descrição';
	@override String get noElementsInBookmarks => 'Nenhum elemento foi encontrado na lista de marcadores';
	@override String get noEventIdCanBeFound => 'Nenhum evento com este ID foi encontrado!';
	@override String get noImageHistory => 'Nenhum histórico de imagens foi encontrado';
	@override String get noInternetAccess => 'Sem acesso à Internet';
	@override String get noInvoiceAvailable => 'Não há faturas disponíveis';
	@override String get noMessageCanBeFound => 'Nenhuma mensagem foi encontrada';
	@override String get noMessagesToDisplay => 'Nenhuma mensagem pode ser exibida.';
	@override String get noMoreData => 'Não há mais dados';
	@override String get noMutedUserFound => 'Nenhum usuário silenciado foi encontrado.';
	@override String get noNotificationCanBeFound => 'Nenhuma notificação pode ser encontrada';
	@override String get noPaidNotesCanBeFound => 'Nenhuma nota paga pode ser encontrada.';
	@override String get noPollsCanBeFound => 'Nenhuma sondagem foi encontrada';
	@override String get noReasonsSpecified => 'Sem razão especificada!';
	@override String get noRelaysCanBeFound => 'Nenhuma relay pode ser encontrada';
	@override String get noUserRelays => 'Nenhuma relay foi encontrada para este utilizador.';
	@override String get noRepliesDesc => 'Nenhuma resposta para esta nota pode ser encontrada';
	@override String get noResKeyword => 'Nenhum resultado para esta palavra-chave';
	@override String get noResKeywordDesc => 'Nenhum resultado foi encontrado ao usar esta palavra-chave, tenta usar outras palavras-chave para obter melhores resultados.';
	@override String get noSmartWidgetCanBeFound => 'Nenhum smart widget pode ser encontrado';
	@override String get noSmartWidget => 'Nenhum rascunho de smart widget pode ser encontrado';
	@override String get noTemplatesCanBeFound => 'Nenhum modelo pode ser encontrado nesta categoria.';
	@override String get noTitle => 'Sem título';
	@override String get noTransactionCanBeFound => 'Nenhuma transação pode ser encontrada';
	@override String get noUserZapped => 'Nenhum utilizador recebeu zaps!';
	@override String get noUserCanBeFound => 'Nenhum utilizador pode ser encontrado.';
	@override String get noVideosInCuration => 'Nenhum vídeo sobre esta curadoria foi encontrado';
	@override String get noWalletCanBeFound => 'Nenhuma carteira pode ser encontrada';
	@override String get noZappersCanBeFound => 'Nenhum zapper pode ser encontrado.';
	@override String get noImGood => 'Não, estou bem';
	@override String get noWalletConnectedToYourProfile => 'Nenhuma das carteiras conectadas está vinculada ao seu perfil.';
	@override String get nostrScheme => 'Esquema Nostr';
	@override String get nostrWalletConnect => 'Conexão de carteira Nostr';
	@override String get nwcInitialized => 'A conexão da carteira Nostr foi inicializada';
	@override String get notEnoughBalance => 'Não tens saldo suficiente para efetuar este pagamento.';
	@override String get notFollowedByAnyoneYouFollow => 'Não é seguido por ninguém que segues.';
	@override String get notHelpful => 'Não é útil';
	@override String get notInterested => 'Não estou interessado';
	@override String get notSealed => 'Não selado';
	@override String get notSealedYet => 'Ainda não está selado';
	@override String get note => 'nota';
	@override String get noteNotFound => 'A nota não pôde ser encontrada';
	@override String get notePublished => 'A nota foi publicada!';
	@override String get noteIdCopied => 'ID da nota copiado! 👏';
	@override String get walletDataNote => 'Nota: Todos os dados relacionados à sua carteira serão armazenados localmente em segurança e jamais serão partilhados fora dos limites da aplicação.';
	@override String get changeRatingNote => 'Nota: a alteração à tua classificação será válida apenas por 5 minutos, após este período deixarás de a poder desfazer ou de a alterar.';
	@override String get payPublishNote => 'Nota: Certifica-te de que todo o conteúdo que forneces é definitivo, pois a publicação é considerada irreversível e os SATS gastos não são reembolsáveis.';
	@override String get notes => 'notas';
	@override String get notesFromCommunity => 'Notas da comunidade';
	@override String get unTextW3Desc => 'Notas que ainda não têm o status de Útil ou Não Útil.';
	@override String get unTextW1 => 'Notas que receberam o status de Útil';
	@override String get unTextW3 => 'Notas que precisam de mais classificações';
	@override String get unTextW2 => 'Notas que receberam o status de Não Útil';
	@override String get un2 => 'Notas em contínua classificação ';
	@override String get notifications => 'notificações';
	@override String get npubNsecHex => 'npub, nsec ou hex';
	@override String get nwcCopied => 'NWC foi copiado com sucesso!';
	@override String onDate({required Object date}) => 'Em ${date}';
	@override String get onSelectedWalletLinkIt => 'na tua carteira selecionada e vincule-a.';
	@override String get oneTimeRewards => 'Recompensas únicas';
	@override String get ongoing => 'a decorrer';
	@override String get nothingToShowHere => 'Ops! Nada para mostrar aqui!';
	@override String get optionBackgroundColor => 'Cor de fundo da opção';
	@override String get optionTextColor => 'Cor do texto da opção';
	@override String get options => 'opções';
	@override String optionsNumber({required Object number}) => 'Opções: ${number}';
	@override String get orUseYourWallet => 'Ou usa a tua carteira';
	@override String get others => 'outros';
	@override String get privacyNote => 'A nossa aplicação garante o máximo de privacidade ao armazenar, localmente e em segurança, os dados confidenciais dos utilizadores, empregando rigorosa criptografia. Descansa, sustentamos de uma política bastante restrita quanto ao fornecimento de dados, assegurando que informações sensíveis permanecem confidenciais e jamais sairão do equipamento electrónico do utilizador.  ';
	@override String get owner => 'Proprietário';
	@override String get paid => 'pago';
	@override String get paidNote => 'Nota paga';
	@override String get paidNotePublished => 'A nota paga foi publicada!';
	@override String get paidNoteLoading => 'Nota paga a carregar';
	@override String get partialUsersZapped => 'Utilizadores parciais recebem zaps!';
	@override String get pasteNwcAddress => 'Cola o endereço NWC';
	@override String get pasteYourKey => 'Cola a tua chave';
	@override String get pasteKind1063 => 'Cola o teu kind 1063 nevent e envia-o';
	@override String get pasteYourLink => 'Cola o teu teu link e envia-o';
	@override String get pay => 'Pagar';
	@override String payAmount({required Object number}) => 'Pagar ${number} sats';
	@override String get payPublish => 'Paga & Publica';
	@override String get payWithNwc => 'Paga com NWC';
	@override String get paymentFailed => 'Falha no pagamento';
	@override String get paymentSucceeded => 'Pagamento bem-sucedido';
	@override String get paymentSurpassMax => 'Pagamento ultrapassa o valor máximo permitido.';
	@override String get peopleToFollow => 'Pessoas a seguir';
	@override String get permissionInvoiceNotGranted => 'A permissão para pagar faturas não é concedida.';
	@override String get pickYourComponent => 'Escolhe o teu componente';
	@override String get pickYourImage => 'Escolhe a tua imagem';
	@override String get pickYourMedia => 'Escolhe a tua multimidia';
	@override String get pickYourVideo => 'Escolhe o teu vídeo';
	@override String get pictureUrl => 'URL da imagem';
	@override String get plan => 'Plano';
	@override String get submitValidVideoEvent => 'Por favor, submete um evento de vídeo válido';
	@override String get points => 'Pontos';
	@override String get pointsSystem => 'Sistema de pontos';
	@override String get pollCloseDate => 'Data de encerramento da sondagem';
	@override String get pollOptions => 'Opções da sondagem';
	@override String get pollZapPublished => 'A sondagem de zap foi publicada!';
	@override String get popularNotes => 'Notas populares';
	@override String get post => 'Publica';
	@override String get postArticle => 'Publica um artigo';
	@override String get postNotFound => 'Publicação não encontrada';
	@override String get postCuration => 'Publica curadoria';
	@override String get postInNote => 'Publica em nota';
	@override String get postNote => 'Publica nota';
	@override String get postSmartWidget => 'Publica smart widget';
	@override String get postVideo => 'Publica vídeo';
	@override String get postedBy => 'Publicado por';
	@override String get postedFrom => 'publicado de';
	@override String postedOn({required Object date}) => 'Publicado a ${date}';
	@override String get preview => 'Pré-visualização';
	@override String get privKeyCopied => 'A chave privada foi copiada!👏';
	@override String get pro => 'Pro';
	@override String get processCompleted => 'O processo foi concluído';
	@override String get profile => 'Perfil';
	@override String get profileLink => 'Link do perfil';
	@override String get profileCopied => 'O link do perfil foi copiado! 👏';
	@override String get profilePreview => 'Pré-visualização do perfil';
	@override String profileRelays({required Object number}) => 'Relays recomendadas para o perfil - ${number}';
	@override String get publicKey => 'Chave pública';
	@override String get publicKeyCopied => 'A chave pública foi copiada! 👏';
	@override String get publish => 'publicar';
	@override String get publishRemoveDraft => 'Publicar e remover o rascunho';
	@override String get publishedOnText => 'Publicado em';
	@override String publishedOn({required Object date}) => 'Publicado a: ${date}';
	@override String get pullToRefresh => 'Puxe para atualizar';
	@override String get qrCode => 'Código QR';
	@override String get rateHelpful => 'Classifica como útil';
	@override String get rateNotHelpful => 'Classifica como não útil';
	@override String get ratedHelpful => 'Classificado como útil';
	@override String get ratedNotHelpful => 'Classificado como não útil';
	@override String get un1 => 'Classificações de Não Útil em notas que terminaram com um status de Útil';
	@override String get unTextR3 => 'Classificações de Não Útil em notas que terminaram com um status de Útil';
	@override String get un2Desc => 'Classificações em notas que atualmente não têm um status de Útil ou Não Útil';
	@override String get unTextR1 => 'Classificações que ajudaram uma nota a ganhar o status de Útil';
	@override String get unTextR2 => 'Classificações que ajudaram uma nota a ganhar o status de Não Útil';
	@override String get readAboutVerifyingNotes => 'Lê sobre como verificar notas';
	@override String get readArticle => 'Lê o artigo';
	@override String get readMore => 'Lê mais';
	@override String get readOnly => 'Somente leitura';
	@override String get readWrite => 'Lê/Escreve';
	@override String get receive => 'Recebe';
	@override String get receiveSats => 'Recebe sats';
	@override String get recent => 'recente';
	@override String get recentTransactions => 'Transações recentes';
	@override String get recentWithReplies => 'Recente com respostas';
	@override String get reconnectWifi => 'Reconectar a um wi-fi';
	@override String get refresh => 'atualizar';
	@override String get refreshed => 'Atualizado';
	@override String get refreshing => 'A atualizar';
	@override String get relayInUse => 'A relay já está a ser usada';
	@override String relaySettings({required Object number}) => 'Configurações da relay ${number}';
	@override String get relayingStuff => 'A retransmitir coisas...';
	@override String get relays => 'Relays';
	@override String get relaysNotReached => 'Não foi possível alcançar as relays';
	@override String get relaysListUpdated => 'A lista de relays foi atualizada';
	@override String get releaseToLoad => 'Solte para carregar mais';
	@override String get repeatedRewards => 'Recompensas repetidas';
	@override String get replies => 'respostas';
	@override String get reply => 'responder';
	@override String replyingTo({required Object name}) => 'Respondendo a: ${name}';
	@override String get reposted => 'rerepublicado';
	@override String get requestInProgress => 'Solicitação em andamento';
	@override String get reveal => 'Revelar';
	@override String get rewards => 'recompensas';
	@override String get saveDraft => 'Salvar rascunho';
	@override String get saved => 'salvo';
	@override String get scanPay => 'Digitaliza & paga';
	@override String get scanAgain => 'Digitaliza novamente';
	@override String get scanQrCode => 'Digitaliza o código QR';
	@override String get sealed => 'Selado';
	@override String get search => 'pesquisar';
	@override String searchContentByTitle({required Object type}) => 'Pesquisar ${type} pelo título';
	@override String get searchNameNpub => 'Pesquisar por nome, npub, nprofile';
	@override String get searchByUserName => 'Pesquisar por nome de utilizador';
	@override String get searchRelay => 'Pesquisar relay';
	@override String get secureDirectMessaging => 'Mensagens diretas seguras';
	@override String get seeAll => 'Ver tudo';
	@override String get seeAllAttempts => 'Ver todas as tentativas';
	@override String get seeAlso => 'Ver também';
	@override String get seeAnything => 'Viste alguma coisa que desejas melhorar?';
	@override String get seeMore => 'Ver mais';
	@override String get seeOriginal => 'Ver original';
	@override String get seeTranslation => 'Ver tradução';
	@override String get selectAndUploadLocaleImage => 'Seleciona & carrega uma imagem local';
	@override String get selectAdate => 'Seleciona uma data';
	@override String get selectDefaultWallet => 'Seleciona uma carteira padrão nas configurações.';
	@override String get selectUserToZap => 'Seleciona um utilizador para enviares zap (opcional)';
	@override String get selectValidUrlImage => 'Seleciona um Url da imagem válido.';
	@override String get selectWalletTransactions => 'Seleciona uma carteira para obter as transações mais recentes.';
	@override String get selectOneReason => 'Seleciona pelo menos um motivo';
	@override String get selectComponent => 'Seleciona o componente conveniente e edita-o.';
	@override String get send => 'Enviar';
	@override String get sendSats => 'Enviar sats';
	@override String get setProperName => 'Define um nome apropriado';
	@override String get setSatsMoreThanZero => 'Define uma quantidade de sats maior que 0';
	@override String get setBookmarkTitleDescription => 'Define um título e uma descrição para a tua lista de marcadores.';
	@override String get setValidKey => 'Define uma chave válida';
	@override String get setUpYourLink => 'Configura o teu link';
	@override String get setUpYourNevent => 'Configura o teu evento';
	@override String get setYourRating => 'Define a tua classificação';
	@override String get settings => 'configurações';
	@override String get share => 'compartilhar';
	@override String get shareGlimps => 'Partilha um vislumbre de ti próprio, em palavras que pareçam verdadeiras.';
	@override String get shareContent => 'Partilhar conteúdo';
	@override String get shareImage => 'Partilhar imagem';
	@override String get shareLink => 'Partilhar link';
	@override String get shareNaddr => 'Partilhe naddr';
	@override String get shareNoteId => 'Partilhar ID da nota';
	@override String get shareNprofile => 'Partilhar nprofile';
	@override String get shareProfile => 'Partilhar perfil';
	@override String get shareProfileDesc => 'Partilha o teu perfil para alcançar mais pessoas, conecta-te com outras pessoas e aumenta a tua rede';
	@override String get show => 'mostrar';
	@override String get showArticlesNotesSuggestions => 'Mostrar sugestões de artigos/notas';
	@override String get showSecret => 'Mostrar chave secreta!';
	@override String get showStats => 'Mostrar estatísticas';
	@override String get showSuggestedInterests => 'Mostrar interesses sugeridos';
	@override String get showSuggestedPeople => 'Mostrar pessoas sugeridas para seguir';
	@override String get showSuggestions => 'Mostrar sugestões';
	@override String get signIn => 'Entrar';
	@override String get usingViewModeDesc => 'Entra com a tua chave privada e junta-te à comunidade.';
	@override String get size => 'tamanho';
	@override String get slideToPay => 'Desliza para pagar';
	@override String get smartWidget => 'Smart widget';
	@override String get smartWidgetBuilder => 'Criador de smart widget';
	@override String get smartWidgetChecker => 'Verificador de smart widget';
	@override String get smartWidgetNotFound => 'O smart widget não pôde ser encontrado';
	@override String get smartWidgetPublishedSuccessfuly => 'O smart widget foi publicado com sucesso';
	@override String get smartWidgets => 'Smart widgets';
	@override String get smartWidgetsDrafts => 'Rascunhos de smart widgets';
	@override String get smartWidgetsTemplates => 'Modelos de smart widgets';
	@override String get software => 'Programas de Software';
	@override String get somethingWentWrong => 'Há algo errado!';
	@override String get soonUsers => 'Em breve os utilizadores poderão utilizar os pontos consumíveis no seguinte conjunto de atividades:';
	@override String get source => 'Fonte';
	@override String get sourceRecommended => 'Fonte (recomendado)';
	@override String get splitRevenuesWithUsers => 'Divide as receitas com utilizadores';
	@override String get splitZapsWith => 'Divide zaps com';
	@override String get spreadWordSharingContent => 'Divulga o teu conteúdo, partilhando-o em qualquer lugar.';
	@override String get startBuildingSmartWidget => 'Começa a construir e a personalizar o teu smart widget para usar na rede Nostr';
	@override String get startEarningPoints => 'Começa a ganhar e aproveita ao máximo os teus Pontos Yaki 🎉';
	@override String get startSearchContent => 'Começa a pesquisar conteúdo';
	@override String get startSearchPeople => 'Começa a pesquisar por outras pessoas';
	@override String get stickers => 'adesivos';
	@override String get submit => 'enviar';
	@override String get submitBookmarkList => 'Submeter lista de marcadores';
	@override String get submitCuration => 'Submeter curadoria';
	@override String get successfulRelays => 'relays bem-sucedidas';
	@override String get suggestedInterests => 'Interesses sugeridos';
	@override String get suggestions => 'Sugestões';
	@override String get suggestionsBox => 'Caixa de sugestões';
	@override String get summaryOptional => 'Resumo (opcional)';
	@override String get supportYakihonne => 'Apoia YakiHonne';
	@override String get supportedNips => 'Nips suportados';
	@override String get switchAccounts => 'Trocar de contas';
	@override String get taylorExperienceInterests => 'Personaliza a tua experiência selecionando os teus interesses principais';
	@override String get telegramUrl => 'Url do Telegram';
	@override String get templates => 'modelos';
	@override String get text => 'texto';
	@override String get textColor => 'Cor do texto';
	@override String get textCustomization => 'Personalização de texto';
	@override String get textSuccesfulyCopied => 'Texto copiado com sucesso!';
	@override String get theFollowingNote => 'a seguinte nota:';
	@override String get smHaveTitle => 'O smart widget deve ter pelo menos um título';
	@override String get smHaveOneWidget => 'O smart widget deve ter pelo menos um componente.';
	@override String get valueBetweenMinMax => 'O valor deve estar entre a quantia mínima e máxima de sats';
	@override String get noDataFromGpt => 'Existem dados por mostrar do GPT.';
	@override String get oneFeedOptionAvailable => 'Deve haver pelo menos uma opção de feed disponível.';
	@override String get unTextW1Desc => 'Estas notas estão agora a ser exibidas para todas as outras pessoas que vêem a publicação, acrescentando contexto e ajudando a mantendo-as informadas.';
	@override String get unTextW2Desc => 'Estas notas foram classificadas como Não Úteis por um número suficiente de contribuidores, incluindo aqueles que às vezes discordam nas suas avaliações anteriores.';
	@override String get un1Desc => 'Estas classificações são contadas duplamente porque indicam muitas vezes apoio a notas que outros consideraram úteis.';
	@override String get unTextR1Desc => 'Estas classificações identificaram notas Úteis, mostradas a todos, e acrescentam contexto e ajudam a manter as pessoas informadas.';
	@override String get unTextR2Desc => 'Estas classificações melhoram as Notas da Comunidade, fornecendo feedback aos autores das notas e permitindo que os contribuidores se concentrem nas notas mais promissoras';
	@override String get notValidVideoEvent => 'Este evento não é um evento de vídeo válido!';
	@override String get sensitiveContent => 'Este é um conteúdo sensível';
	@override String get emptyVideoUrl => 'Este nevento tem um Url vazio';
	@override String get thisNoteAwaitRating => 'esta nota aguarda classificação da comunidade.';
	@override String get yourNoteAwaitRating => 'esta nota aguarda classificação da comunidade.';
	@override String get smartWidgetConvention => 'Este smart widget não segue a convenção acordada.';
	@override String get useCannotBeZapped => 'Este utilizador não pode receber zaps';
	@override String get thread => 'tópico';
	@override String get thumbnailPreview => 'Pré-visualização da miniatura';
	@override String get title => 'título';
	@override String titleData({required Object description}) => 'Título: ${description}';
	@override String get toBeAbleSendSats => 'Para poderes enviar zaps, certifica-te de conectar a tua carteira bitcoin lighting.';
	@override String get topReasonsSelected => 'Principais motivos selecionados pelos avaliadores:';
	@override String get totalAmount => 'Montante total';
	@override String totalNumber({required Object number}) => 'Total: ${number}';
	@override String get trending => 'tendências';
	@override String get tryAgain => 'Tente novamente';
	@override String get type => 'escrever';
	@override String get typeValidZapQuestion => 'Escreve uma pergunta de sondagem válida!';
	@override String get unableToOpenUrl => 'Não foi possível abrir o URL';
	@override String get undo => 'Desfazer';
	@override String get undoRating => 'Desfazer classificação';
	@override String get unfollow => 'deixar de seguir';
	@override String get unfollowAll => 'Deixar de seguir todos';
	@override String get pendingUnfollowing => 'A deixar de seguir...';
	@override String get unknown => 'Desconhecido';
	@override String get unknownVerifiedNote => 'Nota de desconhecido verificada';
	@override String get unlocked => 'Desbloqueado';
	@override String get unmute => 'ativar o som';
	@override String get unmuteUser => 'Remover silêncio ao utilizador';
	@override String get untitled => 'Sem título';
	@override String get update => 'atualizar';
	@override String get updateInterests => 'Atualizar interesses';
	@override String get updateProfile => 'Atualizar perfil';
	@override String get updatedSuccesfuly => 'Atualizado com sucesso';
	@override String get updates => 'Atualizações';
	@override String get updatesNews => 'Notícias de atualizações';
	@override String get uploadAndUse => 'Carrega & usa';
	@override String get uploadImage => 'Carregar imagem';
	@override String get uploadingImage => 'A carregar imagem...';
	@override String get upvotes => 'Votos positivos';
	@override String get url => 'Url';
	@override String get useAmber => 'Usar Amber';
	@override String get useInvoice => 'Usar fatura';
	@override String get useTemplate => 'Usar modelo';
	@override String get user => 'utilizador';
	@override String get userCannotBeFound => 'O utilizador não pôde ser encontrado';
	@override String get userHasBeenMuted => 'O utilizador foi silenciado';
	@override String get userHasBeenUnmuted => 'O utilizador foi reativado';
	@override String get userName => 'Nome de utilizador';
	@override String get userNameCopied => 'O nome de utilizador foi copiado com sucesso!';
	@override String get userZappedSuccesfuly => 'O utilizador recebeu zapscom sucesso';
	@override String get userImpact => 'Impacto do utilizador';
	@override String get userRelays => 'Relays do utilizador';
	@override String get usingExternalSign => 'Usando um signer externo';
	@override String get value => 'valor';
	@override String get verifyNip05 => 'Endereço Nostr verificado (NIP 05)';
	@override String get verifiedNoteNotFound => 'Não foi possível encontrar a nota verificada';
	@override String get verifyNotes => 'Verificar notas';
	@override String get verifyingNote => 'A verificar nota';
	@override String get version => 'Versão';
	@override String get video => 'vídeo';
	@override String get videoNotFound => 'Não foi possível encontrar o vídeo';
	@override String get videoCustomization => 'Personalização de vídeo';
	@override String get videoAddedCuration => 'O vídeo foi adicionado à tua curadoria.';
	@override String get videoUrl => 'Url do vídeo';
	@override String get videos => 'vídeos';
	@override String get videosAvailableCuration => 'Vídeos disponíveis nesta curadoria';
	@override String get view => 'visualizar';
	@override String get viewProfile => 'Ver perfil';
	@override String get viewQrCode => 'Ver código QR';
	@override String get views => 'Visualizações';
	@override String get visitProfile => 'Visitar perfil';
	@override String get voteNotSubmitted => 'Não foi possível submeter o voto';
	@override String get voteRequired => 'É necessário votar para exibir estatísticas.';
	@override String get votesByUsers => 'Votos por utilizadores';
	@override String get votesByZaps => 'Votos por zaps';
	@override String votesNumber({required Object number}) => 'Votos: ${number}';
	@override String get waitingGenerationOfInvoice => 'A aguardar a criação de faturas.';
	@override String get wallet => 'carteira';
	@override String get walletNotLinked => 'A carteira não pode ser vinculada. Endereço Lighting errado';
	@override String get walletCreated => 'A carteira foi criada com sucesso';
	@override String get walletLinked => 'A carteira foi vinculada com sucesso';
	@override String get wallets => 'carteiras';
	@override String get warning => 'aviso';
	@override String get watchNow => 'vê agora';
	@override String get noLnInNwc => 'Não nos foi possível recuperar o endereço do teu segredo NWC. Por favor, verifica o teu provedor de serviços de Lighting para copiar o teu endereço ou para convenientemente atualizares o teu perfil.';
	@override String get readAboutVerifyingNotesDesc => 'Criamos um artigo para te ajudar a entender melhor o nosso objetivo';
	@override String get website => 'Website';
	@override String get weight => 'peso';
	@override String get whatThinkThis => 'O que pensas sobre isto?';
	@override String get whatThinkOfThat => 'O que pensas sobre isso?';
	@override String get whatsOnYourMind => 'Em que estás a pensar?';
	@override String get whatsThis => 'O que é isto?';
	@override String get whyVerifyingNotes => 'Porquê as notas de verificação?';
	@override String get widgets => 'widgets';
	@override String get writeCommentOptional => 'Escreve um comentário (opcional)';
	@override String get writeYourMessage => 'Escreva uma mensagem';
	@override String get writeNote => 'Escreve uma nota';
	@override String get writeSummary => 'Escreve um resumo';
	@override String get writeValidNote => 'Anota uma nota válida!';
	@override String get writeOnly => 'Escrever apenas';
	@override String get writeSomethingAboutYou => 'Escreve algo sobre sobre ti!';
	@override String get writeSomething => 'Escreve alguma coisa...';
	@override String get writeYourText => 'Escreve o teu texto';
	@override String get xUrl => 'Url do X';
	@override String get yakiChest => 'Baú Yaki';
	@override String get yakihonne => 'YakiHonne';
	@override String get yakihonneChest => 'Baú do YakiHonne!';
	@override String get yakihonneConsPoints => 'Pontos consumíveis do YakiHonne';
	@override String get yakihonneImprovements => 'Melhorias do YakiHonne';
	@override String get yakihonneNote => 'Nota do YakiHonne';
	@override String get yakihonneNotification => 'Notificação do YakiHonne';
	@override String get yakiNwc => 'NWC do YakiHonne';
	@override String get clearAppCacheDesc => 'Estás prestes a limpar o cache da aplicação. Desejas continuar?';
	@override String get deleteWalletDesc => 'Estás prestes a excluir esta carteira. Desejas prosseguir?';
	@override String get linkWalletDesc => 'Estás prestes a substituir a tua carteira anterior e a vincular uma carteira nova ao teu perfil. Desejas prosseguir?';
	@override String get undoRatingDesc => 'Você está prestes a desfazer sua classificação. Deseja prosseguir?';
	@override String get alreadyLoggedIn => 'Já te encontras conectado!';
	@override String get deleteAccountMessage => 'Estás a tentar aceder a uma conta que foi posteriormente eliminada.';
	@override String get loggedToYakiChest => 'Estás conectado ao baú do Yakihonne';
	@override String get loggedIn => 'Estás conectado!';
	@override String get notUsingSecureDms => 'Já não estás a usar as Dms seguras';
	@override String get usingSecureDms => 'Estás agora a usar as Dms seguras';
	@override String get usingExternalSignDesc => 'Estás a usar um signer externo';
	@override String get secKeyWalletDesc => 'Podes encontrar a chave secreta da sua conta e o segredo da conexão da carteira nas tuas configurações. Estas chaves são essenciais para garantir o acesso à tua conta e carteira. Por favor, mantem ambas em segurança e privadas.';
	@override String get secKeyDesc => 'Podes encontrar a chave secreta da sua conta nas tuas configurações. Esta chave é essencial para garantir o acesso à tua conta. Por favor, mantém-la em segurança e privada.';
	@override String get uploadSendMedia => 'Podes fazer o carregamento e enviar multimidia logo após a selecionar ou à sua captação.';
	@override String get uploadPasteUrl => 'Podes fazer o carregamento ou colar um url para a tua imagem preferida';
	@override String get canUploadPastLink => 'Podes fazer o carregamento, colar um link ou escolher um evento kind 1063 para o teu vídeo.';
	@override String get findPaidNoteCorrect => 'Achas esta nota paga correta.';
	@override String get findPaidNoteMisleading => 'Achas esta nota paga enganosa.';
	@override String get alreadyContributed => 'Já contribuiste';
	@override String get alreadyVoted => 'Já votaste nesta sondagem';
	@override String congratsDesc({required Object number}) => 'Foste recompensado com ${number} Xp pelas seguintes ações, sê ativo e ganha recompensas!';
	@override String get youHaveLeftNote => 'Deixaste uma nota nesta nota paga:';
	@override String get noRewards => 'Não tens recompensas, interage ou escreve notas verificadas para as obter.';
	@override String get noWalletLinkedMessage => 'Não tens nenhuma carteira vinculada ao teu perfil, desejas vincular esta carteira?';
	@override String get noWalletLinkedToYouProfile => 'Não tens nenhuma carteira vinculada ao teu perfil.';
	@override String get youHaveRated => 'Classificaste';
	@override String get ratedNoteSealed => 'Avaliaste a seguinte nota, a qual foi selada:';
	@override String get youRatedHelpful => 'classificaste isto como útil';
	@override String get youRatedNotHelpful => 'classificaste isto como não útil';
	@override String ownReceivedSat({required Object number}) => 'Você recebeu ${number} Sábados';
	@override String ownSentSat({required Object number}) => 'Você enviou ${number} Sats';
	@override String get voteToSeeStats => 'Você deveria votar para poder ver as estatísticas';
	@override String get you => 'Você: ';
	@override String confirmDeleteContent({required Object type}) => 'Você está prestes a excluir isto ${type}, deseja prosseguir?';
	@override String get confirmDeleteBookmarkList => 'Você está prestes a excluir esta lista de favoritos. Deseja continuar?';
	@override String get confirmDeleteDraft => 'Você está prestes a excluir este rascunho. Deseja prosseguir?';
	@override String get deleteCoverPicDesc => 'Você está prestes a excluir sua foto de capa. Deseja prosseguir?';
	@override String get youreAllSet => 'Você está pronto';
	@override String get switchToMonolayout => 'Você está mudando para um layout mono e possui elementos em ambos os lados. Isso apagará o conteúdo do contêiner. Deseja continuar?';
	@override String get usingViewMode => 'Você está usando o modo de visualização';
	@override String muteUserDesc({required Object name}) => 'Você está prestes a silenciar ${name}, deseja prosseguir?';
	@override String unmuteUserDesc({required Object name}) => 'Você está prestes a ativar o som ${name}, deseja prosseguir?';
	@override String get articlePublished => 'Seu artigo foi publicado!';
	@override String get yourDisplayName => 'Seu nome de exibição';
	@override String get yourNoteSealed => 'Sua seguinte nota acabou de ser selada:';
	@override String get yourName => 'Seu nome';
	@override String get ratingDeleted => 'Sua avaliação foi excluída';
	@override String get ratingSubmittedCheckReward => 'Sua classificação foi enviada. Verifique sua página de recompensas para reivindicar sua recompensa de classificação';
	@override String get verifiedNoteAdded => 'A tua nota verificada foi adicionada. Verifica a tua página de recompensas para resgatar a tua recompensa por escrito';
	@override String get verifiedNoteSealed => 'A tua nota verificada foi selada.';
	@override String get yourWebsite => 'O teu Website';
	@override String get youtubeUrl => 'Url do YouTube';
	@override String get zap => 'zap';
	@override String get zapPoll => 'Sondagem Zap';
	@override String get zapPollCustomization => 'Personalização da sondagem Zap';
	@override String get zapPollNevent => 'Sondagem Zap nevent';
	@override String get zapSplits => 'Divisões de Zap';
	@override String get zappers => 'Zappers';
	@override String get zaps => 'zaps';
	@override String get zapReceived => 'Zaps recebidos';
	@override String get zapSent => 'Zaps enviados';
	@override String get comingSoon => 'Em breve';
	@override String get content => 'Contente';
	@override String expiresOn({required Object date}) => 'Expira em ${date}';
	@override String get reactions => 'Reações';
	@override String get reposts => 'Republicações';
	@override String get collapseNote => 'Recolher nota';
	@override String get notifDisabled => 'As notificações estão desativadas!';
	@override String get notifDisabledMessage => 'As notificações estão desabilitadas para este tipo, você pode habilitá-las nas configurações de notificações.';
	@override String get oneNotifOptionAvailable => 'Deve haver pelo menos uma opção de notificação disponível.';
	@override String get readAll => 'Leia tudo';
	@override String get usernameTaken => 'O nome de usuário está em uso';
	@override String get usernameRequired => 'O nome de usuário é obrigatório';
	@override String get deleteWalletConfirmation => 'Certifique-se de salvar sua frase de conexão NWC com segurança, pois não podemos ajudar na recuperação de carteiras perdidas.';
	@override String get unsupportedKind => 'Tipo não compatível';
	@override String get analyticsCrashlytics => 'Crashytics';
	@override String get analyticsCache => 'Crashlytics e cache';
	@override String get analyticsCacheOn => 'A Crashytics foi ativada.';
	@override String get analyticsCacheOff => 'Crashytics foi desligado.';
	@override String get shareNoUsage => 'Você não compartilha que a Crashlytics conosco no momento.';
	@override String get wantShareAnalytics => 'Quer compartilhar o Crashlytics?';
	@override String get yakihonneAnCr => 'Crashlytics de Yakihonne';
	@override String get crashlyticsTerms => 'A coleta de Crashlytics anonimizados é vital para refinar os recursos e a experiência do usuário do nosso aplicativo. ';
	@override String get collectAnonymised => 'Coletamos o Crashytics anonimizado para melhorar a experiência do aplicativo.';
	@override String get linkWalletToProfile => 'Link Wallet com seu perfil';
	@override String get linkWalletToProfileDesc => 'A carteira vinculada será usada para receber SATs';
	@override String get noWalletLinked => 'Você não tem carteira ligada ao seu perfil, considere vincular um dos seus no menu acima';
	@override String get addPoll => 'Adicionar pesquisa';
	@override String get browsePolls => 'Navegue por pesquisas';
	@override String get maciPolls => 'Poll Maci';
	@override String get beta => 'Beta';
	@override String get choosePollType => 'Escolha um tipo de enquete';
	@override String get created => 'Criado';
	@override String get tallying => 'Contatando';
	@override String get ended => 'Terminou';
	@override String get closed => 'Fechado';
	@override String get voteResultsBy => 'Resultados da votação por';
	@override String get votes => 'votos';
	@override String get voiceCredit => 'Crédito de voz';
	@override String get viewDetails => 'Ver detalhes';
	@override String get signup => 'Inscrever-se';
	@override String get notDownloadProof => 'Não foi possível baixar provas';
	@override String get name => 'Nome';
	@override String get status => 'Status';
	@override String get circuit => 'Circuito';
	@override String get votingSystem => 'Sistema de votação';
	@override String get proofSystem => 'Sistema de prova';
	@override String get gasStation => 'Posto de gasolina';
	@override String get totalFund => '(Fundo Total)';
	@override String get roundStart => 'Início redondo';
	@override String get roundEnd => 'Final redondo';
	@override String get operator => 'Operador';
	@override String get contractCreator => 'Criador de contratos';
	@override String get contractAddress => 'Endereço do contrato';
	@override String get blockHeight => 'Altura do bloco';
	@override String atContractCreation({required Object number}) => '${number} (na criação de contratos)';
	@override String get zkProofs => 'Provas de zk';
	@override String get downloadZkProofs => 'Baixar provas';
	@override String get walletConnectionString => 'String de conexão com carteira';
	@override String get walletConnectionStringDesc => 'Certifique -se de copiar ou exportar com segurança sua sequência de conexão com carteira. ';
	@override String get export => 'Exportar';
	@override String get logout => 'Log Out';
	@override String get exportAndLogout => 'Exportar e fazer logon';
	@override String get exportWalletsDesc => 'Parece que você tem carteiras ligadas à sua conta. ';
	@override String get manageWallets => 'Gerenciar carteiras';
	@override String get roundDuration => 'Duração redonda';
	@override String startAt({required Object date}) => 'Começa em: ${date}';
	@override String get loginAction => 'Conecte-se';
	@override String get addPicture => 'Adicione a imagem';
	@override String get editPicture => 'Editar imagem';
	@override String get exportKeys => 'Chaves de exportação';
	@override String get mutedUser => 'Usuário silenciado';
	@override String get unaccessibleContent => 'Conteúdo inacessível';
	@override String get mutedUserDesc => 'Você silenciou este usuário, considere desmembrar para visualizar este conteúdo';
	@override String get commentHidden => 'Este comentário está escondido';
	@override String get upcoming => 'Por vir';
	@override String get exportCredentials => 'Credenciais de exportação';
	@override String get loginToYakihonne => 'Faça login em Yakihonne';
	@override String get alreadyUser => 'Já é um usuário?';
	@override String get createPoll => 'Criar enquete';
	@override String get gasStationTotal => 'Posto de gasolina (total financiado)';
	@override String get gasStationRemaining => 'Posto de gasolina (saldo restante)';
	@override String get paste => 'Colar';
	@override String get manual => 'Manual';
	@override String get contacts => 'Contatos';
	@override String get typeManualDesc => 'Digite o endereço de raios, fatura de raios ou lnurl';
	@override String get useValidPaymentRequest => 'Por favor, use solicitação de pagamento válida';
	@override String get save => 'Salvar';
	@override String get saveImageGallery => 'A imagem foi baixada na sua galeria';
	@override String get errorSavingImage => 'Ocorreu o erro ao baixar a imagem';
	@override String get copyImageGallery => 'A imagem foi copiada para sua área de transferência';
	@override String get errorCopyImage => 'Ocorreu o erro ao copiar a imagem';
	@override String get scan => 'Scan';
	@override String get invalidLightningAddress => 'Endereço de raios inválidos';
	@override String get deleteAccountDesc => 'Você está prestes a excluir sua conta, deseja prosseguir?';
	@override String get paymentFailedInvoice => 'Falha no pagamento: verifique a validade desta fatura';
	@override String get validSatsAmount => 'Defina uma quantidade válida de SATs';
	@override String get placeholder => 'Espaço reservado';
	@override String get inputFieldCustomization => 'Personalização do campo de entrada';
	@override String get addInputField => 'Adicione o campo de entrada';
	@override String get addButton => 'Adicionar botão';
	@override String get selectImage => 'Selecione Imagem';
	@override String get moveLeft => 'Mover para a esquerda';
	@override String get moveRight => 'Mova -se para a direita';
	@override String get buttonRequired => 'Deve haver pelo menos um botão disponível';
	@override String get missingInputDesc => 'Parece que você está usando uma das funções personalizadas que requer um componente de campo de entrada sem incorporar um no seu widget inteligente, adicione um campo de entrada para que a função funcione corretamente.';
	@override String get countdown => 'Contagem regressiva';
	@override String get contentEndsAt => 'O conteúdo termina em';
	@override String get countdownTime => 'O tempo de contagem regressiva é obrigatório';
	@override String get contentEndsDate => 'O conteúdo termina a data é obrigatória';
	@override String get lnMandatory => 'O endereço de relâmpago é obrigatório';
	@override String get pubkeysMandatory => 'Pelo menos um perfil é obrigatório';
	@override String get buttonNoUrl => 'URLs de botões são obrigatórios';
	@override String get shareWidgetImage => 'Compartilhe a imagem do widget';
	@override String get inputField => 'Campo de entrada';
	@override String get noReplies => 'Sem respostas';
	@override String get message => 'Mensagem';
	@override String get chat => 'Bater papo';
	@override String get onlyLettersNumber => 'Somente cartas e números permitidos';
	@override String get appCache => 'Cache de app';
	@override String get cachedData => 'Dados em cache';
	@override String get cachedMedia => 'Mídia em cache';
	@override String get cacheCleared => 'Cache foi limpo';
	@override String get closeAppClearingCache => 'É preferível reiniciar o aplicativo ao limpar o cache para garantir que todas as alterações tenham efeito e o aplicativo seja executado sem problemas';
	@override String get appCacheNotice => 'Seu cache de aplicativos está crescendo em tamanho. ';
	@override String get manageCache => 'Gerencie o cache';
	@override String get filterByTime => 'Filtre por tempo';
	@override String get allTime => 'O tempo todo';
	@override String get oneMonth => '1 mês';
	@override String get threeMonths => '3 meses';
	@override String get sixMonths => '6 meses';
	@override String get oneYear => '1 ano';
	@override String get defaultZapAmount => 'Valor Zap padrão';
	@override String get oneTapZap => 'Ativar um toque zap';
	@override String get verify => 'Verificar';
	@override String get reset => 'reiniciar';
	@override String get appCannotVerified => 'O aplicativo não pode ser verificado ou inválido';
	@override String get useValidAppUrl => 'Use um URL de aplicativo válido';
	@override String get app => 'App';
	@override String get userNotConnected => 'Usuário não conectado';
	@override String get userCannotSignEvent => 'Este usuário não pode assinar eventos.';
	@override String get invalidEvent => 'Evento inválido';
	@override String get eventCannotBeSigned => 'Evento não pode ser assinado';
	@override String get signEvent => 'Evento de assinatura';
	@override String get sign => 'Sinal';
	@override String get signPublish => 'Sign & Publish';
	@override String get signEventDes => 'Você está prestes a assinar o seguinte evento';
	@override String get enableAutomaticSigning => 'Ativar assinatura automática';
	@override String get tools => 'Ferramentas';
	@override String get searchSmartWidgets => 'Procure widgets inteligentes';
	@override String get noToolsAvailable => 'Nenhuma ferramenta disponível';
	@override String get underMaintenance => 'Sob manutenção';
	@override String get smartWidgetMaintenance => 'O Widget Smart está abaixado para manutenção. ';
	@override String get mySavedTools => 'Minhas ferramentas salvas';
	@override String get availableTools => 'Ferramentas disponíveis';
	@override String get remove => 'Remover';
	@override String get youHaveNoTools => 'Você não tem ferramentas';
	@override String get discoverTools => 'Descubra ferramentas publicadas para ajudá -lo com sua criação de conteúdo';
	@override String get addWidgetTools => 'Adicione ferramentas de widget';
	@override String get widgetSearch => 'Pesquisa de widgets';
	@override String get widgetSearchDesc => 'Procurando por widgets inteligentes publicados e o que as pessoas fizeram';
	@override String get getInspired => 'Inspire -se';
	@override String get getInspirtedDesc => 'Peça à nossa IA para ajudá -lo a construir seu widget inteligente';
	@override String get trySearch => 'Experimente diferentes métodos de pesquisa';
	@override String get typeForCommands => 'Tipo / para comandos';
	@override String get loadMore => 'Carregar mais';
	@override String searchingFor({required Object name}) => 'Procurar: ${name}';
	@override String get playground => 'Playground';
	@override String get typeKeywords => 'Tipo Palavras -chave (ou seja: palavra -chave1, palavra -chave2 ..)';
	@override String get enableGossip => 'Modelo de fofoca';
	@override String get enableGossipDesc => 'O modelo de fofoca está desativado por padrão. ';
	@override String get enableExternalBrowser => 'Use navegador externo';
	@override String get restartAppTakeEffect => 'Reinicie o aplicativo para que a ação entre em vigor';
	@override String get tips => 'Pontas';
	@override String get docs => 'Documentos';
	@override String get tryMiniApp => 'Experimente seu mini-aplicativo com testes interativos e práticos.';
	@override String get exploreOurRepos => 'Explore nossos repositórios ou verifique nossos Widgets Smart.';
	@override String get bringAi => 'Estamos trazendo ai!';
	@override String get bringAiDesc => 'Estamos criando um assistente de IA para otimizar seu trabalho com widgets programáveis ​​e desenvolvimento de mini-app-mantenha-se de olho!';
	@override String notesCount({required Object number}) => '${number} Nota (s)';
	@override String mixedContentCount({required Object number}) => '${number} contente';
	@override String get noApp => 'Nenhum aplicativo adequado pode ser encontrado para abrir o arquivo exportado';
	@override String andMore({required Object number}) => '& ${number} outros)';
	@override String get addFilter => 'Adicione o filtro';
	@override String get entitleFilter => 'Direito do filtro';
	@override String get includedWords => 'Palavras incluídas';
	@override String get excludedWords => 'Palavras excluídas';
	@override String get hideSensitiveContent => 'Ocultar conteúdo sensível';
	@override String get mustIncludeThumbnail => 'Deve incluir miniatura';
	@override String get forArticles => 'Para artigos';
	@override String get forVideos => 'Para vídeos';
	@override String get forCurations => 'Para curações';
	@override String get articleMinWords => 'Conteúdo contagem de palavras mínimas';
	@override String get showOnlyArticleMedia => 'Mostre apenas artigos com mídia';
	@override String get showOnlyNotesMedia => 'Mostre apenas notas com mídia';
	@override String get curationsType => 'Tipo de curadoria';
	@override String get minItemCount => 'Itens mínimos contam';
	@override String get addWord => 'Adicione uma palavra adequada';
	@override String get wordNotInIncluded => 'Verifique se a palavra não está nas palavras incluídas';
	@override String get wordNotInExcluded => 'Verifique se a palavra não está nas palavras excluídas';
	@override String get fieldRequired => 'Campo necessário';
	@override String get filterAdded => 'Filtro foi adicionado';
	@override String get filterUpdated => 'O filtro foi atualizado';
	@override String get filterDeleted => 'O filtro foi excluído';
	@override String get filters => 'Filtros';
	@override String get contentFeed => 'Feed de conteúdo';
	@override String get communityFeed => 'Feed comunitário';
	@override String get relaysFeed => 'Relés feed';
	@override String get marketplaceFeed => 'Feed de mercado';
	@override String get addYourFeed => 'Adicione seu feed preferido';
	@override String get myList => 'Minha lista';
	@override String get allFreeFeeds => 'Todos os feeds gratuitos';
	@override String get noRelays => 'Nenhum relés está presente';
	@override String get addRelays => 'Adicione sua lista de revezamentos para desfrutar de um feed limpo e personalizado';
	@override String get adjustYourFeedList => 'Ajuste sua lista de feeds';
	@override String get addRelayUrl => 'Adicione URL do relé';
	@override String get feedOptionEnabled => 'Pelo menos uma opção de alimentação deve ser ativada';
	@override String get feedSetUpdate => 'O conjunto de feeds foi atualizado';
	@override String get global => 'Global';
	@override String get fromNetwork => 'Da rede';
	@override String get top => 'Principal';
	@override String get showFollowingList => 'Seu feed atual é baseado na lista seguinte de outra pessoa, comece a seguir as pessoas para adaptar seu feed de sua preferência';
	@override String get from => 'De';
	@override String get to => 'Para';
	@override String get dayMonthYear => 'dd/mm/aaaa';
	@override String get fromDateMessage => 'A data de \'de\' deve ser mais cedo do que \'a\' data';
	@override String get toDateMessage => '\'Data\' deve ser mais tarde que \'data\'';
	@override String get noResults => 'Sem resultados';
	@override String get noResultsFilterMessage => 'Parece que você está aplicando um filtro personalizado, por favor ajuste os parâmetros e datas para adquirir mais dados';
	@override String get noResultsNoFilterMessage => 'Nada foi encontrado, altere sua fonte de conteúdo ou aplique diferentes parâmetros de filtro';
	@override String get addToNotes => 'Adicione às notas';
	@override String get addToDiscover => 'Adicione para descobrir';
	@override String get shareRelayContent => 'Compartilhe o conteúdo do relé';
	@override String get shareRelayUrl => 'Compartilhe URL do relé';
	@override String get basic => 'Básico';
	@override String get privateMessages => 'Mensagens privadas';
	@override String get pushNotifications => 'Notificações push';
	@override String get repliesView => 'Visualização de respostas';
	@override String get threadView => 'Fio';
	@override String get boxView => 'Caixa';
	@override String get viewAs => 'Ver como';
	@override String get feedSettings => 'Configurações de alimentação';
	@override String get appliedFilterDesc => 'Esta nota está oculta devido ao filtro aplicado atual.';
	@override String get showNote => 'Mostre nota';
	@override String get allMedia => 'Toda a mídia';
	@override String get searchInNostr => 'Pesquise em Nostr';
	@override String get findPeopleContent => 'Encontre pessoas, anotações e conteúdo';
	@override String get activeService => 'Serviço ativo';
	@override String get regularServers => 'Servidores regulares';
	@override String get blossomServers => 'Servidores de flor';
	@override String get mirrorAllServer => 'Espelhe todos os servidores';
	@override String get mainServer => 'Servidor principal';
	@override String get select => 'Selecione';
	@override String get noServerFound => 'Nenhum servidor encontrado';
	@override String get serverExists => 'O servidor já existe em sua lista';
	@override String get invalidUrl => 'Formato de URL inválido';
	@override String get serverPath => 'Caminho do servidor';
	@override String get errorAddingBlossom => 'Ocorreu o erro ao adicionar servidor de flor';
	@override String get errorSelectBlossom => 'Ocorreu o erro ao selecionar o servidor de flor';
	@override String get errorDeleteBlossom => 'Ocorreu o erro ao excluir o servidor de flor';
	@override String get wotConfig => 'Web of Trust Configuration';
	@override String get wot => 'Web of Trust';
	@override String get wotThreshold => 'Limite da Web of Trust';
	@override String get postActions => 'Pós -ações';
	@override String get enabledFor => 'Ativado para';
	@override String get dmRelayTitle => 'Mensagens privadas Os relés não estão configurados!';
	@override String get dmRelayDesc => 'Atualize sua lista de relés de acordo. ';
	@override String get youFollow => 'Você segue';
	@override String get quotaLimit => 'Você excedeu seu limite diário de cota';
	@override String get alwaysUseExternal => 'Sempre use zaps de carteira externos';
	@override String get alwaysUseExternalDesc => 'Use um aplicativo de carteira de raios externos em vez da carteira embutida de Yakihonne para todas as transações ZAP.';
	@override String get unreachableExternalWallet => 'Carteira externa inacessível';
	@override String get secureStorageDesc => 'Suas chaves são armazenadas com segurança no seu dispositivo e nunca compartilhadas conosco ou com qualquer outra pessoa.';
	@override String get pubkeySharedDesc => 'Seguro de compartilhar - isso identifica você no Nostr.';
	@override String get privKeyDesc => 'Mantenha -se privado - faça o backup com segurança para acessar sua conta em outro lugar.';
	@override String get settingsKeysDesc => 'Gerencie suas teclas NOSTR para identidade de rede, assinatura de eventos e pós -autenticação.';
	@override String get settingsRelaysDesc => 'Configure conexões de relé NOSTR para armazenar e distribuir eventos.';
	@override String get settingsCustomizationDesc => 'Personalize sua exibição de feed, gestos, pré -visualizações e preferências de Yakihonne para uma melhor experiência na nariz.';
	@override String get settingsNotificationsDesc => 'Notificações de controle para mensagens, menções, reações e outros eventos da nariz.';
	@override String get settingsContentDesc => 'Controle interações de conteúdo, configurações de privacidade, manuseio de mídia e preferências de mensagens no Nostr.';
	@override String get settingsLanguageDesc => 'Escolha o seu idioma preferido para a interface Yakihonne e a tradução de conteúdo.';
	@override String get settingsWalletDesc => 'Conecte e gerencie as carteiras Lightning Bitcoin para enviar/receber zaps com quantidades personalizáveis e integração externa.';
	@override String get settingsAppearanceDesc => 'Personalize a aparência visual de Yakihonne para corresponder às suas preferências e à visualização do conforto.';
	@override String get settingsCacheDesc => 'Gerencie o monitoramento do desempenho do aplicativo, o relatório de erros e a otimização de armazenamento para operação suave.';
	@override String get addQuickRelayDesc => 'Adicione rapidamente um novo revezamento entrando em seu URL.';
	@override String get fewerRelays => 'Menos relés estáveis = melhor desempenho e sincronização mais rápida.';
	@override String get greenDotsDesc => 'Os pontos verdes mostram conexões ativas.';
	@override String get redDotsDesc => 'Os pontos vermelhos mostram relés offline.';
	@override String get greyDotsDesc => 'Os pontos cinza mostram relés pendentes.';
	@override String get homeFeedCustomDesc => 'Escolha Responder o estilo de exibição (caixa ou tópico) e gerencie as preferências de sugestões para pessoas, conteúdo e interesses.';
	@override String get NewPostDesc => 'Escolha o que acontece quando você pressiona há muito tempo ao criar postagens (atualmente definidas para observar).';
	@override String get profilePreviewDesc => 'Mostre visualizações ao perfil de usuário ao tocar em nomes de usuário em seu feed.';
	@override String get collapseNoteDesc => 'Minimize automaticamente as postagens longas para manter seu feed limpo e legível.';
	@override String get pushNotificationsDesc => 'Obtenha alertas instantâneos no seu dispositivo. ';
	@override String get privateMessagesDesc => 'Seja alertado para novas mensagens diretas e conversas privadas.';
	@override String get followingDesc => 'Seja notificado quando as pessoas que você seguirem postagem de novo conteúdo.';
	@override String get mentionsDesc => 'Seja alertado quando alguém mencionar ou responder às suas postagens.';
	@override String get repostsDesc => 'Seja alertado quando alguém compartilha ou repasse seu conteúdo.';
	@override String get reactionsDesc => 'Seja notificado quando alguns curtidas ou reagirem às suas postagens.';
	@override String get zapDesc => 'Seja notificado ao receber dicas de bitcoin (zaps) em suas postagens.';
	@override String get muteListDesc => 'Veja e gerencie os usuários que você impediu de aparecer em seu feed.';
	@override String get mediaUploaderDesc => 'Escolha qual serviço carrega suas imagens e arquivos de mídia.';
	@override String get autoSignDesc => 'Assine automaticamente os eventos solicitados por mini aplicativos (widgets de ação/ferramenta) sem confirmação manual a cada vez.';
	@override String get gossipDesc => 'Gerenciamento sofisticado de relé que encontra automaticamente as postagens de seus seguidores em diferentes relés, minimizando conexões e se adaptando aos relés offline.';
	@override String get useExternalBrowsDesc => 'Abra os links no seu aplicativo de navegador padrão em vez do navegador embutido.';
	@override String get secureDmDesc => 'Use o mais recente padrão de mensagens privadas (NIP-17) com criptografia avançada. ';
	@override String get wotConfigDesc => 'Um mecanismo de confiança descentralizado usando atestados sociais para estabelecer reputação dentro do protocolo Nostr.';
	@override String get appLangDesc => 'Escolha o idioma para a interface, menus e botões de Yakihonne.';
	@override String get contentTransDesc => 'Selecione o serviço de tradução para postagens em idiomas estrangeiros.';
	@override String get planDesc => 'Seu nível atual de tradução e limites de uso.';
	@override String get manageWalletsDesc => 'Adicione e organize suas carteiras de raios para enviar e receber zaps de bitcoin no Nostr.';
	@override String get defaultZapDesc => 'Defina o valor padrão do Bitcoin (nos SATs) ao enviar zaps rápidos para as postagens.';
	@override String get enableZapDesc => 'Uma torneira envia o valor padrão instantaneamente. ';
	@override String get externalWalletDesc => 'Use um aplicativo de carteira de raios externos em vez da carteira embutida de Yakihonne para todas as transações ZAP.';
	@override String get fontSizeDesc => 'Ajuste o tamanho do texto em todo o aplicativo para melhor legibilidade - use o controle deslizante para aumentar o texto maior ou menor.';
	@override String get appThemeDesc => 'Alterne entre o modo claro e escuro para personalizar a aparência visual do aplicativo.';
	@override String get crashlyticsDesc => 'Relatórios de falhas anônimos e análise de aplicativos para ajudar a melhorar o desempenho e corrigir bugs. ';
	@override String get showSuggDesc => 'Exiba recomendações gerais de conteúdo em seu feed.';
	@override String get showSuggPeople => 'Mostre usuários recomendados a seguir com base em sua atividade.';
	@override String get showSuggContent => 'Exiba postagens e artigos recomendados em seu feed.';
	@override String get showSuggInterests => 'Mostre recomendações de tópico e interesse para descoberta.';
	@override String get striveToMake => 'Nós nos esforçamos para tirar o melhor proveito de Nostr, nos apoiar abaixo ou nos enviar seu valioso feed: Zap, DMS, Github.';
	@override String get errorAmber => 'Você rejeitou ou já está conectado ao Amber';
	@override String get useOneRelay => 'Você deve manter pelo menos um relay conectado';
	@override String get automaticPurge => 'Limpeza automática de cache';
	@override String get automaticPurgeDesc => 'Limpa automaticamente o cache do aplicativo quando ele atinge 2GB. Mantém o desempenho e evita o uso excessivo de armazenamento.';
	@override String get customServices => 'Serviços personalizados';
	@override String get defaultServices => 'Serviços padrão';
	@override String get addService => 'Adicionar serviço';
	@override String get customServicesDesc => 'Serviços personalizados disponíveis adicionados por você.';
	@override String get urlRequired => 'URL obrigatório';
	@override String get serviceAdded => 'O serviço foi adicionado';
	@override String get showRawEvent => 'Mostrar evento bruto';
	@override String get rawEventData => 'Dados brutos do evento';
	@override String get copyRawEventData => 'Dados brutos do evento copiados! 👏';
	@override String get kind => 'Tipo';
	@override String get shortNote => 'Nota curta';
	@override String get postedOnDate => 'Publicado em';
	@override String get showMore => '... mostrar mais';
	@override String get accountDeleted => 'Esta conta foi excluída e não pode mais ser acessada.';
	@override String get ok => 'OK';
	@override String get redeem => 'Resgatar';
	@override String get redeemCode => 'Resgatar código';
	@override String get redeemAndEarn => 'Resgatar e ganhar';
	@override String get redeemingFailed => 'Falha ao resgatar';
	@override String get redeemInProgress => 'Resgatando código...';
	@override String get redeemCodeDesc => 'Digite seu código para resgatar';
	@override String get missingCode => 'Código ausente';
	@override String get missingPubkey => 'Chave pública ausente';
	@override String get invalidPubkey => 'Chave pública inválida';
	@override String get missingLightningAddress => 'Endereço Lightning ausente';
	@override String get codeNotFound => 'Código não encontrado';
	@override String get redeemCodeRequired => 'Código de resgate obrigatório';
	@override String get redeemCodeInvalid => 'Código de resgate inválido';
	@override String get codeBeingRedeemed => 'Seu código está sendo resgatado. Se não for concluído, tente novamente em breve.';
	@override String get redeemCodeSuccess => 'Código resgatado com sucesso';
	@override String get redeemFailed => 'Não foi possível resgatar o código, tente novamente mais tarde.';
	@override String get codeAlreadyRedeemed => 'O código já foi resgatado';
	@override String satsEarned({required Object amount}) => '+${amount} sats ganhos.';
	@override String get selectReceivingWallet => 'Selecionar carteira de recebimento';
	@override String get redeemCodeMessage => 'Resgate sats grátis com os códigos YakiHonne — basta inserir seu código e aumentar seu saldo instantaneamente.';
	@override String get scanCode => 'Escanear código';
	@override String get enterCode => 'Inserir código';
	@override String get errorSharingMedia => 'Erro ao compartilhar mídia';
	@override String get open => 'Abrir';
	@override String get openUrl => 'Abrir URL';
	@override String openUrlDesc({required Object url}) => 'Deseja abrir "${url}"?';
	@override String get openUrlPrompt => 'Aviso de abertura de URL';
	@override String get openUrlPromptDesc => 'Um aviso de segurança exibindo a URL completa antes de abri-la no navegador.';
	@override String get whatsNew => 'Novidades';
}

/// Flat map(s) containing all translations.
/// Only for edge cases! For simple maps, use the map function of this library.
extension on TranslationsPt {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'userCommentedCurationYouIn': return ({required Object name}) => '${name} comentou uma curadoria em que foste mencionado';
			case 'userCommentedNoteYouIn': return ({required Object name}) => '${name} comentou uma nota em que foste mencionado';
			case 'userCommentedPaidNoteYouIn': return ({required Object name}) => '${name} comentou um pagamento em que foste mencionado na nota';
			case 'userCommentedPollYouIn': return ({required Object name}) => '${name} comentou uma sondagem em que foste mencionado';
			case 'userCommentedSmartWidgetYouIn': return ({required Object name}) => '${name} comentou um smart que foste mencionado no widget';
			case 'userCommentedVideoYouIn': return ({required Object name}) => '${name} comentou um vídeo em que foste mencionado';
			case 'userCommentedArticleYouIn': return ({required Object name}) => '${name} comentou um artigo em que foste mencionado';
			case 'userCommentedYourArticle': return ({required Object name}) => '${name} comentou o teu artigo';
			case 'userCommentedYourCuration': return ({required Object name}) => '${name} comentou a tua curadoria';
			case 'userCommentedYourNote': return ({required Object name}) => '${name} comentou a tua nota';
			case 'userCommentedYourPaidNote': return ({required Object name}) => '${name} comentou a tua nota paga';
			case 'userCommentedYourPoll': return ({required Object name}) => '${name} comentou a tua sondagem';
			case 'userCommentedYourSmartWidget': return ({required Object name}) => '${name} comentou o teu smart widget';
			case 'userCommentedYourVideo': return ({required Object name}) => '${name} comentou o teu vídeo';
			case 'userNoArticles': return ({required Object name}) => '${name} não tem artigos';
			case 'userNoCurations': return ({required Object name}) => '${name} não tem curadorias';
			case 'userNoNotes': return ({required Object name}) => '${name} não tem notas';
			case 'userNoSmartWidgets': return ({required Object name}) => '${name} não tem smart widgets';
			case 'userNoVideos': return ({required Object name}) => '${name} não tem vídeos';
			case 'userSubmittedPaidNote': return ({required Object name}) => '${name} submeteu uma nota paga';
			case 'userMentionedYouInCuration': return ({required Object name}) => '${name} mencionou-te numa curadoria';
			case 'userMentionedYouInNote': return ({required Object name}) => '${name} mencionou-te numa nota';
			case 'userMentionedYouInPaidNote': return ({required Object name}) => '${name} mencionou-te numa nota paga';
			case 'userMentionedYouInPoll': return ({required Object name}) => '${name} mencionou-te numa sondagem';
			case 'userMentionedYouInSmartWidget': return ({required Object name}) => '${name} mencionou-te num smart widget';
			case 'userMentionedYouInVideo': return ({required Object name}) => '${name} mencionou-te num vídeo';
			case 'userMentionedYouInArticle': return ({required Object name}) => '${name} mencionou-te num artigo';
			case 'userPublishedCuration': return ({required Object name}) => '${name} publicou uma curadoria';
			case 'userPublishedPaidNote': return ({required Object name}) => '${name} publicou uma nota paga';
			case 'userPublishedPoll': return ({required Object name}) => '${name} publicou uma sondagem';
			case 'userPublishedSmartWidget': return ({required Object name}) => '${name} publicou um smart widget';
			case 'userPublishedVideo': return ({required Object name}) => '${name} publicou um vídeo';
			case 'userPublishedArticle': return ({required Object name}) => '${name} publicou um artigo';
			case 'userQuotedCurationYouIn': return ({required Object name}) => '${name} citou uma curadoria em que foste mencionado';
			case 'userQuotedNoteYouIn': return ({required Object name}) => '${name} citou uma nota em que foste mencionado';
			case 'userQuotedPaidNoteYouIn': return ({required Object name}) => '${name} citou uma nota paga em foste mencionado';
			case 'userQuotedVideoYouIn': return ({required Object name}) => '${name} citou um vídeo em que foste mencionado';
			case 'userQuotedArticleYouIn': return ({required Object name}) => '${name} citou um artigo em que foste mencionado';
			case 'userQuotedYourArticle': return ({required Object name}) => '${name} citou o teu artigo';
			case 'userQuotedYourCuration': return ({required Object name}) => '${name} citou a tua curadoria';
			case 'userQuotedYourNote': return ({required Object name}) => '${name} citou a tua nota';
			case 'userQuotedYourPaidNote': return ({required Object name}) => '${name} citou a tua nota paga';
			case 'userQuotedYourVideo': return ({required Object name}) => '${name} citou o teu vídeo';
			case 'userReactedCurationYouIn': return ({required Object name, required Object reaction}) => '${name} reagiu ${reaction} a uma curadoria em que foste mencionado';
			case 'userReactedNoteYouIn': return ({required Object name, required Object reaction}) => '${name} reagiu ${reaction} a uma nota em que foste mencionado';
			case 'userReactedPaidNoteYouIn': return ({required Object name, required Object reaction}) => '${name} reagiu ${reaction} a uma nota paga em que foste mencionado';
			case 'userReactedPollYouIn': return ({required Object name, required Object reaction}) => '${name} reagiu ${reaction} a uma sondagem em que foste mencionado';
			case 'userReactedSmartWidgetYouIn': return ({required Object name, required Object reaction}) => '${name} reagiu ${reaction} a um smart widget em que foste mencionado';
			case 'userReactedVideoYouIn': return ({required Object name, required Object reaction}) => '${name} reagiu ${reaction} a um vídeo em que foste mencionado';
			case 'userReactedArticleYouIn': return ({required Object name, required Object reaction}) => '${name} reagiu ${reaction} a um artigo em que foste mencionado';
			case 'userReactedYou': return ({required Object name, required Object reaction}) => '${name} reagiu ${reaction}';
			case 'userReactedYourArticle': return ({required Object name, required Object reaction}) => '${name} reagiu ${reaction} ao teu artigo';
			case 'userReactedYourCuration': return ({required Object name, required Object reaction}) => '${name} reagiu ${reaction} à tua curadoria';
			case 'userReactedYourMessage': return ({required Object name, required Object reaction}) => '${name} reagiu ${reaction} à tua mensagem';
			case 'userReactedYourNote': return ({required Object name, required Object reaction}) => '${name} reagiu ${reaction} à tua nota';
			case 'userReactedYourPaidNote': return ({required Object name, required Object reaction}) => '${name} reagiu ${reaction} à tua nota paga';
			case 'userReactedYourPoll': return ({required Object name, required Object reaction}) => '${name} reagiu ${reaction} à tua sondagem';
			case 'userReactedYourSmartWidget': return ({required Object name, required Object reaction}) => '${name} reagiu ${reaction} ao teu smart widget';
			case 'userReactedYourVideo': return ({required Object name, required Object reaction}) => '${name} reagiu ${reaction} ao teu vídeo';
			case 'reactedWith': return ({required Object name, required Object reaction}) => '${name} reagiu com ${reaction}';
			case 'userReceivedSat': return ({required Object name, required Object number}) => '${name} recebeu os teus ${number} Sats';
			case 'userRepliedArticleYouIn': return ({required Object name}) => '${name} respondeu a um artigo em que foste mencionado';
			case 'userRepliedCurationYouIn': return ({required Object name}) => '${name} respondeu a uma curadoria em que foste mencionado';
			case 'userRepliedNoteYouIn': return ({required Object name}) => '${name} respondeu a uma nota em que foste mencionado';
			case 'userRepliedPaidNoteYouIn': return ({required Object name}) => '${name} respondeu a uma nota paga em que foste mencionado';
			case 'userRepliedPollYouIn': return ({required Object name}) => '${name} respondeu a uma sondagem em que foste mencionado';
			case 'userRepliedSmartWidgetYouIn': return ({required Object name}) => '${name} respondeu a um smart widget em que foste mencionado';
			case 'userRepliedVideoYouIn': return ({required Object name}) => '${name} respondeu a um vídeo em que foste mencionado';
			case 'userRepliedYourArticle': return ({required Object name}) => '${name} respondeu ao teu artigo';
			case 'userRepliedYourCuration': return ({required Object name}) => '${name} respondeu à tua curadoria';
			case 'userRepliedYourNote': return ({required Object name}) => '${name} respondeu à tua nota';
			case 'userRepliedYourPaidNote': return ({required Object name}) => '${name} respondeu à tua nota paga';
			case 'userRepliedYourPoll': return ({required Object name}) => '${name} respondeu à tua sondagem';
			case 'userRepliedYourSmartWidget': return ({required Object name}) => '${name} respondeu ao teu smart widget';
			case 'userRepliedYourVideo': return ({required Object name}) => '${name} respondeu ao teu vídeo';
			case 'userRepostedNoteYouIn': return ({required Object name}) => '${name} republicou uma nota em que foste mencionado';
			case 'userRepostedPaidNoteYouIn': return ({required Object name}) => '${name} republicou uma nota paga em que foste mencionado';
			case 'userRepostedYou': return ({required Object name}) => '${name} republicou o teu conteúdo';
			case 'userRepostedYourNote': return ({required Object name}) => '${name} republicou a tua nota';
			case 'userRepostedYourPaidNote': return ({required Object name}) => '${name} republicou a tua nota paga';
			case 'userSentSat': return ({required Object name, required Object number}) => '${name} enviou-te ${number} Sats';
			case 'userZappedYou': return ({required Object name, required Object number}) => '${name} enviou-te um zap de ${number} sats';
			case 'userZappedYourArticle': return ({required Object name, required Object number}) => '${name} zapped o teu artigo ${number} sats';
			case 'userZappedYourCuration': return ({required Object name, required Object number}) => '${name} zapped a tua curadoria ${number} sats';
			case 'userZappedYourNote': return ({required Object name, required Object number}) => '${name} zapped a tua nota ${number} sats';
			case 'userZappedYourPaidNote': return ({required Object name, required Object number}) => '${name} zapped a tua nota paga ${number} sats';
			case 'userZappedYourPoll': return ({required Object name, required Object number}) => '${name} zapped a tua sondagem ${number} sats';
			case 'userZappedYourSmartWidget': return ({required Object name, required Object number}) => '${name} zapped o teu smart widget ${number} sats';
			case 'userZappedYourVideo': return ({required Object name, required Object number}) => '${name} zapped o teu vídeo ${number} sats';
			case 'userNewArticle': return ({required Object name}) => 'novo artigo de ${name}';
			case 'userNewCuration': return ({required Object name}) => 'nova curadoria de ${name}';
			case 'userPaidNote': return ({required Object name}) => 'nova nota paga de ${name}';
			case 'userNewSmartWidget': return ({required Object name}) => 'novo smart widget de ${name}';
			case 'userReply': return ({required Object name}) => 'a resposta de ${name}';
			case 'userNewVideo': return ({required Object name}) => 'o vídeo de ${name}';
			case 'articlesNum': return ({required Object number}) => '${number} artigo(s)';
			case 'availableArticles': return ({required Object number}) => '${number} artigo(s) disponível(véis)';
			case 'availableVideos': return ({required Object number}) => '${number} vídeo(s) disponível(véis)';
			case 'bookmarksListCount': return ({required Object number}) => '${number} listas de marcadores';
			case 'componentsSMCount': return ({required Object number}) => '${number} componentes neste widget';
			case 'followersNum': return ({required Object number}) => '${number} seguidores';
			case 'itemsNumber': return ({required Object number}) => '${number} item(ns)';
			case 'levelsRequiredNum': return ({required Object number}) => '${number} níveis necessários';
			case 'pointsRemaining': return ({required Object number}) => '${number} restante';
			case 'videosNum': return ({required Object number}) => '${number} vídeo(s)';
			case 'viewsNumber': return ({required Object number}) => '${number} visualização';
			case 'readTime': return ({required Object time}) => '${time} min de leitura';
			case 'mutualsNum': return ({required Object number}) => '+ ${number} mútuo(s)';
			case 'peopleCountPlus': return ({required Object number}) => '+${number} pessoas';
			case 'supportUs': return '❤︎ Apoia-nos';
			case 'consumablePointsPerks1': return '1- Envia o teu conteúdo para certificação';
			case 'consumablePointsPerks2': return '2- Resgata pontos para publicar notas pagas';
			case 'consumablePointsPerks3': return '3- Resgata pontos para SATs (Limites aleatórios são selecionados e serás notificado sempre que o resgate estiver disponível)';
			case 'highlightedNote': return 'Uma nota destacada para mais exposição.';
			case 'minimumOfOneRequired': return 'É necessária uma quantidade mínima de 1';
			case 'useValidTitle': return 'Um título válido necessita de ser utilizado';
			case 'aboutYou': return 'Sobre ti';
			case 'actGoodFaith': return 'Age em Boa-fé';
			case 'add': return 'adicionar';
			case 'addUrlNevent': return 'Adiciona um URL/nevent adequado';
			case 'addProperUrlNevent': return 'Adiciona um URL/nevent adequado';
			case 'addAccount': return 'Adiciona conta';
			case 'addBookmarkList': return 'Adiciona lista de marcadores';
			case 'addCover': return 'Adiciona capa';
			case 'addCuration': return 'Adiciona curadoria';
			case 'addInterests': return 'Adiciona interesses';
			case 'addNote': return 'Adiciona nota';
			case 'addToCuration': return 'Adiciona à curadoria';
			case 'addUser': return 'Adiciona utilizador';
			case 'addWallet': return 'Adicionar carteira';
			case 'addYourTopics': return 'Adiciona os teus tópicos';
			case 'adjustSpeed': return 'Ajusta velocidade';
			case 'adjustVolume': return 'Ajusta volume';
			case 'alby': return 'Alby';
			case 'albyConnect': return 'Alby connect';
			case 'all': return 'todos';
			case 'allRelays': return 'Todas as relays';
			case 'allUsersZapped': return 'Todos os utilizadores foram zapped!';
			case 'amberNotInstalled': return 'O aplicativo Amber não está instalado';
			case 'amountInSats': return 'Quantia em sats';
			case 'errorAddingArticle': return 'Ocorreu um erro ao adicionar o artigo';
			case 'errorAddingCuration': return 'Ocorreu um erro ao adicionar a curadoria';
			case 'errorAddingWidget': return 'Ocorreu um erro ao adicionar o smart widget';
			case 'errorAddingVideo': return 'Ocorreu um erro ao adicionar o vídeo';
			case 'errorUpdatingCuration': return 'Ocorreu um erro ao atualizar a curadoria';
			case 'userInvoiceGenerated': return ({required Object name}) => 'Uma fatura para ${name} foi gerada';
			case 'verifiedNoteRateSealed': return 'Uma nota verificada que avaliaste foi selada.';
			case 'apiKeyRequired': return 'Chave de API (obrigatória)';
			case 'appLanguage': return 'Idioma do aplicativo';
			case 'appTheme': return 'Tema do aplicativo';
			case 'appearance': return 'Aparência';
			case 'article': return 'artigo';
			case 'articleNotFound': return 'Não foi possível encontrar o artigo';
			case 'articleAddedCuration': return 'O artigo foi adicionado à tua curadoria.';
			case 'articles': return 'artigos';
			case 'articlesAvailableCuration': return 'Artigos disponíveis nesta curadoria';
			case 'askMeSomething': return 'Pergunte-me alguma coisa!';
			case 'attemptConnectAmber': return 'A tentativa de conexão com Amber foi rejeitada.';
			case 'attemptsRemained': return 'Tentativas restantes ';
			case 'autoSavedArticleDeleted': return 'O artigo salvo automaticamente foi excluído';
			case 'autoSavedSMdeleted': return 'O widget inteligente salvo automaticamente foi excluído';
			case 'availableWallets': return 'Carteiras disponíveis';
			case 'back': return 'voltar';
			case 'backgroundColor': return 'Cor de fundo';
			case 'balance': return 'Equilíbrio';
			case 'beHelpful': return 'Sê útil, mesmo para com aqueles que discordam';
			case 'beFirstCommentThisVideo': return 'Sê o primeiro a comentar este vídeo!';
			case 'bio': return ({required Object content}) => 'Biografia: ${content}';
			case 'blankWidget': return 'Widget em branco';
			case 'bookmark': return 'marcador';
			case 'bookmarkAdded': return 'Lista de marcadores foi adicionada';
			case 'bookmarkLists': return 'Listas de marcadores';
			case 'bookmarks': return 'Marcadores';
			case 'borderColor': return 'Cor da marchem';
			case 'button': return 'botão';
			case 'buttonColor': return 'Cor do botão';
			case 'buttonCustomization': return 'Personalização de botão';
			case 'buttonText': return 'Texto do botão';
			case 'by': return 'por';
			case 'byPerson': return ({required Object name}) => 'Por ${name}';
			case 'byContinuing': return 'Ao continuar, concordas com o nosso\n';
			case 'camera': return 'Câmera';
			case 'cancel': return 'cancelar';
			case 'checkSmartWidget': return 'Confere um smart widget';
			case 'checkoutArticle': return 'confere o meu artigo';
			case 'checkoutCuration': return 'confere a minha curadoria';
			case 'checkoutPaidNote': return 'confere a minha nota paga';
			case 'checkoutSmartWidget': return 'confere o meu smart widget';
			case 'checkValidity': return 'Verifica a validade';
			case 'checkModelRouter': return 'Verifica o teu modem ou router';
			case 'checkoutVideo': return 'confere o meu vídeo';
			case 'claim': return 'Reivindicação';
			case 'claimTime': return ({required Object time}) => 'Reivindica em ${time}';
			case 'clear': return 'limpar';
			case 'clearAppCache': return 'Limpar cache do aplicativo';
			case 'clearChat': return 'Limpar chat';
			case 'clearDate': return 'Limpar dados';
			case 'click': return 'Clique';
			case 'clickBelowToConnect': return 'Clique abaixo para conectar';
			case 'clone': return 'copiar conforme';
			case 'close': return 'encerrar';
			case 'pollClosedAt': return ({required Object date}) => 'Encerrado em: ${date}';
			case 'pollClosesAt': return ({required Object date}) => 'Encerra em: ${date}';
			case 'color': return 'cor';
			case 'comment': return 'Comentário';
			case 'comments': return 'Comentários';
			case 'communityPolls': return 'Sondagens da comunidade';
			case 'communityWallet': return 'Carteira comunitária';
			case 'communityWidgets': return 'Widgets da comunidade';
			case 'compose': return 'Compor';
			case 'confirmPayment': return 'Confirmar pagamento';
			case 'congratulations': return 'Parabéns';
			case 'connect': return 'Conectar';
			case 'connectWithNwc': return 'Conectar com NWC';
			case 'connected': return 'Conectado';
			case 'consumablePoints': return 'Pontos consumíveis';
			case 'contact': return 'Contato';
			case 'container': return 'recipiente';
			case 'containerCustomization': return 'Personalização do recipiente';
			case 'contentModeration': return 'Moderação do conteúdo';
			case 'contentTextColor': return 'Cor do texto do conteúdo';
			case 'contentTranslation': return 'Tradução do conteúdo';
			case 'contentData': return ({required Object description}) => 'Conteúdo: ${description}';
			case 'continueAsGuest': return 'Continuar como convidado';
			case 'contributeUnderstanding': return 'Contribua para a criação de entendimento';
			case 'copy': return 'cópia';
			case 'copyInvoice': return 'Copiar fatura';
			case 'copyLn': return 'Copiar endereço lightining';
			case 'copyNaddr': return 'copiar naddr';
			case 'copyNoteId': return 'Copiar ID da nota';
			case 'copyNpub': return 'Copiar npub';
			case 'copyNwc': return 'Copiar NWC';
			case 'userInvoiceNotGenerated': return 'Não foi possível criar uma fatura para este utilizador.';
			case 'notFindSMwithAddr': return 'Não foi possível encontrar o smart widget com esse endereço';
			case 'couldNotUpdateRelaysList': return 'Não foi possível atualizar a lista de relays';
			case 'coverUrl': return 'Ocultar url';
			case 'createWalletSendRecSats': return 'Cria uma carteira para enviar e receber sats';
			case 'createAccount': return 'Cria uma conta';
			case 'createWallet': return 'Criar carteira';
			case 'yakiNwcDesc': return 'Cria uma carteira usando o canal de YakiHonne';
			case 'createYakiWallet': return 'Cria uma carteira YakiHonne';
			case 'createdAt': return 'Criado em';
			case 'createdAtEditedAt': return ({required Object date1, required Object date2}) => 'criado em ${date1}, editado em ${date2}';
			case 'curation': return 'curadoria';
			case 'curationNotFound': return 'Não foi possível encontrar a curadoria';
			case 'curationType': return 'Tipo de curadoria';
			case 'curations': return 'curadorias';
			case 'currentlyLinkedMessage': return 'Atualmente vinculado ao teu perfil para recepção de zaps';
			case 'customization': return 'Personalização';
			case 'customizeYourFeed': return 'Personaliza o teu feed';
			case 'dashboard': return 'painel';
			case 'decrMessage': return 'Decifrando mensagem';
			case 'defaultKey': return 'Padrão';
			case 'delete': return 'excluir';
			case 'deleteContent': return ({required Object type}) => 'Excluir ${type}';
			case 'deleteAccount': return 'Excluir conta';
			case 'deleteBookmarkList': return 'Excluir lista de marcadores';
			case 'deleteCoverPic': return 'Excluir foto da capa!';
			case 'deleteDraft': return 'Excluir rascunho';
			case 'deleteWallet': return 'Excluir carteira';
			case 'description': return 'descrição';
			case 'descriptionOptional': return 'descrição (opcional)';
			case 'details': return 'detalhes';
			case 'disableSecureDms': return 'Desative DMs seguras';
			case 'disconnecting': return 'Desconectando...';
			case 'discordUrl': return 'url do Discord';
			case 'discover': return 'descobrir';
			case 'dismiss': return 'dispensar';
			case 'displayName': return 'Nome de exibição';
			case 'findThisHelpful': return 'Achas isto útil?';
			case 'findThisNotHelpful': return 'Achas que isto não é útil?';
			case 'dontHaveWallet': return 'Não tens ainda uma carteira?';
			case 'unTextR3Desc': return 'Não te preocupes, todos nós recebemos algumas destas! Estas classificações são comuns e podem levar a alterações de status se um número suficiente de pessoas concordarem que uma nota útil não é suficientemente útil.';
			case 'donations': return 'Doações';
			case 'downvotes': return 'Votos negativos';
			case 'draft': return 'rascunho';
			case 'duoLayout': return 'Layout duplo';
			case 'earnSats': return 'Ganha SATs';
			case 'edit': return 'editar';
			case 'editCover': return 'Editar capa';
			case 'editProfile': return 'Editar perfil';
			case 'editToAddZapPoll': return 'Edite para adicionar enquete zap';
			case 'editedOn': return ({required Object date}) => 'Editado em: ${date}';
			case 'emptyVerifiedNote': return 'Conteúdo de nota verificado vazio!';
			case 'enableSecureDms': return 'Habilite DMs seguros';
			case 'eula': return 'Contrato de licença de usuário final (EULA)';
			case 'engagementChart': return 'Gráfico de engajamento';
			case 'enjoyExpOwnData': return 'Aproveite a experiência de possuir\n';
			case 'ensureLnSet': return 'Certifique-se de que seu endereço relâmpago esteja bem definido';
			case 'enterSMaddr': return 'Insira um widget inteligente naddr para verificar sua validade.';
			case 'enterLn': return 'Digite seu endereço LUD-06 ou LUD-16';
			case 'enterCoverUrl': return 'Insira o URL da sua capa';
			case 'enterNip05': return 'Digite seu endereço NIP-05';
			case 'enterPictureUrl': return 'Digite o URL da sua foto';
			case 'erase': return 'apagar';
			case 'errorAddingBookmark': return 'Ocorreu um erro ao adicionar o favorito';
			case 'errorAddingVerifiedNote': return 'Ocorreu um erro ao adicionar sua nota verificada';
			case 'errorClaimingReward': return 'Ocorreu um erro ao reivindicar uma recompensa';
			case 'errorConnectingRelay': return 'Ocorreu um erro ao conectar ao relé';
			case 'errorCreatingWallet': return 'Ocorreu um erro ao criar a carteira';
			case 'errorDecodingData': return 'Ocorreu um erro ao decodificar os dados';
			case 'errorDeletingContent': return 'Ocorreu um erro ao excluir o conteúdo';
			case 'errorDeletingRating': return 'Ocorreu um erro ao excluir sua avaliação';
			case 'errorGeneratingEvent': return 'Ocorreu um erro ao gerar o evento';
			case 'errorGeneratingInvoice': return 'Ocorreu um erro ao gerar a fatura';
			case 'errorLoggingYakiChest': return 'Ocorreu um erro ao fazer login no baú de Yakihonne';
			case 'errorPayingInvoice': return 'Ocorreu um erro ao pagar usando a fatura';
			case 'errorSendingSats': return 'Ocorreu um erro ao enviar sats';
			case 'errorSendingEvent': return 'Ocorreu um erro ao enviar o evento';
			case 'errorSendingMessage': return 'ocorreu um erro ao enviar a mensagem';
			case 'errorSettingToken': return 'Ocorreu um erro ao configurar o token';
			case 'errorSigningEvent': return 'Ocorreu um erro ao assinar o evento';
			case 'errorSubmittingRating': return 'Ocorreu um erro ao enviar sua classificação';
			case 'errorTranslating': return 'Ocorreu um erro ao traduzir o conteúdo.';
			case 'errorUpdatingData': return 'Ocorreu um erro ao atualizar os dados';
			case 'errorUpdatingRelaysList': return 'Ocorreu um erro ao atualizar a lista de relés';
			case 'errorUploadingMedia': return 'Ocorreu um erro ao enviar a mídia';
			case 'errorUploadingVideo': return 'Ocorreu um erro ao carregar o vídeo';
			case 'errorUsingWallet': return 'Ocorreu um erro ao usar a carteira!';
			case 'errorZappingUsers': return 'Ocorreu um erro ao enviar zapps aos utilizadores';
			case 'errorUploadingImage': return 'Ocorreu um erro ao carregar a imagem';
			case 'errorLoadingVideo': return 'Erro ao carregar o vídeo';
			case 'errorUsingExternalWallet': return 'Erro ao usar carteira externa.';
			case 'eventNotFound': return 'Não foi possível encontrar o evento';
			case 'eventNotRecognized': return 'O evento não pôde ser reconhecido';
			case 'exit': return 'Sair';
			case 'expandWorld': return 'Expande o mundo adicionando o que mais te fascina. Seleciona os teus interesses e deixa que a viagem comece.';
			case 'explanation': return 'Explicação';
			case 'explore': return 'explorar';
			case 'externalWallet': return 'Carteira externa';
			case 'feedOptions': return 'Opções do feed';
			case 'fetchingArticle': return 'Rastreando artigo';
			case 'fetchingCuration': return 'Rastreando curadoria';
			case 'fetchingEvent': return 'Rastreando evento';
			case 'fetchingEventUserRelays': return 'Rastreando evento nas relays do utilizador';
			case 'fetchingNote': return 'Rastreando nota';
			case 'fetchingProfile': return 'Rastreando perfil';
			case 'fetchingSmartWidget': return 'Rastreando smart widget';
			case 'fetchingUserInboxRelays': return 'Rastreando relays da caixa de entrada do utilizador';
			case 'fetchingVideo': return 'Rastreando vídeo';
			case 'fileSharing': return 'Partilha de arquivos';
			case 'fillColor': return 'Cor de preenchimento';
			case 'finished': return 'finalizado!';
			case 'follow': return 'segue';
			case 'followAll': return 'Segue todos';
			case 'followMeOnNostr': return 'Segue-me no Nostr';
			case 'followers': return 'Seguidores';
			case 'following': return 'seguindo';
			case 'pendingFollowing': return 'Seguindo...';
			case 'followings': return 'Seguidores';
			case 'followsYou': return 'Segue-te';
			case 'fontSize': return 'Tamanho da fonte';
			case 'forName': return ({required Object name}) => 'para ${name}';
			case 'enableSecureDmsMessage': return 'Para mais segurança e privacidade, considera ativar DMs seguros.';
			case 'zapSplitsMessage': return 'Para zap splits, deve haver pelo menos uma pessoa';
			case 'free': return 'Grátis';
			case 'fuelYakihonne': return 'Estimula o crescimento de YakiHonne! O teu apoio contribui para a criação de novos recursos e a para uma melhor experiência para todos.';
			case 'gain': return 'Ganho';
			case 'gallery': return 'Galeria';
			case 'generateInvoice': return 'Gerar fatura';
			case 'generateInvoices': return 'Gerar faturas';
			case 'getApiKey': return 'Obtém chave API';
			case 'getInvoice': return 'Obtém fatura';
			case 'getStartedNow': return 'Começa já';
			case 'gifs': return 'gifs';
			case 'gotIt': return 'Entendi!';
			case 'granted': return 'Concedido';
			case 'earnSatsDesc': return 'Ajuda-nos a fornecer perspetivas mais descentralizadas para rever esta nota paga.';
			case 'heyWelcomeBack': return 'Olá,\nBem-vindo\nDe volta';
			case 'hideSuggestions': return 'Ocultar sugestões';
			case 'highlights': return 'destaques';
			case 'home': return 'Página principal';
			case 'hfCustomization': return 'Personalização do feed da página principal';
			case 'horizontalVideo': return 'Vídeo horizontal';
			case 'wantToShareRevenues': return 'Quero compartilhar estas receitas';
			case 'identifier': return 'Identificador';
			case 'image': return 'imagem';
			case 'imageAspectRatio': return 'Proporção da imagem';
			case 'imageCustomization': return 'Personalização de imagem';
			case 'imageUrl': return 'URL da imagem';
			case 'imageUploadHistory': return 'Histórico de carregamento de imagens';
			case 'important': return 'Importante';
			case 'inTag': return ({required Object name}) => 'Em ${name}';
			case 'inaccessibleLink': return 'Link inacessível';
			case 'inbox': return 'caixa de entrada';
			case 'initializingAccount': return 'Inicializando conta...';
			case 'insertText': return 'Inserir texto';
			case 'instantConntect': return 'Conexão instantânea à relay';
			case 'interestsUpdateMessage': return 'A lista de interesses foi atualizada com sucesso!';
			case 'interested': return 'Interessado';
			case 'interests': return 'interesses';
			case 'invalidHexKey': return 'Hex key inválida!';
			case 'invalidInvoice': return 'Fatura inválida';
			case 'invalidPairingSecret': return 'Emparelhamento de segredo inválido';
			case 'invalidPrivateKey': return 'Chave privada inválida!';
			case 'invalidRelayUrl': return 'URL de relay inválido';
			case 'invoice': return 'fatura';
			case 'invoiceCopied': return 'Código da fatura copiado!';
			case 'invoicePaid': return 'A fatura foi paga com sucesso';
			case 'invoiceOrLN': return 'Fatura ou endereço Lightning';
			case 'issueOccuredSelectingImage': return 'Ocorreu um problema ao selecionar a imagem.';
			case 'somethingWentWrongDesc': return 'Parece que algo de errado aconteceu durante o carregamento de dados. Tenta novamente!';
			case 'invalidInvoiceDesc': return 'Parece que a fatura digitalizada é inválida. Redigitaliza e tenta novamente.';
			case 'invoiceNotPayed': return 'Parece que não pagaste a fatura, verifica novamente';
			case 'itsLive': return 'Estás ao Vivo!';
			case 'noCommunityNotes': return 'Está tudo tranquilo por aqui! Não existem ainda notas da comunidade.';
			case 'joinedOn': return ({required Object date}) => 'Associou-se em: ${date}';
			case 'keys': return 'Chaves';
			case 'known': return 'Conhecido';
			case 'languagePreferences': return 'Preferências de idioma';
			case 'lastGained': return ({required Object date}) => 'Último ganho: ${date}';
			case 'lastUpdatedOn': return ({required Object date}) => 'Última atualização em: ${date}';
			case 'latest': return 'mais recente';
			case 'layout': return 'layout';
			case 'layoutCustomization': return 'Personalização do layout';
			case 'less': return 'Menos';
			case 'letsGetStarted': return 'Vamos começar!';
			case 'levelNumber': return ({required Object number}) => 'Nível ${number}';
			case 'lightningAddress': return 'Endereço Lightning';
			case 'lnCopied': return 'O endereço Lightning foi copiado! 👏';
			case 'link': return 'Link';
			case 'linkWallet': return 'Conecta Carteira';
			case 'linked': return 'Conectado';
			case 'list': return 'lista';
			case 'loading': return 'A carregar';
			case 'loadingFollowings': return 'A carregar seguidores';
			case 'loadingPreviousPosts': return 'A carregar publicação(ões) anterior(es)...';
			case 'loadingFollowers': return 'A carregar seguidores';
			case 'locked': return 'Bloqueado';
			case 'loggingIn': return 'Acedendo...';
			case 'loggingOut': return 'Fazendo logout...';
			case 'login': return 'Nome de acesso';
			case 'loginYakiChestPoints': return 'Faz login no baú de Yakihonne, acumula pontos sendo ativo na plataforma e ganha recompensas preciosos!';
			case 'logoutAllAccounts': return 'Sair de todas as contas';
			case 'validDescriptionCuration': return 'Certifica-te que adicionaste uma descrição válida para esta curadoria';
			case 'validImageCuration': return 'Certifica-te que adicionaste uma imagem válida para esta curadoria';
			case 'validTitleCuration': return 'Certifica-te que adicionaste um título válido para esta curadoria';
			case 'addValidUrl': return 'Certifica-te de adicionar um URL válido';
			case 'submitValidLud': return 'Certifica-te de obter um lud16/lud06 válido.';
			case 'showSecretDesc': return 'Certifica-te que o manténs seguro, pois ele dá acesso total à tua conta.';
			case 'invalidInvoiceLnurl': return 'Certifica-te de definir uma fatura válida ou lnurl';
			case 'setAllRequiredContent': return 'Certifica-te de definir todo o conteúdo necessário.';
			case 'setOutboxRelays': return 'Certifica-te de configurar as tuas relays de caixa de saída';
			case 'submitValidCloseDate': return 'Certifica-te de enviar uma data de encerramento válida.';
			case 'submitMinMaxSats': return 'Certifica-te de submeter uma quantia válida mínima e máxima de satoshis';
			case 'submitValidOptions': return 'Certifica-te de submeter opções válidas.';
			case 'submitValidData': return 'Certifica-te de submeter dados válidos';
			case 'submitValidInvoice': return 'Certifica-te de submeter uma fatura válida';
			case 'manageAccounts': return 'Gerenciar contas';
			case 'manageInterests': return 'Gerenciar interesses';
			case 'maxSats': return 'Máx. sats';
			case 'maximumSatoshis': return 'Máximo de sats';
			case 'mediaExceedsMaxSize': return 'A multimidia excede o tamanho máximo que é 21 MB';
			case 'mediaUploader': return 'Carregador de multimidia';
			case 'mentions': return 'menções';
			case 'messageOptional': return 'Mensagem (opcional)';
			case 'messageCouldNotBeDecrypted': return 'a mensagem não pôde ser decifrada';
			case 'messageNotDecrypted': return 'A mensagem ainda não foi decifrada!';
			case 'messageCopied': return 'Mensagem copiada com sucesso!';
			case 'metadata': return 'metadados';
			case 'min': return 'min';
			case 'minSats': return 'Mínimo de sats';
			case 'minimumSatoshis': return 'Mínimo de Sats';
			case 'errorMissingKey': return 'Chave de API ausente ou subscrição expirada.';
			case 'monoLayout': return 'MonoLayout';
			case 'monolayoutRequired': return 'Monolayout é obrigatório';
			case 'more': return 'Mais';
			case 'moreDots': return 'mais...';
			case 'moveDown': return 'Mover para baixo';
			case 'moveUp': return 'Ir para cima';
			case 'mute': return 'modo silencioso';
			case 'muteList': return 'Lista silenciada';
			case 'muteUser': return 'Silenciar utilizador';
			case 'mutuals': return 'mútuo(s)';
			case 'myArticles': return 'Os meus artigos';
			case 'myDrafts': return 'Os meus rascunhos';
			case 'myPolls': return 'As minhas sondagens';
			case 'myPublicKey': return 'A minha chave pública';
			case 'mySecretKey': return 'A minha chave secreta';
			case 'myVideos': return 'Os meus vídeos';
			case 'myWidgets': return 'Os meus widgets';
			case 'naddr': return 'naddr';
			case 'nostrWalletConnectDesc': return 'Conexão nativa de carteira nostr';
			case 'needsMoreRating': return 'Precisa de mais classificação';
			case 'needsYourHelp': return 'Precisa do teu útil';
			case 'nevent': return 'nevent';
			case 'newKey': return 'Novo';
			case 'newMessage': return 'Nova mensagem';
			case 'newPostGesture': return 'Nova publicação com gesto de pressão longa';
			case 'next': return 'próximo';
			case 'noContentBelongToCuration': return ({required Object type}) => 'Nenhum ${type} pertence a esta curadoria';
			case 'noContentCanBeFound': return ({required Object type}) => 'Nenhum ${type} foi encontrado';
			case 'noArticlesInCuration': return 'Nenhum artigo sobre esta curadoria foi encontrado';
			case 'addNewBookmark': return 'Nenhuma lista de marcadores foi encontrada, tenta adicionar uma!';
			case 'noBookmarksListFound': return 'Nenhuma lista de marcadores foi encontrada, tente adicionar uma!';
			case 'noCommentsCanBeFound': return 'Nenhum comentário foi encontrado';
			case 'noComponentsDisplayed': return 'Nenhum componente pode ser exibido';
			case 'noCurationsFound': return 'Nenhuma curadoria foi encontrada. Tenta criar uma para poderes adicionar conteúdo à mesma.';
			case 'noDescription': return 'Nenhuma descrição';
			case 'noElementsInBookmarks': return 'Nenhum elemento foi encontrado na lista de marcadores';
			case 'noEventIdCanBeFound': return 'Nenhum evento com este ID foi encontrado!';
			case 'noImageHistory': return 'Nenhum histórico de imagens foi encontrado';
			case 'noInternetAccess': return 'Sem acesso à Internet';
			case 'noInvoiceAvailable': return 'Não há faturas disponíveis';
			case 'noMessageCanBeFound': return 'Nenhuma mensagem foi encontrada';
			case 'noMessagesToDisplay': return 'Nenhuma mensagem pode ser exibida.';
			case 'noMoreData': return 'Não há mais dados';
			case 'noMutedUserFound': return 'Nenhum usuário silenciado foi encontrado.';
			case 'noNotificationCanBeFound': return 'Nenhuma notificação pode ser encontrada';
			case 'noPaidNotesCanBeFound': return 'Nenhuma nota paga pode ser encontrada.';
			case 'noPollsCanBeFound': return 'Nenhuma sondagem foi encontrada';
			case 'noReasonsSpecified': return 'Sem razão especificada!';
			case 'noRelaysCanBeFound': return 'Nenhuma relay pode ser encontrada';
			case 'noUserRelays': return 'Nenhuma relay foi encontrada para este utilizador.';
			case 'noRepliesDesc': return 'Nenhuma resposta para esta nota pode ser encontrada';
			case 'noResKeyword': return 'Nenhum resultado para esta palavra-chave';
			case 'noResKeywordDesc': return 'Nenhum resultado foi encontrado ao usar esta palavra-chave, tenta usar outras palavras-chave para obter melhores resultados.';
			case 'noSmartWidgetCanBeFound': return 'Nenhum smart widget pode ser encontrado';
			case 'noSmartWidget': return 'Nenhum rascunho de smart widget pode ser encontrado';
			case 'noTemplatesCanBeFound': return 'Nenhum modelo pode ser encontrado nesta categoria.';
			case 'noTitle': return 'Sem título';
			case 'noTransactionCanBeFound': return 'Nenhuma transação pode ser encontrada';
			case 'noUserZapped': return 'Nenhum utilizador recebeu zaps!';
			case 'noUserCanBeFound': return 'Nenhum utilizador pode ser encontrado.';
			case 'noVideosInCuration': return 'Nenhum vídeo sobre esta curadoria foi encontrado';
			case 'noWalletCanBeFound': return 'Nenhuma carteira pode ser encontrada';
			case 'noZappersCanBeFound': return 'Nenhum zapper pode ser encontrado.';
			case 'noImGood': return 'Não, estou bem';
			case 'noWalletConnectedToYourProfile': return 'Nenhuma das carteiras conectadas está vinculada ao seu perfil.';
			case 'nostrScheme': return 'Esquema Nostr';
			case 'nostrWalletConnect': return 'Conexão de carteira Nostr';
			case 'nwcInitialized': return 'A conexão da carteira Nostr foi inicializada';
			case 'notEnoughBalance': return 'Não tens saldo suficiente para efetuar este pagamento.';
			case 'notFollowedByAnyoneYouFollow': return 'Não é seguido por ninguém que segues.';
			case 'notHelpful': return 'Não é útil';
			case 'notInterested': return 'Não estou interessado';
			case 'notSealed': return 'Não selado';
			case 'notSealedYet': return 'Ainda não está selado';
			case 'note': return 'nota';
			case 'noteNotFound': return 'A nota não pôde ser encontrada';
			case 'notePublished': return 'A nota foi publicada!';
			case 'noteIdCopied': return 'ID da nota copiado! 👏';
			case 'walletDataNote': return 'Nota: Todos os dados relacionados à sua carteira serão armazenados localmente em segurança e jamais serão partilhados fora dos limites da aplicação.';
			case 'changeRatingNote': return 'Nota: a alteração à tua classificação será válida apenas por 5 minutos, após este período deixarás de a poder desfazer ou de a alterar.';
			case 'payPublishNote': return 'Nota: Certifica-te de que todo o conteúdo que forneces é definitivo, pois a publicação é considerada irreversível e os SATS gastos não são reembolsáveis.';
			case 'notes': return 'notas';
			case 'notesFromCommunity': return 'Notas da comunidade';
			case 'unTextW3Desc': return 'Notas que ainda não têm o status de Útil ou Não Útil.';
			case 'unTextW1': return 'Notas que receberam o status de Útil';
			case 'unTextW3': return 'Notas que precisam de mais classificações';
			case 'unTextW2': return 'Notas que receberam o status de Não Útil';
			case 'un2': return 'Notas em contínua classificação ';
			case 'notifications': return 'notificações';
			case 'npubNsecHex': return 'npub, nsec ou hex';
			case 'nwcCopied': return 'NWC foi copiado com sucesso!';
			case 'onDate': return ({required Object date}) => 'Em ${date}';
			case 'onSelectedWalletLinkIt': return 'na tua carteira selecionada e vincule-a.';
			case 'oneTimeRewards': return 'Recompensas únicas';
			case 'ongoing': return 'a decorrer';
			case 'nothingToShowHere': return 'Ops! Nada para mostrar aqui!';
			case 'optionBackgroundColor': return 'Cor de fundo da opção';
			case 'optionTextColor': return 'Cor do texto da opção';
			case 'options': return 'opções';
			case 'optionsNumber': return ({required Object number}) => 'Opções: ${number}';
			case 'orUseYourWallet': return 'Ou usa a tua carteira';
			case 'others': return 'outros';
			case 'privacyNote': return 'A nossa aplicação garante o máximo de privacidade ao armazenar, localmente e em segurança, os dados confidenciais dos utilizadores, empregando rigorosa criptografia. Descansa, sustentamos de uma política bastante restrita quanto ao fornecimento de dados, assegurando que informações sensíveis permanecem confidenciais e jamais sairão do equipamento electrónico do utilizador.  ';
			case 'owner': return 'Proprietário';
			case 'paid': return 'pago';
			case 'paidNote': return 'Nota paga';
			case 'paidNotePublished': return 'A nota paga foi publicada!';
			case 'paidNoteLoading': return 'Nota paga a carregar';
			case 'partialUsersZapped': return 'Utilizadores parciais recebem zaps!';
			case 'pasteNwcAddress': return 'Cola o endereço NWC';
			case 'pasteYourKey': return 'Cola a tua chave';
			case 'pasteKind1063': return 'Cola o teu kind 1063 nevent e envia-o';
			case 'pasteYourLink': return 'Cola o teu teu link e envia-o';
			case 'pay': return 'Pagar';
			case 'payAmount': return ({required Object number}) => 'Pagar ${number} sats';
			case 'payPublish': return 'Paga & Publica';
			case 'payWithNwc': return 'Paga com NWC';
			case 'paymentFailed': return 'Falha no pagamento';
			case 'paymentSucceeded': return 'Pagamento bem-sucedido';
			case 'paymentSurpassMax': return 'Pagamento ultrapassa o valor máximo permitido.';
			case 'peopleToFollow': return 'Pessoas a seguir';
			case 'permissionInvoiceNotGranted': return 'A permissão para pagar faturas não é concedida.';
			case 'pickYourComponent': return 'Escolhe o teu componente';
			case 'pickYourImage': return 'Escolhe a tua imagem';
			case 'pickYourMedia': return 'Escolhe a tua multimidia';
			case 'pickYourVideo': return 'Escolhe o teu vídeo';
			case 'pictureUrl': return 'URL da imagem';
			case 'plan': return 'Plano';
			case 'submitValidVideoEvent': return 'Por favor, submete um evento de vídeo válido';
			case 'points': return 'Pontos';
			case 'pointsSystem': return 'Sistema de pontos';
			case 'pollCloseDate': return 'Data de encerramento da sondagem';
			case 'pollOptions': return 'Opções da sondagem';
			case 'pollZapPublished': return 'A sondagem de zap foi publicada!';
			case 'popularNotes': return 'Notas populares';
			case 'post': return 'Publica';
			case 'postArticle': return 'Publica um artigo';
			case 'postNotFound': return 'Publicação não encontrada';
			case 'postCuration': return 'Publica curadoria';
			case 'postInNote': return 'Publica em nota';
			case 'postNote': return 'Publica nota';
			case 'postSmartWidget': return 'Publica smart widget';
			case 'postVideo': return 'Publica vídeo';
			case 'postedBy': return 'Publicado por';
			case 'postedFrom': return 'publicado de';
			case 'postedOn': return ({required Object date}) => 'Publicado a ${date}';
			case 'preview': return 'Pré-visualização';
			case 'privKeyCopied': return 'A chave privada foi copiada!👏';
			case 'pro': return 'Pro';
			case 'processCompleted': return 'O processo foi concluído';
			case 'profile': return 'Perfil';
			case 'profileLink': return 'Link do perfil';
			case 'profileCopied': return 'O link do perfil foi copiado! 👏';
			case 'profilePreview': return 'Pré-visualização do perfil';
			case 'profileRelays': return ({required Object number}) => 'Relays recomendadas para o perfil - ${number}';
			case 'publicKey': return 'Chave pública';
			case 'publicKeyCopied': return 'A chave pública foi copiada! 👏';
			case 'publish': return 'publicar';
			case 'publishRemoveDraft': return 'Publicar e remover o rascunho';
			case 'publishedOnText': return 'Publicado em';
			case 'publishedOn': return ({required Object date}) => 'Publicado a: ${date}';
			case 'pullToRefresh': return 'Puxe para atualizar';
			case 'qrCode': return 'Código QR';
			case 'rateHelpful': return 'Classifica como útil';
			case 'rateNotHelpful': return 'Classifica como não útil';
			case 'ratedHelpful': return 'Classificado como útil';
			case 'ratedNotHelpful': return 'Classificado como não útil';
			case 'un1': return 'Classificações de Não Útil em notas que terminaram com um status de Útil';
			case 'unTextR3': return 'Classificações de Não Útil em notas que terminaram com um status de Útil';
			case 'un2Desc': return 'Classificações em notas que atualmente não têm um status de Útil ou Não Útil';
			case 'unTextR1': return 'Classificações que ajudaram uma nota a ganhar o status de Útil';
			case 'unTextR2': return 'Classificações que ajudaram uma nota a ganhar o status de Não Útil';
			case 'readAboutVerifyingNotes': return 'Lê sobre como verificar notas';
			case 'readArticle': return 'Lê o artigo';
			case 'readMore': return 'Lê mais';
			case 'readOnly': return 'Somente leitura';
			case 'readWrite': return 'Lê/Escreve';
			case 'receive': return 'Recebe';
			case 'receiveSats': return 'Recebe sats';
			case 'recent': return 'recente';
			case 'recentTransactions': return 'Transações recentes';
			case 'recentWithReplies': return 'Recente com respostas';
			case 'reconnectWifi': return 'Reconectar a um wi-fi';
			case 'refresh': return 'atualizar';
			case 'refreshed': return 'Atualizado';
			case 'refreshing': return 'A atualizar';
			case 'relayInUse': return 'A relay já está a ser usada';
			case 'relaySettings': return ({required Object number}) => 'Configurações da relay ${number}';
			case 'relayingStuff': return 'A retransmitir coisas...';
			case 'relays': return 'Relays';
			case 'relaysNotReached': return 'Não foi possível alcançar as relays';
			case 'relaysListUpdated': return 'A lista de relays foi atualizada';
			case 'releaseToLoad': return 'Solte para carregar mais';
			case 'repeatedRewards': return 'Recompensas repetidas';
			case 'replies': return 'respostas';
			case 'reply': return 'responder';
			case 'replyingTo': return ({required Object name}) => 'Respondendo a: ${name}';
			case 'reposted': return 'rerepublicado';
			case 'requestInProgress': return 'Solicitação em andamento';
			case 'reveal': return 'Revelar';
			case 'rewards': return 'recompensas';
			case 'saveDraft': return 'Salvar rascunho';
			case 'saved': return 'salvo';
			case 'scanPay': return 'Digitaliza & paga';
			case 'scanAgain': return 'Digitaliza novamente';
			case 'scanQrCode': return 'Digitaliza o código QR';
			case 'sealed': return 'Selado';
			case 'search': return 'pesquisar';
			case 'searchContentByTitle': return ({required Object type}) => 'Pesquisar ${type} pelo título';
			case 'searchNameNpub': return 'Pesquisar por nome, npub, nprofile';
			case 'searchByUserName': return 'Pesquisar por nome de utilizador';
			case 'searchRelay': return 'Pesquisar relay';
			case 'secureDirectMessaging': return 'Mensagens diretas seguras';
			case 'seeAll': return 'Ver tudo';
			case 'seeAllAttempts': return 'Ver todas as tentativas';
			case 'seeAlso': return 'Ver também';
			case 'seeAnything': return 'Viste alguma coisa que desejas melhorar?';
			case 'seeMore': return 'Ver mais';
			case 'seeOriginal': return 'Ver original';
			case 'seeTranslation': return 'Ver tradução';
			case 'selectAndUploadLocaleImage': return 'Seleciona & carrega uma imagem local';
			case 'selectAdate': return 'Seleciona uma data';
			case 'selectDefaultWallet': return 'Seleciona uma carteira padrão nas configurações.';
			case 'selectUserToZap': return 'Seleciona um utilizador para enviares zap (opcional)';
			case 'selectValidUrlImage': return 'Seleciona um Url da imagem válido.';
			case 'selectWalletTransactions': return 'Seleciona uma carteira para obter as transações mais recentes.';
			case 'selectOneReason': return 'Seleciona pelo menos um motivo';
			case 'selectComponent': return 'Seleciona o componente conveniente e edita-o.';
			case 'send': return 'Enviar';
			case 'sendSats': return 'Enviar sats';
			case 'setProperName': return 'Define um nome apropriado';
			case 'setSatsMoreThanZero': return 'Define uma quantidade de sats maior que 0';
			case 'setBookmarkTitleDescription': return 'Define um título e uma descrição para a tua lista de marcadores.';
			case 'setValidKey': return 'Define uma chave válida';
			case 'setUpYourLink': return 'Configura o teu link';
			case 'setUpYourNevent': return 'Configura o teu evento';
			case 'setYourRating': return 'Define a tua classificação';
			case 'settings': return 'configurações';
			case 'share': return 'compartilhar';
			case 'shareGlimps': return 'Partilha um vislumbre de ti próprio, em palavras que pareçam verdadeiras.';
			case 'shareContent': return 'Partilhar conteúdo';
			case 'shareImage': return 'Partilhar imagem';
			case 'shareLink': return 'Partilhar link';
			case 'shareNaddr': return 'Partilhe naddr';
			case 'shareNoteId': return 'Partilhar ID da nota';
			case 'shareNprofile': return 'Partilhar nprofile';
			case 'shareProfile': return 'Partilhar perfil';
			case 'shareProfileDesc': return 'Partilha o teu perfil para alcançar mais pessoas, conecta-te com outras pessoas e aumenta a tua rede';
			case 'show': return 'mostrar';
			case 'showArticlesNotesSuggestions': return 'Mostrar sugestões de artigos/notas';
			case 'showSecret': return 'Mostrar chave secreta!';
			case 'showStats': return 'Mostrar estatísticas';
			case 'showSuggestedInterests': return 'Mostrar interesses sugeridos';
			case 'showSuggestedPeople': return 'Mostrar pessoas sugeridas para seguir';
			case 'showSuggestions': return 'Mostrar sugestões';
			case 'signIn': return 'Entrar';
			case 'usingViewModeDesc': return 'Entra com a tua chave privada e junta-te à comunidade.';
			case 'size': return 'tamanho';
			case 'slideToPay': return 'Desliza para pagar';
			case 'smartWidget': return 'Smart widget';
			case 'smartWidgetBuilder': return 'Criador de smart widget';
			case 'smartWidgetChecker': return 'Verificador de smart widget';
			case 'smartWidgetNotFound': return 'O smart widget não pôde ser encontrado';
			case 'smartWidgetPublishedSuccessfuly': return 'O smart widget foi publicado com sucesso';
			case 'smartWidgets': return 'Smart widgets';
			case 'smartWidgetsDrafts': return 'Rascunhos de smart widgets';
			case 'smartWidgetsTemplates': return 'Modelos de smart widgets';
			case 'software': return 'Programas de Software';
			case 'somethingWentWrong': return 'Há algo errado!';
			case 'soonUsers': return 'Em breve os utilizadores poderão utilizar os pontos consumíveis no seguinte conjunto de atividades:';
			case 'source': return 'Fonte';
			case 'sourceRecommended': return 'Fonte (recomendado)';
			case 'splitRevenuesWithUsers': return 'Divide as receitas com utilizadores';
			case 'splitZapsWith': return 'Divide zaps com';
			case 'spreadWordSharingContent': return 'Divulga o teu conteúdo, partilhando-o em qualquer lugar.';
			case 'startBuildingSmartWidget': return 'Começa a construir e a personalizar o teu smart widget para usar na rede Nostr';
			case 'startEarningPoints': return 'Começa a ganhar e aproveita ao máximo os teus Pontos Yaki 🎉';
			case 'startSearchContent': return 'Começa a pesquisar conteúdo';
			case 'startSearchPeople': return 'Começa a pesquisar por outras pessoas';
			case 'stickers': return 'adesivos';
			case 'submit': return 'enviar';
			case 'submitBookmarkList': return 'Submeter lista de marcadores';
			case 'submitCuration': return 'Submeter curadoria';
			case 'successfulRelays': return 'relays bem-sucedidas';
			case 'suggestedInterests': return 'Interesses sugeridos';
			case 'suggestions': return 'Sugestões';
			case 'suggestionsBox': return 'Caixa de sugestões';
			case 'summaryOptional': return 'Resumo (opcional)';
			case 'supportYakihonne': return 'Apoia YakiHonne';
			case 'supportedNips': return 'Nips suportados';
			case 'switchAccounts': return 'Trocar de contas';
			case 'taylorExperienceInterests': return 'Personaliza a tua experiência selecionando os teus interesses principais';
			case 'telegramUrl': return 'Url do Telegram';
			case 'templates': return 'modelos';
			case 'text': return 'texto';
			case 'textColor': return 'Cor do texto';
			case 'textCustomization': return 'Personalização de texto';
			case 'textSuccesfulyCopied': return 'Texto copiado com sucesso!';
			case 'theFollowingNote': return 'a seguinte nota:';
			case 'smHaveTitle': return 'O smart widget deve ter pelo menos um título';
			case 'smHaveOneWidget': return 'O smart widget deve ter pelo menos um componente.';
			case 'valueBetweenMinMax': return 'O valor deve estar entre a quantia mínima e máxima de sats';
			case 'noDataFromGpt': return 'Existem dados por mostrar do GPT.';
			case 'oneFeedOptionAvailable': return 'Deve haver pelo menos uma opção de feed disponível.';
			case 'unTextW1Desc': return 'Estas notas estão agora a ser exibidas para todas as outras pessoas que vêem a publicação, acrescentando contexto e ajudando a mantendo-as informadas.';
			case 'unTextW2Desc': return 'Estas notas foram classificadas como Não Úteis por um número suficiente de contribuidores, incluindo aqueles que às vezes discordam nas suas avaliações anteriores.';
			case 'un1Desc': return 'Estas classificações são contadas duplamente porque indicam muitas vezes apoio a notas que outros consideraram úteis.';
			case 'unTextR1Desc': return 'Estas classificações identificaram notas Úteis, mostradas a todos, e acrescentam contexto e ajudam a manter as pessoas informadas.';
			case 'unTextR2Desc': return 'Estas classificações melhoram as Notas da Comunidade, fornecendo feedback aos autores das notas e permitindo que os contribuidores se concentrem nas notas mais promissoras';
			case 'notValidVideoEvent': return 'Este evento não é um evento de vídeo válido!';
			case 'sensitiveContent': return 'Este é um conteúdo sensível';
			case 'emptyVideoUrl': return 'Este nevento tem um Url vazio';
			case 'thisNoteAwaitRating': return 'esta nota aguarda classificação da comunidade.';
			case 'yourNoteAwaitRating': return 'esta nota aguarda classificação da comunidade.';
			case 'smartWidgetConvention': return 'Este smart widget não segue a convenção acordada.';
			case 'useCannotBeZapped': return 'Este utilizador não pode receber zaps';
			case 'thread': return 'tópico';
			case 'thumbnailPreview': return 'Pré-visualização da miniatura';
			case 'title': return 'título';
			case 'titleData': return ({required Object description}) => 'Título: ${description}';
			case 'toBeAbleSendSats': return 'Para poderes enviar zaps, certifica-te de conectar a tua carteira bitcoin lighting.';
			case 'topReasonsSelected': return 'Principais motivos selecionados pelos avaliadores:';
			case 'totalAmount': return 'Montante total';
			case 'totalNumber': return ({required Object number}) => 'Total: ${number}';
			case 'trending': return 'tendências';
			case 'tryAgain': return 'Tente novamente';
			case 'type': return 'escrever';
			case 'typeValidZapQuestion': return 'Escreve uma pergunta de sondagem válida!';
			case 'unableToOpenUrl': return 'Não foi possível abrir o URL';
			case 'undo': return 'Desfazer';
			case 'undoRating': return 'Desfazer classificação';
			case 'unfollow': return 'deixar de seguir';
			case 'unfollowAll': return 'Deixar de seguir todos';
			case 'pendingUnfollowing': return 'A deixar de seguir...';
			case 'unknown': return 'Desconhecido';
			case 'unknownVerifiedNote': return 'Nota de desconhecido verificada';
			case 'unlocked': return 'Desbloqueado';
			case 'unmute': return 'ativar o som';
			case 'unmuteUser': return 'Remover silêncio ao utilizador';
			case 'untitled': return 'Sem título';
			case 'update': return 'atualizar';
			case 'updateInterests': return 'Atualizar interesses';
			case 'updateProfile': return 'Atualizar perfil';
			case 'updatedSuccesfuly': return 'Atualizado com sucesso';
			case 'updates': return 'Atualizações';
			case 'updatesNews': return 'Notícias de atualizações';
			case 'uploadAndUse': return 'Carrega & usa';
			case 'uploadImage': return 'Carregar imagem';
			case 'uploadingImage': return 'A carregar imagem...';
			case 'upvotes': return 'Votos positivos';
			case 'url': return 'Url';
			case 'useAmber': return 'Usar Amber';
			case 'useInvoice': return 'Usar fatura';
			case 'useTemplate': return 'Usar modelo';
			case 'user': return 'utilizador';
			case 'userCannotBeFound': return 'O utilizador não pôde ser encontrado';
			case 'userHasBeenMuted': return 'O utilizador foi silenciado';
			case 'userHasBeenUnmuted': return 'O utilizador foi reativado';
			case 'userName': return 'Nome de utilizador';
			case 'userNameCopied': return 'O nome de utilizador foi copiado com sucesso!';
			case 'userZappedSuccesfuly': return 'O utilizador recebeu zapscom sucesso';
			case 'userImpact': return 'Impacto do utilizador';
			case 'userRelays': return 'Relays do utilizador';
			case 'usingExternalSign': return 'Usando um signer externo';
			case 'value': return 'valor';
			case 'verifyNip05': return 'Endereço Nostr verificado (NIP 05)';
			case 'verifiedNoteNotFound': return 'Não foi possível encontrar a nota verificada';
			case 'verifyNotes': return 'Verificar notas';
			case 'verifyingNote': return 'A verificar nota';
			case 'version': return 'Versão';
			case 'video': return 'vídeo';
			case 'videoNotFound': return 'Não foi possível encontrar o vídeo';
			case 'videoCustomization': return 'Personalização de vídeo';
			case 'videoAddedCuration': return 'O vídeo foi adicionado à tua curadoria.';
			case 'videoUrl': return 'Url do vídeo';
			case 'videos': return 'vídeos';
			case 'videosAvailableCuration': return 'Vídeos disponíveis nesta curadoria';
			case 'view': return 'visualizar';
			case 'viewProfile': return 'Ver perfil';
			case 'viewQrCode': return 'Ver código QR';
			case 'views': return 'Visualizações';
			case 'visitProfile': return 'Visitar perfil';
			case 'voteNotSubmitted': return 'Não foi possível submeter o voto';
			case 'voteRequired': return 'É necessário votar para exibir estatísticas.';
			case 'votesByUsers': return 'Votos por utilizadores';
			case 'votesByZaps': return 'Votos por zaps';
			case 'votesNumber': return ({required Object number}) => 'Votos: ${number}';
			case 'waitingGenerationOfInvoice': return 'A aguardar a criação de faturas.';
			case 'wallet': return 'carteira';
			case 'walletNotLinked': return 'A carteira não pode ser vinculada. Endereço Lighting errado';
			case 'walletCreated': return 'A carteira foi criada com sucesso';
			case 'walletLinked': return 'A carteira foi vinculada com sucesso';
			case 'wallets': return 'carteiras';
			case 'warning': return 'aviso';
			case 'watchNow': return 'vê agora';
			case 'noLnInNwc': return 'Não nos foi possível recuperar o endereço do teu segredo NWC. Por favor, verifica o teu provedor de serviços de Lighting para copiar o teu endereço ou para convenientemente atualizares o teu perfil.';
			case 'readAboutVerifyingNotesDesc': return 'Criamos um artigo para te ajudar a entender melhor o nosso objetivo';
			case 'website': return 'Website';
			case 'weight': return 'peso';
			case 'whatThinkThis': return 'O que pensas sobre isto?';
			case 'whatThinkOfThat': return 'O que pensas sobre isso?';
			case 'whatsOnYourMind': return 'Em que estás a pensar?';
			case 'whatsThis': return 'O que é isto?';
			case 'whyVerifyingNotes': return 'Porquê as notas de verificação?';
			case 'widgets': return 'widgets';
			case 'writeCommentOptional': return 'Escreve um comentário (opcional)';
			case 'writeYourMessage': return 'Escreva uma mensagem';
			case 'writeNote': return 'Escreve uma nota';
			case 'writeSummary': return 'Escreve um resumo';
			case 'writeValidNote': return 'Anota uma nota válida!';
			case 'writeOnly': return 'Escrever apenas';
			case 'writeSomethingAboutYou': return 'Escreve algo sobre sobre ti!';
			case 'writeSomething': return 'Escreve alguma coisa...';
			case 'writeYourText': return 'Escreve o teu texto';
			case 'xUrl': return 'Url do X';
			case 'yakiChest': return 'Baú Yaki';
			case 'yakihonne': return 'YakiHonne';
			case 'yakihonneChest': return 'Baú do YakiHonne!';
			case 'yakihonneConsPoints': return 'Pontos consumíveis do YakiHonne';
			case 'yakihonneImprovements': return 'Melhorias do YakiHonne';
			case 'yakihonneNote': return 'Nota do YakiHonne';
			case 'yakihonneNotification': return 'Notificação do YakiHonne';
			case 'yakiNwc': return 'NWC do YakiHonne';
			case 'clearAppCacheDesc': return 'Estás prestes a limpar o cache da aplicação. Desejas continuar?';
			case 'deleteWalletDesc': return 'Estás prestes a excluir esta carteira. Desejas prosseguir?';
			case 'linkWalletDesc': return 'Estás prestes a substituir a tua carteira anterior e a vincular uma carteira nova ao teu perfil. Desejas prosseguir?';
			case 'undoRatingDesc': return 'Você está prestes a desfazer sua classificação. Deseja prosseguir?';
			case 'alreadyLoggedIn': return 'Já te encontras conectado!';
			case 'deleteAccountMessage': return 'Estás a tentar aceder a uma conta que foi posteriormente eliminada.';
			case 'loggedToYakiChest': return 'Estás conectado ao baú do Yakihonne';
			case 'loggedIn': return 'Estás conectado!';
			case 'notUsingSecureDms': return 'Já não estás a usar as Dms seguras';
			case 'usingSecureDms': return 'Estás agora a usar as Dms seguras';
			case 'usingExternalSignDesc': return 'Estás a usar um signer externo';
			case 'secKeyWalletDesc': return 'Podes encontrar a chave secreta da sua conta e o segredo da conexão da carteira nas tuas configurações. Estas chaves são essenciais para garantir o acesso à tua conta e carteira. Por favor, mantem ambas em segurança e privadas.';
			case 'secKeyDesc': return 'Podes encontrar a chave secreta da sua conta nas tuas configurações. Esta chave é essencial para garantir o acesso à tua conta. Por favor, mantém-la em segurança e privada.';
			case 'uploadSendMedia': return 'Podes fazer o carregamento e enviar multimidia logo após a selecionar ou à sua captação.';
			case 'uploadPasteUrl': return 'Podes fazer o carregamento ou colar um url para a tua imagem preferida';
			case 'canUploadPastLink': return 'Podes fazer o carregamento, colar um link ou escolher um evento kind 1063 para o teu vídeo.';
			case 'findPaidNoteCorrect': return 'Achas esta nota paga correta.';
			case 'findPaidNoteMisleading': return 'Achas esta nota paga enganosa.';
			case 'alreadyContributed': return 'Já contribuiste';
			case 'alreadyVoted': return 'Já votaste nesta sondagem';
			case 'congratsDesc': return ({required Object number}) => 'Foste recompensado com ${number} Xp pelas seguintes ações, sê ativo e ganha recompensas!';
			case 'youHaveLeftNote': return 'Deixaste uma nota nesta nota paga:';
			case 'noRewards': return 'Não tens recompensas, interage ou escreve notas verificadas para as obter.';
			case 'noWalletLinkedMessage': return 'Não tens nenhuma carteira vinculada ao teu perfil, desejas vincular esta carteira?';
			case 'noWalletLinkedToYouProfile': return 'Não tens nenhuma carteira vinculada ao teu perfil.';
			case 'youHaveRated': return 'Classificaste';
			case 'ratedNoteSealed': return 'Avaliaste a seguinte nota, a qual foi selada:';
			case 'youRatedHelpful': return 'classificaste isto como útil';
			case 'youRatedNotHelpful': return 'classificaste isto como não útil';
			case 'ownReceivedSat': return ({required Object number}) => 'Você recebeu ${number} Sábados';
			case 'ownSentSat': return ({required Object number}) => 'Você enviou ${number} Sats';
			case 'voteToSeeStats': return 'Você deveria votar para poder ver as estatísticas';
			case 'you': return 'Você: ';
			case 'confirmDeleteContent': return ({required Object type}) => 'Você está prestes a excluir isto ${type}, deseja prosseguir?';
			case 'confirmDeleteBookmarkList': return 'Você está prestes a excluir esta lista de favoritos. Deseja continuar?';
			case 'confirmDeleteDraft': return 'Você está prestes a excluir este rascunho. Deseja prosseguir?';
			case 'deleteCoverPicDesc': return 'Você está prestes a excluir sua foto de capa. Deseja prosseguir?';
			case 'youreAllSet': return 'Você está pronto';
			case 'switchToMonolayout': return 'Você está mudando para um layout mono e possui elementos em ambos os lados. Isso apagará o conteúdo do contêiner. Deseja continuar?';
			case 'usingViewMode': return 'Você está usando o modo de visualização';
			case 'muteUserDesc': return ({required Object name}) => 'Você está prestes a silenciar ${name}, deseja prosseguir?';
			case 'unmuteUserDesc': return ({required Object name}) => 'Você está prestes a ativar o som ${name}, deseja prosseguir?';
			case 'articlePublished': return 'Seu artigo foi publicado!';
			case 'yourDisplayName': return 'Seu nome de exibição';
			case 'yourNoteSealed': return 'Sua seguinte nota acabou de ser selada:';
			case 'yourName': return 'Seu nome';
			case 'ratingDeleted': return 'Sua avaliação foi excluída';
			case 'ratingSubmittedCheckReward': return 'Sua classificação foi enviada. Verifique sua página de recompensas para reivindicar sua recompensa de classificação';
			case 'verifiedNoteAdded': return 'A tua nota verificada foi adicionada. Verifica a tua página de recompensas para resgatar a tua recompensa por escrito';
			case 'verifiedNoteSealed': return 'A tua nota verificada foi selada.';
			case 'yourWebsite': return 'O teu Website';
			case 'youtubeUrl': return 'Url do YouTube';
			case 'zap': return 'zap';
			case 'zapPoll': return 'Sondagem Zap';
			case 'zapPollCustomization': return 'Personalização da sondagem Zap';
			case 'zapPollNevent': return 'Sondagem Zap nevent';
			case 'zapSplits': return 'Divisões de Zap';
			case 'zappers': return 'Zappers';
			case 'zaps': return 'zaps';
			case 'zapReceived': return 'Zaps recebidos';
			case 'zapSent': return 'Zaps enviados';
			case 'comingSoon': return 'Em breve';
			case 'content': return 'Contente';
			case 'expiresOn': return ({required Object date}) => 'Expira em ${date}';
			case 'reactions': return 'Reações';
			case 'reposts': return 'Republicações';
			case 'collapseNote': return 'Recolher nota';
			case 'notifDisabled': return 'As notificações estão desativadas!';
			case 'notifDisabledMessage': return 'As notificações estão desabilitadas para este tipo, você pode habilitá-las nas configurações de notificações.';
			case 'oneNotifOptionAvailable': return 'Deve haver pelo menos uma opção de notificação disponível.';
			case 'readAll': return 'Leia tudo';
			case 'usernameTaken': return 'O nome de usuário está em uso';
			case 'usernameRequired': return 'O nome de usuário é obrigatório';
			case 'deleteWalletConfirmation': return 'Certifique-se de salvar sua frase de conexão NWC com segurança, pois não podemos ajudar na recuperação de carteiras perdidas.';
			case 'unsupportedKind': return 'Tipo não compatível';
			case 'analyticsCrashlytics': return 'Crashytics';
			case 'analyticsCache': return 'Crashlytics e cache';
			case 'analyticsCacheOn': return 'A Crashytics foi ativada.';
			case 'analyticsCacheOff': return 'Crashytics foi desligado.';
			case 'shareNoUsage': return 'Você não compartilha que a Crashlytics conosco no momento.';
			case 'wantShareAnalytics': return 'Quer compartilhar o Crashlytics?';
			case 'yakihonneAnCr': return 'Crashlytics de Yakihonne';
			case 'crashlyticsTerms': return 'A coleta de Crashlytics anonimizados é vital para refinar os recursos e a experiência do usuário do nosso aplicativo. ';
			case 'collectAnonymised': return 'Coletamos o Crashytics anonimizado para melhorar a experiência do aplicativo.';
			case 'linkWalletToProfile': return 'Link Wallet com seu perfil';
			case 'linkWalletToProfileDesc': return 'A carteira vinculada será usada para receber SATs';
			case 'noWalletLinked': return 'Você não tem carteira ligada ao seu perfil, considere vincular um dos seus no menu acima';
			case 'addPoll': return 'Adicionar pesquisa';
			case 'browsePolls': return 'Navegue por pesquisas';
			case 'maciPolls': return 'Poll Maci';
			case 'beta': return 'Beta';
			case 'choosePollType': return 'Escolha um tipo de enquete';
			case 'created': return 'Criado';
			case 'tallying': return 'Contatando';
			case 'ended': return 'Terminou';
			case 'closed': return 'Fechado';
			case 'voteResultsBy': return 'Resultados da votação por';
			case 'votes': return 'votos';
			case 'voiceCredit': return 'Crédito de voz';
			case 'viewDetails': return 'Ver detalhes';
			case 'signup': return 'Inscrever-se';
			case 'notDownloadProof': return 'Não foi possível baixar provas';
			case 'name': return 'Nome';
			case 'status': return 'Status';
			case 'circuit': return 'Circuito';
			case 'votingSystem': return 'Sistema de votação';
			case 'proofSystem': return 'Sistema de prova';
			case 'gasStation': return 'Posto de gasolina';
			case 'totalFund': return '(Fundo Total)';
			case 'roundStart': return 'Início redondo';
			case 'roundEnd': return 'Final redondo';
			case 'operator': return 'Operador';
			case 'contractCreator': return 'Criador de contratos';
			case 'contractAddress': return 'Endereço do contrato';
			case 'blockHeight': return 'Altura do bloco';
			case 'atContractCreation': return ({required Object number}) => '${number} (na criação de contratos)';
			case 'zkProofs': return 'Provas de zk';
			case 'downloadZkProofs': return 'Baixar provas';
			case 'walletConnectionString': return 'String de conexão com carteira';
			case 'walletConnectionStringDesc': return 'Certifique -se de copiar ou exportar com segurança sua sequência de conexão com carteira. ';
			case 'export': return 'Exportar';
			case 'logout': return 'Log Out';
			case 'exportAndLogout': return 'Exportar e fazer logon';
			case 'exportWalletsDesc': return 'Parece que você tem carteiras ligadas à sua conta. ';
			case 'manageWallets': return 'Gerenciar carteiras';
			case 'roundDuration': return 'Duração redonda';
			case 'startAt': return ({required Object date}) => 'Começa em: ${date}';
			case 'loginAction': return 'Conecte-se';
			case 'addPicture': return 'Adicione a imagem';
			case 'editPicture': return 'Editar imagem';
			case 'exportKeys': return 'Chaves de exportação';
			case 'mutedUser': return 'Usuário silenciado';
			case 'unaccessibleContent': return 'Conteúdo inacessível';
			case 'mutedUserDesc': return 'Você silenciou este usuário, considere desmembrar para visualizar este conteúdo';
			case 'commentHidden': return 'Este comentário está escondido';
			case 'upcoming': return 'Por vir';
			case 'exportCredentials': return 'Credenciais de exportação';
			case 'loginToYakihonne': return 'Faça login em Yakihonne';
			case 'alreadyUser': return 'Já é um usuário?';
			case 'createPoll': return 'Criar enquete';
			case 'gasStationTotal': return 'Posto de gasolina (total financiado)';
			case 'gasStationRemaining': return 'Posto de gasolina (saldo restante)';
			case 'paste': return 'Colar';
			case 'manual': return 'Manual';
			case 'contacts': return 'Contatos';
			case 'typeManualDesc': return 'Digite o endereço de raios, fatura de raios ou lnurl';
			case 'useValidPaymentRequest': return 'Por favor, use solicitação de pagamento válida';
			case 'save': return 'Salvar';
			case 'saveImageGallery': return 'A imagem foi baixada na sua galeria';
			case 'errorSavingImage': return 'Ocorreu o erro ao baixar a imagem';
			case 'copyImageGallery': return 'A imagem foi copiada para sua área de transferência';
			case 'errorCopyImage': return 'Ocorreu o erro ao copiar a imagem';
			case 'scan': return 'Scan';
			case 'invalidLightningAddress': return 'Endereço de raios inválidos';
			case 'deleteAccountDesc': return 'Você está prestes a excluir sua conta, deseja prosseguir?';
			case 'paymentFailedInvoice': return 'Falha no pagamento: verifique a validade desta fatura';
			case 'validSatsAmount': return 'Defina uma quantidade válida de SATs';
			case 'placeholder': return 'Espaço reservado';
			case 'inputFieldCustomization': return 'Personalização do campo de entrada';
			case 'addInputField': return 'Adicione o campo de entrada';
			case 'addButton': return 'Adicionar botão';
			case 'selectImage': return 'Selecione Imagem';
			case 'moveLeft': return 'Mover para a esquerda';
			case 'moveRight': return 'Mova -se para a direita';
			case 'buttonRequired': return 'Deve haver pelo menos um botão disponível';
			case 'missingInputDesc': return 'Parece que você está usando uma das funções personalizadas que requer um componente de campo de entrada sem incorporar um no seu widget inteligente, adicione um campo de entrada para que a função funcione corretamente.';
			case 'countdown': return 'Contagem regressiva';
			case 'contentEndsAt': return 'O conteúdo termina em';
			case 'countdownTime': return 'O tempo de contagem regressiva é obrigatório';
			case 'contentEndsDate': return 'O conteúdo termina a data é obrigatória';
			case 'lnMandatory': return 'O endereço de relâmpago é obrigatório';
			case 'pubkeysMandatory': return 'Pelo menos um perfil é obrigatório';
			case 'buttonNoUrl': return 'URLs de botões são obrigatórios';
			case 'shareWidgetImage': return 'Compartilhe a imagem do widget';
			case 'inputField': return 'Campo de entrada';
			case 'noReplies': return 'Sem respostas';
			case 'message': return 'Mensagem';
			case 'chat': return 'Bater papo';
			case 'onlyLettersNumber': return 'Somente cartas e números permitidos';
			case 'appCache': return 'Cache de app';
			case 'cachedData': return 'Dados em cache';
			case 'cachedMedia': return 'Mídia em cache';
			case 'cacheCleared': return 'Cache foi limpo';
			case 'closeAppClearingCache': return 'É preferível reiniciar o aplicativo ao limpar o cache para garantir que todas as alterações tenham efeito e o aplicativo seja executado sem problemas';
			case 'appCacheNotice': return 'Seu cache de aplicativos está crescendo em tamanho. ';
			case 'manageCache': return 'Gerencie o cache';
			case 'filterByTime': return 'Filtre por tempo';
			case 'allTime': return 'O tempo todo';
			case 'oneMonth': return '1 mês';
			case 'threeMonths': return '3 meses';
			case 'sixMonths': return '6 meses';
			case 'oneYear': return '1 ano';
			case 'defaultZapAmount': return 'Valor Zap padrão';
			case 'oneTapZap': return 'Ativar um toque zap';
			case 'verify': return 'Verificar';
			case 'reset': return 'reiniciar';
			case 'appCannotVerified': return 'O aplicativo não pode ser verificado ou inválido';
			case 'useValidAppUrl': return 'Use um URL de aplicativo válido';
			case 'app': return 'App';
			case 'userNotConnected': return 'Usuário não conectado';
			case 'userCannotSignEvent': return 'Este usuário não pode assinar eventos.';
			case 'invalidEvent': return 'Evento inválido';
			case 'eventCannotBeSigned': return 'Evento não pode ser assinado';
			case 'signEvent': return 'Evento de assinatura';
			case 'sign': return 'Sinal';
			case 'signPublish': return 'Sign & Publish';
			case 'signEventDes': return 'Você está prestes a assinar o seguinte evento';
			case 'enableAutomaticSigning': return 'Ativar assinatura automática';
			case 'tools': return 'Ferramentas';
			case 'searchSmartWidgets': return 'Procure widgets inteligentes';
			case 'noToolsAvailable': return 'Nenhuma ferramenta disponível';
			case 'underMaintenance': return 'Sob manutenção';
			case 'smartWidgetMaintenance': return 'O Widget Smart está abaixado para manutenção. ';
			case 'mySavedTools': return 'Minhas ferramentas salvas';
			case 'availableTools': return 'Ferramentas disponíveis';
			case 'remove': return 'Remover';
			case 'youHaveNoTools': return 'Você não tem ferramentas';
			case 'discoverTools': return 'Descubra ferramentas publicadas para ajudá -lo com sua criação de conteúdo';
			case 'addWidgetTools': return 'Adicione ferramentas de widget';
			case 'widgetSearch': return 'Pesquisa de widgets';
			case 'widgetSearchDesc': return 'Procurando por widgets inteligentes publicados e o que as pessoas fizeram';
			case 'getInspired': return 'Inspire -se';
			case 'getInspirtedDesc': return 'Peça à nossa IA para ajudá -lo a construir seu widget inteligente';
			case 'trySearch': return 'Experimente diferentes métodos de pesquisa';
			case 'typeForCommands': return 'Tipo / para comandos';
			case 'loadMore': return 'Carregar mais';
			case 'searchingFor': return ({required Object name}) => 'Procurar: ${name}';
			case 'playground': return 'Playground';
			case 'typeKeywords': return 'Tipo Palavras -chave (ou seja: palavra -chave1, palavra -chave2 ..)';
			case 'enableGossip': return 'Modelo de fofoca';
			case 'enableGossipDesc': return 'O modelo de fofoca está desativado por padrão. ';
			case 'enableExternalBrowser': return 'Use navegador externo';
			case 'restartAppTakeEffect': return 'Reinicie o aplicativo para que a ação entre em vigor';
			case 'tips': return 'Pontas';
			case 'docs': return 'Documentos';
			case 'tryMiniApp': return 'Experimente seu mini-aplicativo com testes interativos e práticos.';
			case 'exploreOurRepos': return 'Explore nossos repositórios ou verifique nossos Widgets Smart.';
			case 'bringAi': return 'Estamos trazendo ai!';
			case 'bringAiDesc': return 'Estamos criando um assistente de IA para otimizar seu trabalho com widgets programáveis ​​e desenvolvimento de mini-app-mantenha-se de olho!';
			case 'notesCount': return ({required Object number}) => '${number} Nota (s)';
			case 'mixedContentCount': return ({required Object number}) => '${number} contente';
			case 'noApp': return 'Nenhum aplicativo adequado pode ser encontrado para abrir o arquivo exportado';
			case 'andMore': return ({required Object number}) => '& ${number} outros)';
			case 'addFilter': return 'Adicione o filtro';
			case 'entitleFilter': return 'Direito do filtro';
			case 'includedWords': return 'Palavras incluídas';
			case 'excludedWords': return 'Palavras excluídas';
			case 'hideSensitiveContent': return 'Ocultar conteúdo sensível';
			case 'mustIncludeThumbnail': return 'Deve incluir miniatura';
			case 'forArticles': return 'Para artigos';
			case 'forVideos': return 'Para vídeos';
			case 'forCurations': return 'Para curações';
			case 'articleMinWords': return 'Conteúdo contagem de palavras mínimas';
			case 'showOnlyArticleMedia': return 'Mostre apenas artigos com mídia';
			case 'showOnlyNotesMedia': return 'Mostre apenas notas com mídia';
			case 'curationsType': return 'Tipo de curadoria';
			case 'minItemCount': return 'Itens mínimos contam';
			case 'addWord': return 'Adicione uma palavra adequada';
			case 'wordNotInIncluded': return 'Verifique se a palavra não está nas palavras incluídas';
			case 'wordNotInExcluded': return 'Verifique se a palavra não está nas palavras excluídas';
			case 'fieldRequired': return 'Campo necessário';
			case 'filterAdded': return 'Filtro foi adicionado';
			case 'filterUpdated': return 'O filtro foi atualizado';
			case 'filterDeleted': return 'O filtro foi excluído';
			case 'filters': return 'Filtros';
			case 'contentFeed': return 'Feed de conteúdo';
			case 'communityFeed': return 'Feed comunitário';
			case 'relaysFeed': return 'Relés feed';
			case 'marketplaceFeed': return 'Feed de mercado';
			case 'addYourFeed': return 'Adicione seu feed preferido';
			case 'myList': return 'Minha lista';
			case 'allFreeFeeds': return 'Todos os feeds gratuitos';
			case 'noRelays': return 'Nenhum relés está presente';
			case 'addRelays': return 'Adicione sua lista de revezamentos para desfrutar de um feed limpo e personalizado';
			case 'adjustYourFeedList': return 'Ajuste sua lista de feeds';
			case 'addRelayUrl': return 'Adicione URL do relé';
			case 'feedOptionEnabled': return 'Pelo menos uma opção de alimentação deve ser ativada';
			case 'feedSetUpdate': return 'O conjunto de feeds foi atualizado';
			case 'global': return 'Global';
			case 'fromNetwork': return 'Da rede';
			case 'top': return 'Principal';
			case 'showFollowingList': return 'Seu feed atual é baseado na lista seguinte de outra pessoa, comece a seguir as pessoas para adaptar seu feed de sua preferência';
			case 'from': return 'De';
			case 'to': return 'Para';
			case 'dayMonthYear': return 'dd/mm/aaaa';
			case 'fromDateMessage': return 'A data de \'de\' deve ser mais cedo do que \'a\' data';
			case 'toDateMessage': return '\'Data\' deve ser mais tarde que \'data\'';
			case 'noResults': return 'Sem resultados';
			case 'noResultsFilterMessage': return 'Parece que você está aplicando um filtro personalizado, por favor ajuste os parâmetros e datas para adquirir mais dados';
			case 'noResultsNoFilterMessage': return 'Nada foi encontrado, altere sua fonte de conteúdo ou aplique diferentes parâmetros de filtro';
			case 'addToNotes': return 'Adicione às notas';
			case 'addToDiscover': return 'Adicione para descobrir';
			case 'shareRelayContent': return 'Compartilhe o conteúdo do relé';
			case 'shareRelayUrl': return 'Compartilhe URL do relé';
			case 'basic': return 'Básico';
			case 'privateMessages': return 'Mensagens privadas';
			case 'pushNotifications': return 'Notificações push';
			case 'repliesView': return 'Visualização de respostas';
			case 'threadView': return 'Fio';
			case 'boxView': return 'Caixa';
			case 'viewAs': return 'Ver como';
			case 'feedSettings': return 'Configurações de alimentação';
			case 'appliedFilterDesc': return 'Esta nota está oculta devido ao filtro aplicado atual.';
			case 'showNote': return 'Mostre nota';
			case 'allMedia': return 'Toda a mídia';
			case 'searchInNostr': return 'Pesquise em Nostr';
			case 'findPeopleContent': return 'Encontre pessoas, anotações e conteúdo';
			case 'activeService': return 'Serviço ativo';
			case 'regularServers': return 'Servidores regulares';
			case 'blossomServers': return 'Servidores de flor';
			case 'mirrorAllServer': return 'Espelhe todos os servidores';
			case 'mainServer': return 'Servidor principal';
			case 'select': return 'Selecione';
			case 'noServerFound': return 'Nenhum servidor encontrado';
			case 'serverExists': return 'O servidor já existe em sua lista';
			case 'invalidUrl': return 'Formato de URL inválido';
			case 'serverPath': return 'Caminho do servidor';
			case 'errorAddingBlossom': return 'Ocorreu o erro ao adicionar servidor de flor';
			case 'errorSelectBlossom': return 'Ocorreu o erro ao selecionar o servidor de flor';
			case 'errorDeleteBlossom': return 'Ocorreu o erro ao excluir o servidor de flor';
			case 'wotConfig': return 'Web of Trust Configuration';
			case 'wot': return 'Web of Trust';
			case 'wotThreshold': return 'Limite da Web of Trust';
			case 'postActions': return 'Pós -ações';
			case 'enabledFor': return 'Ativado para';
			case 'dmRelayTitle': return 'Mensagens privadas Os relés não estão configurados!';
			case 'dmRelayDesc': return 'Atualize sua lista de relés de acordo. ';
			case 'youFollow': return 'Você segue';
			case 'quotaLimit': return 'Você excedeu seu limite diário de cota';
			case 'alwaysUseExternal': return 'Sempre use zaps de carteira externos';
			case 'alwaysUseExternalDesc': return 'Use um aplicativo de carteira de raios externos em vez da carteira embutida de Yakihonne para todas as transações ZAP.';
			case 'unreachableExternalWallet': return 'Carteira externa inacessível';
			case 'secureStorageDesc': return 'Suas chaves são armazenadas com segurança no seu dispositivo e nunca compartilhadas conosco ou com qualquer outra pessoa.';
			case 'pubkeySharedDesc': return 'Seguro de compartilhar - isso identifica você no Nostr.';
			case 'privKeyDesc': return 'Mantenha -se privado - faça o backup com segurança para acessar sua conta em outro lugar.';
			case 'settingsKeysDesc': return 'Gerencie suas teclas NOSTR para identidade de rede, assinatura de eventos e pós -autenticação.';
			case 'settingsRelaysDesc': return 'Configure conexões de relé NOSTR para armazenar e distribuir eventos.';
			case 'settingsCustomizationDesc': return 'Personalize sua exibição de feed, gestos, pré -visualizações e preferências de Yakihonne para uma melhor experiência na nariz.';
			case 'settingsNotificationsDesc': return 'Notificações de controle para mensagens, menções, reações e outros eventos da nariz.';
			case 'settingsContentDesc': return 'Controle interações de conteúdo, configurações de privacidade, manuseio de mídia e preferências de mensagens no Nostr.';
			case 'settingsLanguageDesc': return 'Escolha o seu idioma preferido para a interface Yakihonne e a tradução de conteúdo.';
			case 'settingsWalletDesc': return 'Conecte e gerencie as carteiras Lightning Bitcoin para enviar/receber zaps com quantidades personalizáveis e integração externa.';
			case 'settingsAppearanceDesc': return 'Personalize a aparência visual de Yakihonne para corresponder às suas preferências e à visualização do conforto.';
			case 'settingsCacheDesc': return 'Gerencie o monitoramento do desempenho do aplicativo, o relatório de erros e a otimização de armazenamento para operação suave.';
			case 'addQuickRelayDesc': return 'Adicione rapidamente um novo revezamento entrando em seu URL.';
			case 'fewerRelays': return 'Menos relés estáveis = melhor desempenho e sincronização mais rápida.';
			case 'greenDotsDesc': return 'Os pontos verdes mostram conexões ativas.';
			case 'redDotsDesc': return 'Os pontos vermelhos mostram relés offline.';
			case 'greyDotsDesc': return 'Os pontos cinza mostram relés pendentes.';
			case 'homeFeedCustomDesc': return 'Escolha Responder o estilo de exibição (caixa ou tópico) e gerencie as preferências de sugestões para pessoas, conteúdo e interesses.';
			case 'NewPostDesc': return 'Escolha o que acontece quando você pressiona há muito tempo ao criar postagens (atualmente definidas para observar).';
			case 'profilePreviewDesc': return 'Mostre visualizações ao perfil de usuário ao tocar em nomes de usuário em seu feed.';
			case 'collapseNoteDesc': return 'Minimize automaticamente as postagens longas para manter seu feed limpo e legível.';
			case 'pushNotificationsDesc': return 'Obtenha alertas instantâneos no seu dispositivo. ';
			case 'privateMessagesDesc': return 'Seja alertado para novas mensagens diretas e conversas privadas.';
			case 'followingDesc': return 'Seja notificado quando as pessoas que você seguirem postagem de novo conteúdo.';
			case 'mentionsDesc': return 'Seja alertado quando alguém mencionar ou responder às suas postagens.';
			case 'repostsDesc': return 'Seja alertado quando alguém compartilha ou repasse seu conteúdo.';
			case 'reactionsDesc': return 'Seja notificado quando alguns curtidas ou reagirem às suas postagens.';
			case 'zapDesc': return 'Seja notificado ao receber dicas de bitcoin (zaps) em suas postagens.';
			case 'muteListDesc': return 'Veja e gerencie os usuários que você impediu de aparecer em seu feed.';
			case 'mediaUploaderDesc': return 'Escolha qual serviço carrega suas imagens e arquivos de mídia.';
			case 'autoSignDesc': return 'Assine automaticamente os eventos solicitados por mini aplicativos (widgets de ação/ferramenta) sem confirmação manual a cada vez.';
			case 'gossipDesc': return 'Gerenciamento sofisticado de relé que encontra automaticamente as postagens de seus seguidores em diferentes relés, minimizando conexões e se adaptando aos relés offline.';
			case 'useExternalBrowsDesc': return 'Abra os links no seu aplicativo de navegador padrão em vez do navegador embutido.';
			case 'secureDmDesc': return 'Use o mais recente padrão de mensagens privadas (NIP-17) com criptografia avançada. ';
			case 'wotConfigDesc': return 'Um mecanismo de confiança descentralizado usando atestados sociais para estabelecer reputação dentro do protocolo Nostr.';
			case 'appLangDesc': return 'Escolha o idioma para a interface, menus e botões de Yakihonne.';
			case 'contentTransDesc': return 'Selecione o serviço de tradução para postagens em idiomas estrangeiros.';
			case 'planDesc': return 'Seu nível atual de tradução e limites de uso.';
			case 'manageWalletsDesc': return 'Adicione e organize suas carteiras de raios para enviar e receber zaps de bitcoin no Nostr.';
			case 'defaultZapDesc': return 'Defina o valor padrão do Bitcoin (nos SATs) ao enviar zaps rápidos para as postagens.';
			case 'enableZapDesc': return 'Uma torneira envia o valor padrão instantaneamente. ';
			case 'externalWalletDesc': return 'Use um aplicativo de carteira de raios externos em vez da carteira embutida de Yakihonne para todas as transações ZAP.';
			case 'fontSizeDesc': return 'Ajuste o tamanho do texto em todo o aplicativo para melhor legibilidade - use o controle deslizante para aumentar o texto maior ou menor.';
			case 'appThemeDesc': return 'Alterne entre o modo claro e escuro para personalizar a aparência visual do aplicativo.';
			case 'crashlyticsDesc': return 'Relatórios de falhas anônimos e análise de aplicativos para ajudar a melhorar o desempenho e corrigir bugs. ';
			case 'showSuggDesc': return 'Exiba recomendações gerais de conteúdo em seu feed.';
			case 'showSuggPeople': return 'Mostre usuários recomendados a seguir com base em sua atividade.';
			case 'showSuggContent': return 'Exiba postagens e artigos recomendados em seu feed.';
			case 'showSuggInterests': return 'Mostre recomendações de tópico e interesse para descoberta.';
			case 'striveToMake': return 'Nós nos esforçamos para tirar o melhor proveito de Nostr, nos apoiar abaixo ou nos enviar seu valioso feed: Zap, DMS, Github.';
			case 'errorAmber': return 'Você rejeitou ou já está conectado ao Amber';
			case 'useOneRelay': return 'Você deve manter pelo menos um relay conectado';
			case 'automaticPurge': return 'Limpeza automática de cache';
			case 'automaticPurgeDesc': return 'Limpa automaticamente o cache do aplicativo quando ele atinge 2GB. Mantém o desempenho e evita o uso excessivo de armazenamento.';
			case 'customServices': return 'Serviços personalizados';
			case 'defaultServices': return 'Serviços padrão';
			case 'addService': return 'Adicionar serviço';
			case 'customServicesDesc': return 'Serviços personalizados disponíveis adicionados por você.';
			case 'urlRequired': return 'URL obrigatório';
			case 'serviceAdded': return 'O serviço foi adicionado';
			case 'showRawEvent': return 'Mostrar evento bruto';
			case 'rawEventData': return 'Dados brutos do evento';
			case 'copyRawEventData': return 'Dados brutos do evento copiados! 👏';
			case 'kind': return 'Tipo';
			case 'shortNote': return 'Nota curta';
			case 'postedOnDate': return 'Publicado em';
			case 'showMore': return '... mostrar mais';
			case 'accountDeleted': return 'Esta conta foi excluída e não pode mais ser acessada.';
			case 'ok': return 'OK';
			case 'redeem': return 'Resgatar';
			case 'redeemCode': return 'Resgatar código';
			case 'redeemAndEarn': return 'Resgatar e ganhar';
			case 'redeemingFailed': return 'Falha ao resgatar';
			case 'redeemInProgress': return 'Resgatando código...';
			case 'redeemCodeDesc': return 'Digite seu código para resgatar';
			case 'missingCode': return 'Código ausente';
			case 'missingPubkey': return 'Chave pública ausente';
			case 'invalidPubkey': return 'Chave pública inválida';
			case 'missingLightningAddress': return 'Endereço Lightning ausente';
			case 'codeNotFound': return 'Código não encontrado';
			case 'redeemCodeRequired': return 'Código de resgate obrigatório';
			case 'redeemCodeInvalid': return 'Código de resgate inválido';
			case 'codeBeingRedeemed': return 'Seu código está sendo resgatado. Se não for concluído, tente novamente em breve.';
			case 'redeemCodeSuccess': return 'Código resgatado com sucesso';
			case 'redeemFailed': return 'Não foi possível resgatar o código, tente novamente mais tarde.';
			case 'codeAlreadyRedeemed': return 'O código já foi resgatado';
			case 'satsEarned': return ({required Object amount}) => '+${amount} sats ganhos.';
			case 'selectReceivingWallet': return 'Selecionar carteira de recebimento';
			case 'redeemCodeMessage': return 'Resgate sats grátis com os códigos YakiHonne — basta inserir seu código e aumentar seu saldo instantaneamente.';
			case 'scanCode': return 'Escanear código';
			case 'enterCode': return 'Inserir código';
			case 'errorSharingMedia': return 'Erro ao compartilhar mídia';
			case 'open': return 'Abrir';
			case 'openUrl': return 'Abrir URL';
			case 'openUrlDesc': return ({required Object url}) => 'Deseja abrir "${url}"?';
			case 'openUrlPrompt': return 'Aviso de abertura de URL';
			case 'openUrlPromptDesc': return 'Um aviso de segurança exibindo a URL completa antes de abri-la no navegador.';
			case 'whatsNew': return 'Novidades';
			default: return null;
		}
	}
}

