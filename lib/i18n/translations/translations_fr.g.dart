///
/// Generated file. Do not edit.
///
// coverage:ignore-file
// ignore_for_file: type=lint, unused_import

import 'package:flutter/widgets.dart';
import 'package:intl/intl.dart';
import 'package:slang/generated.dart';
import 'translations.g.dart';

// Path: <root>
class TranslationsFr extends Translations {
	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	TranslationsFr({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver, TranslationMetadata<AppLocale, Translations>? meta})
		: assert(overrides == null, 'Set "translation_overrides: true" in order to enable this feature.'),
		  $meta = meta ?? TranslationMetadata(
		    locale: AppLocale.fr,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ),
		  super(cardinalResolver: cardinalResolver, ordinalResolver: ordinalResolver) {
		super.$meta.setFlatMapFunction($meta.getTranslation); // copy base translations to super.$meta
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <fr>.
	@override final TranslationMetadata<AppLocale, Translations> $meta;

	/// Access flat map
	@override dynamic operator[](String key) => $meta.getTranslation(key) ?? super.$meta.getTranslation(key);

	late final TranslationsFr _root = this; // ignore: unused_field

	@override 
	TranslationsFr $copyWith({TranslationMetadata<AppLocale, Translations>? meta}) => TranslationsFr(meta: meta ?? this.$meta);

	// Translations
	@override String get addNewBookmark => 'Aucune liste de favoris trouvée, essayez d\'en ajouter une !';
	@override String get setBookmarkTitleDescription => 'Définir un titre et une description pour votre liste de favoris.';
	@override String get title => 'titre';
	@override String get description => 'description';
	@override String get descriptionOptional => 'description (optionnelle)';
	@override String get bookmarkLists => 'Listes de favoris';
	@override String get submit => 'soumettre';
	@override String get addBookmarkList => 'Ajouter une liste de favoris';
	@override String get submitBookmarkList => 'Soumettre la liste de favoris';
	@override String get next => 'suivant';
	@override String get saveDraft => 'Sauvegarder le brouillon';
	@override String get deleteDraft => 'Supprimer le brouillon';
	@override String get publish => 'publier';
	@override String get smHaveOneWidget => 'Le widget intelligent devrait avoir au moins un composant.';
	@override String get smHaveTitle => 'Le widget intelligent devrait au moins avoir un titre';
	@override String get whatsOnYourMind => 'À quoi pensez-vous ?';
	@override String get sensitiveContent => 'Ceci est un contenu sensible';
	@override String get addYourTopics => 'Ajoutez vos sujets';
	@override String get article => 'article';
	@override String get articles => 'articles';
	@override String get video => 'vidéo';
	@override String get videos => 'vidéos';
	@override String get curation => 'curation';
	@override String get curations => 'curations';
	@override String get thumbnailPreview => 'Aperçu de la miniature';
	@override String get selectAndUploadLocaleImage => 'Sélectionner et télécharger une image locale';
	@override String get issueOccuredSelectingImage => 'Un problème est survenu lors de la sélection de l\'image.';
	@override String get imageUploadHistory => 'Historique des téléchargements d\'images';
	@override String get noImageHistory => 'Aucun historique d\'images trouvé';
	@override String get cancel => 'annuler';
	@override String get uploadAndUse => 'Télécharger et utiliser';
	@override String get publishRemoveDraft => 'Publier et supprimer le brouillon';
	@override String get clearChat => 'Effacer le chat';
	@override String get noDataFromGpt => 'Il y a des données à afficher depuis GPT.';
	@override String get askMeSomething => 'Demandez-moi quelque chose !';
	@override String get copy => 'copier';
	@override String get textSuccesfulyCopied => 'Texte copié avec succès !';
	@override String get insertText => 'Insérer le texte';
	@override String searchContentByTitle({required Object type}) => 'Rechercher ${type} par titre';
	@override String noContentCanBeFound({required Object type}) => 'Aucun ${type} trouvé';
	@override String noContentBelongToCuration({required Object type}) => 'Aucun ${type} n\'appartient à cette curation';
	@override String byPerson({required Object name}) => 'Par ${name}';
	@override String get allRelays => 'Tous les relais';
	@override String get myArticles => 'Mes articles';
	@override String get myVideos => 'Mes vidéos';
	@override String get curationType => 'Type de curation';
	@override String get update => 'mettre à jour';
	@override String get invalidInvoiceLnurl => 'Assurez-vous de définir une facture ou lnurl valide';
	@override String get addValidUrl => 'Assurez-vous d\'ajouter une url valide';
	@override String get layoutCustomization => 'Personnalisation de la mise en page';
	@override String get duoLayout => 'Mise en page double';
	@override String get monoLayout => 'Mise en page mono';
	@override String get warning => 'avertissement';
	@override String get switchToMonolayout => 'Vous passez à une mise en page mono tout en ayant des éléments des deux côtés, cela effacera le contenu du conteneur, souhaitez-vous continuer ?';
	@override String get erase => 'effacer';
	@override String get textCustomization => 'Personnalisation du texte';
	@override String get writeYourText => 'Écrivez votre texte';
	@override String get size => 'taille';
	@override String get weight => 'poids';
	@override String get color => 'couleur';
	@override String get videoCustomization => 'Personnalisation de la vidéo';
	@override String get videoUrl => 'Url de la vidéo';
	@override String get zapPollCustomization => 'Personnalisation du sondage zap';
	@override String get contentTextColor => 'Couleur du texte du contenu';
	@override String get optionTextColor => 'Couleur du texte de l\'option';
	@override String get optionBackgroundColor => 'Couleur de fond de l\'option';
	@override String get fillColor => 'Couleur de remplissage';
	@override String get imageCustomization => 'Personnalisation de l\'image';
	@override String get imageUrl => 'Url de l\'image';
	@override String get imageAspectRatio => 'Rapport d\'aspect de l\'image';
	@override String get buttonCustomization => 'Personnalisation du bouton';
	@override String get buttonText => 'Texte du bouton';
	@override String get type => 'type';
	@override String get useInvoice => 'Utiliser la facture';
	@override String get invoice => 'facture';
	@override String get lightningAddress => 'Adresse Lightning';
	@override String get selectUserToZap => 'Sélectionner un utilisateur à zapper (optionnel)';
	@override String get zapPollNevent => 'Nevent du sondage zap';
	@override String get textColor => 'Couleur du texte';
	@override String get buttonColor => 'Couleur du bouton';
	@override String get url => 'Url';
	@override String get invoiceOrLN => 'Facture ou adresse Lightning';
	@override String get youtubeUrl => 'Url Youtube';
	@override String get telegramUrl => 'Url Telegram';
	@override String get xUrl => 'Url X';
	@override String get discordUrl => 'Url Discord';
	@override String get nostrScheme => 'Schéma Nostr';
	@override String get containerCustomization => 'Personnalisation du conteneur';
	@override String get backgroundColor => 'Couleur de fond';
	@override String get borderColor => 'Couleur de la bordure';
	@override String get value => 'valeur';
	@override String get pickYourComponent => 'Choisissez votre composant';
	@override String get selectComponent => 'Sélectionnez le composant à votre convenance et modifiez-le.';
	@override String get text => 'texte';
	@override String get image => 'image';
	@override String get button => 'bouton';
	@override String get summaryOptional => 'Résumé (Optionnel)';
	@override String get smartWidgetsDrafts => 'Brouillons de widgets intelligents';
	@override String get noSmartWidget => 'Aucun brouillon de widgets intelligents trouvé';
	@override String get noSmartWidgetCanBeFound => 'Aucun widget intelligent trouvé';
	@override String get smartWidgetConvention => 'Ce widget intelligent ne suit pas la convention convenue.';
	@override String get monolayoutRequired => 'Mise en page mono requise';
	@override String get zapPoll => 'Sondage zap';
	@override String get layout => 'mise en page';
	@override String get container => 'conteneur';
	@override String get edit => 'modifier';
	@override String get moveUp => 'Déplacer vers le haut';
	@override String get moveDown => 'Déplacer vers le bas';
	@override String get delete => 'supprimer';
	@override String get editToAddZapPoll => 'Modifier pour ajouter un sondage zap';
	@override String get options => 'options';
	@override String get smartWidgetBuilder => 'Constructeur de widgets intelligents';
	@override String get startBuildingSmartWidget => 'Commencez à construire et personnaliser votre widget intelligent pour l\'utiliser sur le réseau Nostr';
	@override String get blankWidget => 'Widget vierge';
	@override String get myDrafts => 'Mes brouillons';
	@override String get templates => 'modèles';
	@override String get communityPolls => 'Sondages communautaires';
	@override String get myPolls => 'Mes sondages';
	@override String get noPollsCanBeFound => 'Aucun sondage trouvé';
	@override String totalNumber({required Object number}) => 'Total : ${number}';
	@override String get smartWidgetsTemplates => 'Modèles de widgets intelligents';
	@override String get noTemplatesCanBeFound => 'Aucun modèle trouvé dans cette catégorie.';
	@override String get useTemplate => 'Utiliser le modèle';
	@override String get pickYourVideo => 'Choisissez votre vidéo';
	@override String get canUploadPastLink => 'Vous pouvez télécharger, coller un lien ou choisir un nevent kind 1063 pour votre vidéo.';
	@override String get gallery => 'Galerie';
	@override String get link => 'Lien';
	@override String get fileSharing => 'Partage de fichiers';
	@override String get setUpYourLink => 'Configurez votre lien';
	@override String get setUpYourNevent => 'Configurez votre nevent';
	@override String get pasteYourLink => 'Collez votre lien et soumettez-le';
	@override String get pasteKind1063 => 'Collez votre nevent kind 1063 et soumettez-le';
	@override String get addUrlNevent => 'Ajouter une url/nevent appropriée';
	@override String get nevent => 'nevent';
	@override String get addProperUrlNevent => 'Ajouter une url/nevent appropriée';
	@override String get horizontalVideo => 'Vidéo horizontale';
	@override String get preview => 'Aperçu';
	@override String get writeSummary => 'Écrire un résumé';
	@override String get uploadImage => 'Télécharger une image';
	@override String get addToCuration => 'Ajouter à la curation';
	@override String get submitCuration => 'Soumettre la curation';
	@override String get selectValidUrlImage => 'Sélectionner une url d\'image valide.';
	@override String get noCurationsFound => 'Aucune curation trouvée. Essayez d\'en créer une pour pouvoir y ajouter du contenu.';
	@override String availableArticles({required Object number}) => '${number} article(s) disponible(s)';
	@override String availableVideos({required Object number}) => '${number} vidéo(s) disponible(s)';
	@override String articlesNum({required Object number}) => '${number} article(s)';
	@override String videosNum({required Object number}) => '${number} vidéo(s)';
	@override String get articlesAvailableCuration => 'Articles disponibles dans cette curation';
	@override String get videosAvailableCuration => 'Vidéos disponibles dans cette curation';
	@override String get articleAddedCuration => 'L\'article a été ajouté à votre curation.';
	@override String get videoAddedCuration => 'La vidéo a été ajoutée à votre curation.';
	@override String get validTitleCuration => 'Assurez-vous d\'ajouter un titre valide pour cette curation';
	@override String get validDescriptionCuration => 'Assurez-vous d\'ajouter une description valide pour cette curation';
	@override String get validImageCuration => 'Assurez-vous d\'ajouter une image valide pour cette curation';
	@override String get addCuration => 'Ajouter une curation';
	@override String get postedBy => 'Publié par';
	@override String get follow => 'suivre';
	@override String get unfollow => 'ne plus suivre';
	@override String get postedFrom => 'publié depuis';
	@override String get noTitle => 'Aucun titre';
	@override String itemsNumber({required Object number}) => '${number} élément(s)';
	@override String get noArticlesInCuration => 'Aucun article dans cette curation trouvé';
	@override String get noVideosInCuration => 'Aucune vidéo dans cette curation trouvée';
	@override String get add => 'ajouter';
	@override String get noBookmarksListFound => 'Aucune liste de favoris trouvée, essayez d\'en ajouter une !';
	@override String get deleteBookmarkList => 'Supprimer la liste de favoris';
	@override String get confirmDeleteBookmarkList => 'Vous êtes sur le point de supprimer cette liste de favoris, souhaitez-vous continuer ?';
	@override String get bookmarks => 'Favoris';
	@override String bookmarksListCount({required Object number}) => '${number} listes de favoris';
	@override String get noDescription => 'Aucune description';
	@override String editedOn({required Object date}) => 'Modifié le : ${date}';
	@override String publishedOn({required Object date}) => 'Publié le : ${date}';
	@override String get publishedOnText => 'Publié le';
	@override String lastUpdatedOn({required Object date}) => 'Dernière mise à jour le : ${date}';
	@override String joinedOn({required Object date}) => 'Rejoint le : ${date}';
	@override String get list => 'liste';
	@override String get noElementsInBookmarks => 'Aucun élément trouvé dans la liste des favoris';
	@override String get draft => 'brouillon';
	@override String get note => 'note';
	@override String get notes => 'notes';
	@override String get smartWidget => 'Widget intelligent';
	@override String get widgets => 'widgets';
	@override String get postNote => 'Publier une note';
	@override String get postArticle => 'Publier un article';
	@override String get postCuration => 'Publier une curation';
	@override String get postVideo => 'Publier une vidéo';
	@override String get postSmartWidget => 'Publier un widget intelligent';
	@override String get ongoing => 'en cours';
	@override String componentsSMCount({required Object number}) => '${number} composants dans ce widget';
	@override String get share => 'partager';
	@override String get copyNoteId => 'Copier l\'id de la note';
	@override String get noteIdCopied => 'L\'id de la note a été copié ! 👏';
	@override String get confirmDeleteDraft => 'Vous êtes sur le point de supprimer ce brouillon, souhaitez-vous continuer ?';
	@override String get reposted => 'repartagé';
	@override String get postInNote => 'Publier en note';
	@override String get clone => 'cloner';
	@override String get checkValidity => 'Vérifier la validité';
	@override String get copyNaddr => 'copier naddr';
	@override String deleteContent({required Object type}) => 'Supprimer ${type}';
	@override String confirmDeleteContent({required Object type}) => 'Vous êtes sur le point de supprimer ce ${type}, souhaitez-vous continuer ?';
	@override String get home => 'Accueil';
	@override String get followings => 'Abonnements';
	@override String get followers => 'Abonnés';
	@override String get replies => 'réponses';
	@override String get zapReceived => 'Zaps reçus';
	@override String get totalAmount => 'Montant total';
	@override String get zapSent => 'Zaps envoyés';
	@override String get latest => 'dernier';
	@override String get saved => 'sauvegardé';
	@override String get seeAll => 'Voir tout';
	@override String get popularNotes => 'Notes populaires';
	@override String get getStartedNow => 'Commencer maintenant';
	@override String get expandWorld => 'Élargissez le monde en ajoutant ce qui vous fascine. Sélectionnez vos intérêts et laissez le voyage commencer';
	@override String get addInterests => 'Ajouter des intérêts';
	@override String get manageInterests => 'Gérer les intérêts';
	@override String get interests => 'intérêts';
	@override String get yakihonneImprovements => 'Améliorations de YakiHonne';
	@override String get yakihonneNote => 'Note de YakiHonne';
	@override String get privacyNote => 'Notre application garantit la plus grande confidentialité en stockant de manière sécurisée les données sensibles localement sur les appareils des utilisateurs, en utilisant un chiffrement strict. Soyez assuré, nous respectons une politique de non-partage stricte, garantissant que les informations sensibles restent confidentielles et ne quittent jamais l\'appareil de l\'utilisateur.';
	@override String get pickYourMedia => 'Choisissez vos médias';
	@override String get uploadSendMedia => 'Vous pouvez télécharger et envoyer des médias directement après votre sélection ou leur prise.';
	@override String get noMessagesToDisplay => 'Aucun message à afficher.';
	@override String get enableSecureDmsMessage => 'Pour plus de sécurité et de confidentialité, considérez l\'activation des DM sécurisés.';
	@override String replyingTo({required Object name}) => 'En réponse à : ${name}';
	@override String get writeYourMessage => 'Écrire un message';
	@override String get zap => 'zap';
	@override String get disableSecureDms => 'Désactiver les DM sécurisés';
	@override String get enableSecureDms => 'Activer les DM sécurisés';
	@override String get notUsingSecureDms => 'Vous n\'utilisez plus les DM sécurisés';
	@override String get usingSecureDms => 'Vous utilisez maintenant les DM sécurisés';
	@override String get mute => 'muet';
	@override String get unmute => 'réactiver le son';
	@override String get muteUser => 'Mettre l\'utilisateur en sourdine';
	@override String get unmuteUser => 'Réactiver l\'utilisateur';
	@override String muteUserDesc({required Object name}) => 'Vous êtes sur le point de mettre ${name} en sourdine, souhaitez-vous continuer ?';
	@override String unmuteUserDesc({required Object name}) => 'Vous êtes sur le point de réactiver ${name}, souhaitez-vous continuer ?';
	@override String get messageCopied => 'Message copié avec succès !';
	@override String get messageNotDecrypted => 'Le message n\'a pas encore été déchiffré !';
	@override String get reply => 'répondre';
	@override String get newMessage => 'Nouveau message';
	@override String get searchNameNpub => 'Rechercher par nom, npub, nprofile';
	@override String get searchByUserName => 'Rechercher par nom d\'utilisateur';
	@override String get known => 'Connu';
	@override String get unknown => 'Inconnu';
	@override String get noMessageCanBeFound => 'Aucun message trouvé';
	@override String get you => 'Vous : ';
	@override String get decrMessage => 'Déchiffrement du message';
	@override String get gifs => 'gifs';
	@override String get stickers => 'autocollants';
	@override String get customizeYourFeed => 'Personnalisez votre flux';
	@override String get feedOptions => 'Options de flux';
	@override String get recent => 'récent';
	@override String get recentWithReplies => 'Récent avec réponses';
	@override String get explore => 'explorer';
	@override String get following => 'abonnements';
	@override String get trending => 'tendances';
	@override String get highlights => 'points forts';
	@override String get paid => 'payé';
	@override String get others => 'autres';
	@override String get suggestionsBox => 'Boîte de suggestions';
	@override String get showSuggestions => 'Afficher les suggestions';
	@override String get showSuggestedPeople => 'Afficher les personnes suggérées à suivre';
	@override String get showArticlesNotesSuggestions => 'Afficher les suggestions d\'articles/notes';
	@override String get showSuggestedInterests => 'Afficher les intérêts suggérés';
	@override String readTime({required Object time}) => '${time}min de lecture';
	@override String get watchNow => 'regarder maintenant';
	@override String get bookmark => 'favori';
	@override String get suggestions => 'Suggestions';
	@override String get hideSuggestions => 'Masquer les suggestions';
	@override String get enjoyExpOwnData => 'Profitez de l\'expérience de posséder\nvos propres données !';
	@override String get signIn => 'Se connecter';
	@override String get createAccount => 'Créer un compte';
	@override String get byContinuing => 'En continuant, vous acceptez notre\n';
	@override String get eula => 'Contrat de licence utilisateur final (CLUF)';
	@override String get continueAsGuest => 'Continuer en tant qu\'invité';
	@override String get heyWelcomeBack => 'Salut,\nBon\nRetour';
	@override String get npubNsecHex => 'npub, nsec ou hex';
	@override String get useAmber => 'Utiliser Amber';
	@override String get setValidKey => 'Définir une clé valide';
	@override String get pasteYourKey => 'Collez votre clé';
	@override String get taylorExperienceInterests => 'Adaptez votre expérience en sélectionnant vos principaux intérêts';
	@override String peopleCountPlus({required Object number}) => '+${number} personnes';
	@override String get followAll => 'Suivre tout';
	@override String get unfollowAll => 'Ne plus suivre tout';
	@override String get details => 'détails';
	@override String get shareGlimps => 'Partagez un aperçu de vous, avec des mots qui sonnent vrai.';
	@override String get addCover => 'Ajouter une couverture';
	@override String get editCover => 'Modifier la couverture';
	@override String get yourName => 'Votre nom';
	@override String get setProperName => 'Définir un nom approprié';
	@override String get aboutYou => 'À propos de vous';
	@override String get secKeyDesc => 'Vous pouvez trouver la clé secrète de votre compte dans vos paramètres. Cette clé est essentielle pour sécuriser l\'accès à votre compte. Veuillez la garder en sécurité et privée.';
	@override String get secKeyWalletDesc => 'Vous pouvez trouver la clé secrète de votre compte et le secret de connexion du portefeuille dans vos paramètres. Ces clés sont essentielles pour sécuriser l\'accès à votre compte et à votre portefeuille. Veuillez les garder en sécurité et privées.';
	@override String get initializingAccount => 'Initialisation du compte...';
	@override String get letsGetStarted => 'Commençons !';
	@override String get dontHaveWallet => 'Vous n\'avez pas de portefeuille ?';
	@override String get createWalletSendRecSats => 'Créer un portefeuille pour envoyer et recevoir des sats';
	@override String get createWallet => 'Créer un portefeuille';
	@override String get youreAllSet => 'Vous êtes prêt';
	@override String get dashboard => 'tableau de bord';
	@override String get verifyNotes => 'Vérifier les notes';
	@override String get settings => 'paramètres';
	@override String get manageAccounts => 'Gérer les comptes';
	@override String get login => 'Connexion';
	@override String get switchAccounts => 'Changer de compte';
	@override String get addAccount => 'Ajouter un compte';
	@override String get logoutAllAccounts => 'Déconnecter tous les comptes';
	@override String get search => 'rechercher';
	@override String get smartWidgets => 'Widgets intelligents';
	@override String get notifications => 'notifications';
	@override String get inbox => 'boîte de réception';
	@override String get discover => 'découvrir';
	@override String get wallet => 'portefeuille';
	@override String get publicKey => 'Clé publique';
	@override String get profileLink => 'Lien du profil';
	@override String get profileCopied => 'Le lien du profil a été copié ! 👏';
	@override String get publicKeyCopied => 'La clé publique a été copiée ! 👏';
	@override String get lnCopied => 'L\'adresse lightning a été copiée ! 👏';
	@override String get scanQrCode => 'Scanner le code QR';
	@override String get viewQrCode => 'Voir le code QR';
	@override String get copyNpub => 'Copier npub';
	@override String get visitProfile => 'Visiter le profil';
	@override String get followMeOnNostr => 'Suivez-moi sur Nostr';
	@override String get close => 'fermer';
	@override String get loadingPreviousPosts => 'Chargement des publications précédentes...';
	@override String get noRepliesDesc => 'Aucune réponse à cette note trouvée';
	@override String get thread => 'fil';
	@override String get all => 'tout';
	@override String get mentions => 'mentions';
	@override String get zaps => 'zaps';
	@override String get noNotificationCanBeFound => 'Aucune notification trouvée';
	@override String get consumablePointsPerks1 => '1- Soumettre votre contenu pour attestation';
	@override String get consumablePointsPerks2 => '2- Échanger des points pour publier des notes payantes';
	@override String get consumablePointsPerks3 => '3- Échanger des points contre des SATs (Des seuils aléatoires sont sélectionnés et vous serez notifié chaque fois que l\'échange est disponible)';
	@override String get yakihonneConsPoints => 'Points consommables de YakiHonne';
	@override String get soonUsers => 'Bientôt, les utilisateurs pourront utiliser les points consommables dans l\'ensemble d\'activités suivant :';
	@override String get startEarningPoints => 'Commencez à gagner et tirez le meilleur parti de vos Yaki Points ! 🎉';
	@override String get gotIt => 'Compris !';
	@override String get engagementChart => 'Graphique d\'engagement';
	@override String lastGained({required Object date}) => 'Dernier gain : ${date}';
	@override String get attemptsRemained => 'Tentatives restantes ';
	@override String get congratulations => 'Félicitations';
	@override String congratsDesc({required Object number}) => 'Vous avez été récompensé de ${number} xp pour les actions suivantes, soyez actif et gagnez des récompenses !';
	@override String get yakihonneChest => 'Coffre de YakiHonne !';
	@override String get noImGood => 'Non, ça va';
	@override String get points => 'Points';
	@override String get unlocked => 'Débloqué';
	@override String get locked => 'Verrouillé';
	@override String get whatsThis => 'Qu\'est-ce que c\'est ?';
	@override String levelNumber({required Object number}) => 'Niveau ${number}';
	@override String get pointsSystem => 'Système de points';
	@override String get oneTimeRewards => 'Récompenses uniques';
	@override String get repeatedRewards => 'Récompenses répétées';
	@override String get consumablePoints => 'Points consommables';
	@override String pointsRemaining({required Object number}) => '${number} restants';
	@override String get gain => 'Gagner';
	@override String forName({required Object name}) => 'pour ${name}';
	@override String get min => 'min';
	@override String levelsRequiredNum({required Object number}) => '${number} niveaux requis';
	@override String get seeMore => 'Voir plus';
	@override String get deleteCoverPic => 'Supprimer l\'image de couverture !';
	@override String get deleteCoverPicDesc => 'Vous êtes sur le point de supprimer votre image de couverture, souhaitez-vous continuer ?';
	@override String get editProfile => 'Modifier le profil';
	@override String get uploadingImage => 'Téléchargement de l\'image...';
	@override String get updateProfile => 'Mettre à jour le profil';
	@override String get userName => 'Nom d\'utilisateur';
	@override String get displayName => 'Nom d\'affichage';
	@override String get yourDisplayName => 'Votre nom d\'affichage';
	@override String get writeSomethingAboutYou => 'Écrivez quelque chose sur vous !';
	@override String get website => 'Site web';
	@override String get yourWebsite => 'Votre site web';
	@override String get verifyNip05 => 'Adresse Nostr vérifiée (NIP 05)';
	@override String get enterNip05 => 'Entrez votre adresse NIP-05';
	@override String get enterLn => 'Entrez votre adresse LUD-06 ou LUD-16';
	@override String get less => 'Moins';
	@override String get more => 'Plus';
	@override String get pictureUrl => 'Url de l\'image';
	@override String get coverUrl => 'Url de couverture';
	@override String get enterPictureUrl => 'Entrez l\'url de votre image';
	@override String get enterCoverUrl => 'Entrez l\'url de votre couverture';
	@override String userNoArticles({required Object name}) => '${name} n\'a pas d\'articles';
	@override String userNoCurations({required Object name}) => '${name} n\'a pas de curations';
	@override String userNoNotes({required Object name}) => '${name} n\'a pas de notes';
	@override String userNoVideos({required Object name}) => '${name} n\'a pas de vidéos';
	@override String get loadingFollowings => 'Chargement des abonnements';
	@override String get loadingFollowers => 'chargement des abonnés';
	@override String followersNum({required Object number}) => '${number} abonnés';
	@override String get notFollowedByAnyoneYouFollow => 'Pas suivi par quelqu\'un que vous suivez.';
	@override String get mutuals => 'commun(s)';
	@override String mutualsNum({required Object number}) => '+ ${number} commun(s)';
	@override String get followsYou => 'Vous suit';
	@override String get userNameCopied => 'Le nom d\'utilisateur a été copié avec succès !';
	@override String profileRelays({required Object number}) => 'Relais recommandés du profil - ${number}';
	@override String get noUserRelays => 'Aucun relais pour cet utilisateur trouvé.';
	@override String userNoSmartWidgets({required Object name}) => '${name} n\'a pas de widgets intelligents';
	@override String get un1 => 'Évaluations de Pas utile sur des notes qui ont fini avec un statut d\'Utile';
	@override String get un1Desc => 'Ces évaluations sont comptées deux fois car elles indiquent souvent un soutien pour des notes que d\'autres ont jugées utiles.';
	@override String get un2 => 'Notes avec évaluations en cours';
	@override String get un2Desc => 'Évaluations sur des notes qui n\'ont actuellement pas un statut d\'Utile ou Pas utile';
	@override String get unTextW1 => 'Notes qui ont obtenu le statut d\'Utile';
	@override String get unTextW1Desc => 'Ces notes sont maintenant affichées à tous ceux qui voient la publication, ajoutant du contexte et aidant à garder les gens informés.';
	@override String get unTextR1 => 'Évaluations qui ont aidé une note à obtenir le statut d\'Utile';
	@override String get unTextR1Desc => 'Ces évaluations ont identifié des notes utiles qui sont montrées à tous, ajoutant du contexte et aidant à garder les gens informés.';
	@override String get unTextW2 => 'Notes qui ont atteint le statut de Pas utile';
	@override String get unTextW2Desc => 'Ces notes ont été évaluées comme Pas utiles par suffisamment de contributeurs, y compris ceux qui ne sont parfois pas d\'accord dans leurs évaluations passées.';
	@override String get unTextR2 => 'Évaluations qui ont aidé une note à obtenir le statut de Pas utile';
	@override String get unTextR2Desc => 'Ces évaluations améliorent les Notes vérifiées en donnant des retours aux auteurs de notes, et permettent aux contributeurs de se concentrer sur les notes les plus prometteuses';
	@override String get unTextW3 => 'Notes qui ont besoin de plus d\'évaluations';
	@override String get unTextW3Desc => 'Notes qui n\'ont pas encore un statut d\'Utile ou Pas utile.';
	@override String get unTextR3 => 'Évaluations de Pas utile sur des notes qui ont fini avec un statut d\'Utile';
	@override String get unTextR3Desc => 'Ne vous inquiétez pas, tout le monde en a ! Ces évaluations sont courantes et peuvent conduire à des changements de statut si suffisamment de personnes sont d\'accord qu\'une note \'Utile\' n\'est pas suffisamment utile.';
	@override String get refresh => 'actualiser';
	@override String get userImpact => 'Impact de l\'utilisateur';
	@override String get userRelays => 'Relais de l\'utilisateur';
	@override String get rewards => 'récompenses';
	@override String get noRewards => 'Vous n\'avez pas de récompenses, interagissez avec ou écrivez des notes vérifiées pour en obtenir.';
	@override String onDate({required Object date}) => 'Le ${date}';
	@override String get youHaveRated => 'Vous avez évalué';
	@override String get theFollowingNote => 'la note suivante :';
	@override String get youHaveLeftNote => 'Vous avez laissé une note sur cette note payante :';
	@override String get paidNoteLoading => 'Chargement de la note payante';
	@override String get yourNoteSealed => 'Votre note suivante vient d\'être scellée :';
	@override String get ratedNoteSealed => 'Vous avez évalué la note suivante qui a été scellée :';
	@override String claimTime({required Object time}) => 'Réclamer dans ${time}';
	@override String get claim => 'Réclamer';
	@override String get requestInProgress => 'Demande en cours';
	@override String get granted => 'Accordé';
	@override String get interested => 'Intéressé';
	@override String get notInterested => 'Pas intéressé';
	@override String get noResKeyword => 'Aucun résultat pour ce mot-clé';
	@override String get noResKeywordDesc => 'Aucun résultat trouvé avec ce mot-clé, essayez d\'utiliser d\'autres mots-clés pour obtenir de meilleurs résultats.';
	@override String get startSearchPeople => 'Commencer à rechercher des personnes';
	@override String get startSearchContent => 'Commencer à rechercher du contenu';
	@override String get keys => 'Clés';
	@override String get myPublicKey => 'Ma clé publique';
	@override String get mySecretKey => 'Ma clé secrète';
	@override String get show => 'afficher';
	@override String get showSecret => 'Afficher la clé secrète !';
	@override String get showSecretDesc => 'Assurez-vous de la garder en sécurité car elle donne un accès complet à votre compte.';
	@override String get usingExternalSign => 'Utilisation d\'un signataire externe';
	@override String get usingExternalSignDesc => 'Vous utilisez un signataire externe';
	@override String get privKeyCopied => 'La clé privée a été copiée ! 👏';
	@override String get muteList => 'Liste de sourdine';
	@override String get noMutedUserFound => 'Aucun utilisateur en sourdine trouvé.';
	@override String get searchRelay => 'Rechercher un relais';
	@override String get deleteAccount => 'Supprimer le compte';
	@override String get clearAppCache => 'Vider le cache de l\'application';
	@override String get clearAppCacheDesc => 'Vous êtes sur le point de vider le cache de l\'application, souhaitez-vous continuer ?';
	@override String get clear => 'vider';
	@override String get fontSize => 'Taille de police';
	@override String get appTheme => 'Thème de l\'application';
	@override String get contentModeration => 'Modération du contenu';
	@override String get mediaUploader => 'Téléchargeur de médias';
	@override String get secureDirectMessaging => 'Messages directs sécurisés';
	@override String get customization => 'Personnalisation';
	@override String get hfCustomization => 'Personnalisation du flux d\'accueil';
	@override String get newPostGesture => 'Geste d\'appui long pour nouveau post';
	@override String get profilePreview => 'Aperçu du profil';
	@override String relaySettings({required Object number}) => 'Paramètres de relais ${number}';
	@override String get yakihonne => 'YakiHonne';
	@override String get wallets => 'portefeuilles';
	@override String get addWallet => 'Ajouter un portefeuille';
	@override String get externalWallet => 'Portefeuille externe';
	@override String get yakiChest => 'Coffre Yaki';
	@override String get connected => 'Connecté';
	@override String get connect => 'Connecter';
	@override String get owner => 'Propriétaire';
	@override String get contact => 'Contact';
	@override String get software => 'Logiciel';
	@override String get version => 'Version';
	@override String get supportedNips => 'Nips supportés';
	@override String get instantConntect => 'Connexion instantanée au relais';
	@override String get invalidRelayUrl => 'Url de relais invalide';
	@override String get relays => 'Relais';
	@override String get readOnly => 'Lecture seule';
	@override String get writeOnly => 'Écriture seule';
	@override String get readWrite => 'Lecture/Écriture';
	@override String get defaultKey => 'Par défaut';
	@override String get viewProfile => 'Voir le profil';
	@override String get appearance => 'Apparence';
	@override String get untitled => 'Sans titre';
	@override String get smartWidgetChecker => 'Vérificateur de widget intelligent';
	@override String get naddr => 'naddr';
	@override String get noComponentsDisplayed => 'Aucun composant ne peut être affiché';
	@override String get metadata => 'métadonnées';
	@override String get createdAt => 'Créé à';
	@override String get identifier => 'Identifiant';
	@override String get enterSMaddr => 'Entrez un naddr de widget intelligent pour vérifier sa validité.';
	@override String get notFindSMwithAddr => 'Impossible de trouver un widget intelligent avec cette adresse';
	@override String get unableToOpenUrl => 'Impossible d\'ouvrir l\'url';
	@override String get voteToSeeStats => 'Vous devez voter pour pouvoir voir les statistiques';
	@override String get votesByZaps => 'Votes par zaps';
	@override String get votesByUsers => 'Votes par utilisateurs';
	@override String get alreadyVoted => 'Vous avez déjà voté sur ce sondage';
	@override String get userCannotBeFound => 'L\'utilisateur ne peut pas être trouvé';
	@override String votesNumber({required Object number}) => 'Votes : ${number}';
	@override String get voteRequired => 'Le vote est requis pour afficher les statistiques.';
	@override String get showStats => 'Afficher les statistiques';
	@override String pollClosesAt({required Object date}) => 'Ferme à : ${date}';
	@override String pollClosedAt({required Object date}) => 'Fermé à : ${date}';
	@override String get checkSmartWidget => 'Vérifier un widget intelligent';
	@override String get emptyVerifiedNote => 'Contenu de note vérifiée vide !';
	@override String get post => 'Publier';
	@override String get seeAnything => 'Voyez-vous quelque chose que vous souhaitez améliorer ?';
	@override String get writeNote => 'Écrire une note';
	@override String get whatThinkThis => 'Que pensez-vous de ceci ?';
	@override String get sourceRecommended => 'Source (recommandée)';
	@override String get findPaidNoteCorrect => 'Vous trouvez cette note payante correcte.';
	@override String get findPaidNoteMisleading => 'Vous trouvez cette note payante trompeuse.';
	@override String get selectOneReason => 'Sélectionnez au moins une raison';
	@override String get rateHelpful => 'Évaluer comme utile';
	@override String get rateNotHelpful => 'Évaluer comme pas utile';
	@override String get ratedHelpful => 'Évalué comme utile';
	@override String get ratedNotHelpful => 'Évalué comme pas utile';
	@override String get youRatedHelpful => 'vous avez évalué ceci comme utile';
	@override String get youRatedNotHelpful => 'vous avez évalué ceci comme pas utile';
	@override String get findThisHelpful => 'Trouvez-vous ceci utile ?';
	@override String get findThisNotHelpful => 'Trouvez-vous ceci pas utile ?';
	@override String get setYourRating => 'Définir votre évaluation';
	@override String get whatThinkOfThat => 'Que pensez-vous de cela ?';
	@override String get changeRatingNote => 'Note : changer votre évaluation ne sera valide que pendant 5 minutes, après cela vous n\'aurez plus l\'option d\'annuler ou de la changer.';
	@override String get paidNote => 'Note payante';
	@override String get undo => 'Annuler';
	@override String get undoRating => 'Annuler l\'évaluation';
	@override String get undoRatingDesc => 'Vous êtes sur le point d\'annuler votre évaluation, souhaitez-vous continuer ?';
	@override String get seeAllAttempts => 'Voir toutes les tentatives';
	@override String get addNote => 'Ajouter une note';
	@override String get alreadyContributed => 'Vous avez déjà contribué';
	@override String get notesFromCommunity => 'Notes de la communauté';
	@override String get noCommunityNotes => 'C\'est silencieux ici ! Pas encore de notes de la communauté.';
	@override String get notHelpful => 'Pas utile';
	@override String get sealed => 'Scellé';
	@override String get notSealed => 'Pas scellé';
	@override String get notSealedYet => 'Pas encore scellé';
	@override String get needsMoreRating => 'Besoin de plus d\'évaluations';
	@override String get source => 'Source';
	@override String get thisNoteAwaitRating => 'cette note attend l\'évaluation de la communauté.';
	@override String get yourNoteAwaitRating => 'cette note attend l\'évaluation de la communauté.';
	@override String get topReasonsSelected => 'Principales raisons sélectionnées par les évaluateurs :';
	@override String get noReasonsSpecified => 'Aucune raison spécifiée !';
	@override String postedOn({required Object date}) => 'Publié le ${date}';
	@override String get explanation => 'Explication';
	@override String get readAboutVerifyingNotes => 'Lire à propos de la vérification des notes';
	@override String get readAboutVerifyingNotesDesc => 'Nous avons fait un article pour vous aider à comprendre notre objectif';
	@override String get readArticle => 'Lire l\'article';
	@override String get whyVerifyingNotes => 'Pourquoi vérifier les notes ?';
	@override String get contributeUnderstanding => 'Contribuer à construire la compréhension';
	@override String get actGoodFaith => 'Agir de bonne foi';
	@override String get beHelpful => 'Être utile, même à ceux qui ne sont pas d\'accord';
	@override String get readMore => 'Lire plus';
	@override String get newKey => 'Nouveau';
	@override String get needsYourHelp => 'A besoin de votre aide';
	@override String get communityWallet => 'Portefeuille communautaire';
	@override String get noPaidNotesCanBeFound => 'Aucune note payante trouvée.';
	@override String get updatesNews => 'Actualités des mises à jour';
	@override String get updates => 'Mises à jour';
	@override String get toBeAbleSendSats => 'Pour pouvoir envoyer des zaps, veuillez vous assurer de connecter votre portefeuille bitcoin lightning.';
	@override String get receiveSats => 'Recevoir des sats';
	@override String get messageOptional => 'Message (optionnel)';
	@override String get amountInSats => 'Montant en sats';
	@override String get invoiceCopied => 'Code de facture copié !';
	@override String get copyInvoice => 'Copier la facture';
	@override String get ensureLnSet => 'Assurez-vous que votre adresse lightning est bien configurée';
	@override String get errorGeneratingInvoice => 'Erreur survenue lors de la génération de la facture';
	@override String get generateInvoice => 'Générer une facture';
	@override String get qrCode => 'Code QR';
	@override String get scanPay => 'Scanner et payer';
	@override String get slideToPay => 'Glisser pour payer';
	@override String get invalidInvoice => 'Facture invalide';
	@override String get invalidInvoiceDesc => 'Il semble que la facture scannée soit invalide, re-scannez et réessayez.';
	@override String get scanAgain => 'Scanner à nouveau';
	@override String get sendSats => 'Envoyer des sats';
	@override String get send => 'Envoyer';
	@override String get recentTransactions => 'Transactions récentes';
	@override String get noTransactionCanBeFound => 'Aucune transaction trouvée';
	@override String get selectWalletTransactions => 'Sélectionnez un portefeuille pour obtenir les dernières transactions.';
	@override String get noUserCanBeFound => 'Aucun utilisateur trouvé.';
	@override String get balance => 'Solde';
	@override String get noLnInNwc => 'Nous n\'avons pas pu récupérer votre adresse depuis votre secret NWC, veuillez vérifier votre fournisseur de service d\'adresse lightning pour copier votre adresse ou pour mettre à jour votre profil en conséquence.';
	@override String get copyLn => 'Copier l\'adresse lightning';
	@override String get receive => 'Recevoir';
	@override String get clickBelowToConnect => 'Cliquez ci-dessous pour vous connecter';
	@override String get connectWithNwc => 'Se connecter avec NWC';
	@override String get pasteNwcAddress => 'Coller l\'adresse NWC';
	@override String get createYakiWallet => 'Créer le portefeuille de YakiHonne';
	@override String get yakiNwc => 'NWC de YakiHonne';
	@override String get yakiNwcDesc => 'Créer un portefeuille en utilisant le canal de YakiHonne';
	@override String get orUseYourWallet => 'Ou utilisez votre portefeuille';
	@override String get nostrWalletConnect => 'Connexion portefeuille nostr';
	@override String get nostrWalletConnectDesc => 'Connexion portefeuille nostr native';
	@override String get alby => 'Alby';
	@override String get albyConnect => 'Connexion Alby';
	@override String get walletDataNote => 'Note : Toutes les données liées à votre portefeuille seront stockées de manière sûre et sécurisée localement et ne sont jamais partagées en dehors des limites de l\'application.';
	@override String get availableWallets => 'Portefeuilles disponibles';
	@override String get noWalletLinkedToYouProfile => 'Vous n\'avez aucun portefeuille lié à votre profil.';
	@override String get noWalletConnectedToYourProfile => 'Aucun des portefeuilles connectés n\'est lié à votre profil.';
	@override String get click => 'Cliquez';
	@override String get onSelectedWalletLinkIt => 'sur votre portefeuille sélectionné et liez-le.';
	@override String get noWalletCanBeFound => 'Aucun portefeuille trouvé';
	@override String get currentlyLinkedMessage => 'Actuellement lié à votre profil pour recevoir des zaps';
	@override String get linked => 'Lié';
	@override String get linkWallet => 'Lier le portefeuille';
	@override String get linkWalletDesc => 'Vous êtes sur le point de remplacer votre portefeuille précédent et d\'en lier un nouveau à votre profil, souhaitez-vous continuer ?';
	@override String get copyNwc => 'Copier NWC';
	@override String get nwcCopied => 'NWC a été copié avec succès !';
	@override String get deleteWallet => 'Supprimer le portefeuille';
	@override String get deleteWalletDesc => 'Vous êtes sur le point de supprimer ce portefeuille, souhaitez-vous continuer ?';
	@override String userSentSat({required Object name, required Object number}) => '${name} vous a envoyé ${number} Sats';
	@override String userReceivedSat({required Object name, required Object number}) => '${name} a reçu de vous ${number} Sats';
	@override String ownSentSat({required Object number}) => 'Vous avez envoyé ${number} Sats';
	@override String ownReceivedSat({required Object number}) => 'Vous avez reçu ${number} Sats';
	@override String get comment => 'Commentaire';
	@override String get supportYakihonne => 'Soutenir YakiHonne';
	@override String get fuelYakihonne => 'Alimentez la croissance de YakiHonne ! Votre soutien stimule de nouvelles fonctionnalités et une meilleure expérience pour tous.';
	@override String get supportUs => '❤︎ Soutenez-nous';
	@override String get peopleToFollow => 'Personnes à suivre';
	@override String get donations => 'Dons';
	@override String inTag({required Object name}) => 'Dans ${name}';
	@override String get shareProfile => 'Partager le profil';
	@override String get shareProfileDesc => 'Partagez votre profil pour atteindre plus de personnes, vous connecter avec d\'autres, et développer votre réseau';
	@override String get moreDots => 'plus...';
	@override String get comments => 'Commentaires';
	@override String get noCommentsCanBeFound => 'Aucun commentaire trouvé';
	@override String get beFirstCommentThisVideo => 'Soyez le premier à commenter cette vidéo !';
	@override String get errorLoadingVideo => 'Erreur lors du chargement de la vidéo';
	@override String get seeAlso => 'Voir aussi';
	@override String viewsNumber({required Object number}) => '${number} vue';
	@override String get upvotes => 'Votes positifs';
	@override String get downvotes => 'Votes négatifs';
	@override String get views => 'Vues';
	@override String createdAtEditedAt({required Object date1, required Object date2}) => 'créé le ${date1}, modifié le ${date2}';
	@override String get loading => 'Chargement';
	@override String get releaseToLoad => 'Relâcher pour charger plus';
	@override String get finished => 'terminé !';
	@override String get noMoreData => 'Plus de données';
	@override String get refreshed => 'Actualisé';
	@override String get refreshing => 'Actualisation';
	@override String get pullToRefresh => 'Tirer pour actualiser';
	@override String get suggestedInterests => 'Intérêts suggérés';
	@override String get reveal => 'Révéler';
	@override String get wantToShareRevenues => 'Je veux partager ces revenus';
	@override String get splitRevenuesWithUsers => 'Partager les revenus avec les utilisateurs';
	@override String get addUser => 'Ajouter un utilisateur';
	@override String get selectAdate => 'Sélectionner une date';
	@override String get clearDate => 'Effacer la date';
	@override String get nothingToShowHere => 'Oups ! Rien à montrer ici !';
	@override String get confirmPayment => 'Confirmer le paiement';
	@override String get payWithNwc => 'Payer avec NWC';
	@override String get important => 'Important';
	@override String get adjustVolume => 'Ajuster le volume';
	@override String get adjustSpeed => 'Ajuster la vitesse';
	@override String get updateInterests => 'Mettre à jour les intérêts';
	@override String get usingViewMode => 'Vous utilisez le mode visualisation';
	@override String get usingViewModeDesc => 'Connectez-vous avec votre clé privée et rejoignez la communauté.';
	@override String get noInternetAccess => 'Pas d\'accès Internet';
	@override String get checkModelRouter => 'Vérifiez votre modem ou routeur';
	@override String get reconnectWifi => 'Se reconnecter à un wifi';
	@override String get somethingWentWrong => 'Quelque chose s\'est mal passé !';
	@override String get somethingWentWrongDesc => 'Il semble que quelque chose se soit passé lors du chargement des données, réessayez !';
	@override String get tryAgain => 'Réessayer';
	@override String get postNotFound => 'La publication n\'a pas pu être trouvée';
	@override String get user => 'utilisateur';
	@override String get view => 'voir';
	@override String get itsLive => 'C\'est en direct !';
	@override String get spreadWordSharingContent => 'Faites passer le mot en partageant votre contenu partout.';
	@override String get successfulRelays => 'Relais réussis';
	@override String get noRelaysCanBeFound => 'Aucun relais trouvé';
	@override String get dismiss => 'ignorer';
	@override String get deleteAccountMessage => 'Vous tentez de vous connecter à un compte supprimé.';
	@override String get exit => 'Sortir';
	@override String get shareContent => 'Partager le contenu';
	@override String get profile => 'Profil';
	@override String get by => 'par';
	@override String get shareLink => 'Partager le lien';
	@override String get shareImage => 'Partager l\'image';
	@override String get shareNoteId => 'Partager l\'id de la note';
	@override String get shareNprofile => 'Partager le nprofile';
	@override String get shareNaddr => 'Partager le naddr';
	@override String bio({required Object content}) => 'Bio : ${content}';
	@override String get earnSats => 'Gagner des SATs';
	@override String get earnSatsDesc => 'Aidez-nous à fournir plus d\'insights décentralisés pour examiner cette note payante.';
	@override String get verifyingNote => 'Vérification de la note';
	@override String get pickYourImage => 'Choisissez votre image';
	@override String get uploadPasteUrl => 'Vous pouvez télécharger ou coller une url pour votre image préférée';
	@override String get back => 'retour';
	@override String get camera => 'Caméra';
	@override String get communityWidgets => 'Widgets communautaires';
	@override String get myWidgets => 'Mes widgets';
	@override String get pendingUnfollowing => 'Désabonnement...';
	@override String get pendingFollowing => 'Abonnement...';
	@override String get zappers => 'Zappeurs';
	@override String get noZappersCanBeFound => 'Aucun zappeur trouvé.';
	@override String get payPublish => 'Payer et publier';
	@override String get payPublishNote => 'Note : Assurez-vous que tout le contenu que vous avez fourni est final car la publication est considérée comme irréversible et les SATS dépensés ne sont pas remboursables.';
	@override String userSubmittedPaidNote({required Object name}) => '${name} a soumis une note payante';
	@override String get getInvoice => 'Obtenir une facture';
	@override String get pay => 'Payer';
	@override String get compose => 'Composer';
	@override String get writeSomething => 'Écrire quelque chose...';
	@override String get highlightedNote => 'Une note mise en évidence pour plus d\'exposition.';
	@override String get typeValidZapQuestion => 'Tapez une question de sondage valide !';
	@override String get pollOptions => 'Options de sondage';
	@override String get minimumSatoshis => 'Satoshis minimum';
	@override String get minSats => 'Sats min';
	@override String get maxSats => 'Sats max';
	@override String get maximumSatoshis => 'Satoshis maximum';
	@override String get pollCloseDate => 'Date de fermeture du sondage';
	@override String optionsNumber({required Object number}) => 'Options : ${number}';
	@override String get zapSplits => 'Partages de zap';
	@override String get minimumOfOneRequired => 'Un montant minimum de 1 est requis';
	@override String get valueBetweenMinMax => 'La valeur doit être entre le montant min et max de sats';
	@override String get writeCommentOptional => 'Écrire un commentaire (optionnel)';
	@override String get splitZapsWith => 'Partager les zaps avec';
	@override String get useCannotBeZapped => 'Cet utilisateur ne peut pas être zappé';
	@override String get waitingGenerationOfInvoice => 'En attente de la génération des factures.';
	@override String userInvoiceGenerated({required Object name}) => 'Une facture pour ${name} a été générée';
	@override String get userInvoiceNotGenerated => 'Impossible de créer une facture pour cet utilisateur.';
	@override String payAmount({required Object number}) => 'Payer ${number} sats';
	@override String get generateInvoices => 'Générer les factures';
	@override String get userZappedSuccesfuly => 'L\'utilisateur a été zappé avec succès';
	@override String get useValidTitle => 'Un titre valide doit être utilisé';
	@override String get errorAddingBookmark => 'Erreur survenue lors de l\'ajout du favori';
	@override String get bookmarkAdded => 'La liste de favoris a été ajoutée';
	@override String get voteNotSubmitted => 'Le vote n\'a pas pu être soumis';
	@override String get zapSplitsMessage => 'Pour les partages de zap, il devrait y avoir au moins une personne';
	@override String get errorUpdatingCuration => 'Une erreur est survenue lors de la mise à jour de la curation';
	@override String get errorAddingCuration => 'Une erreur est survenue lors de l\'ajout de la curation';
	@override String get errorDeletingContent => 'Erreur survenue lors de la suppression du contenu';
	@override String get errorSigningEvent => 'Erreur survenue lors de la signature de l\'événement';
	@override String get errorSendingEvent => 'Erreur survenue lors de l\'envoi de l\'événement';
	@override String get errorSendingMessage => 'erreur survenue lors de l\'envoi du message';
	@override String get userHasBeenMuted => 'L\'utilisateur a été mis en sourdine';
	@override String get userHasBeenUnmuted => 'L\'utilisateur a été réactivé';
	@override String get messageCouldNotBeDecrypted => 'le message n\'a pas pu être déchiffré';
	@override String get interestsUpdateMessage => 'La liste d\'intérêts a été mise à jour avec succès !';
	@override String get errorGeneratingEvent => 'Erreur survenue lors de la génération de l\'événement';
	@override String get oneFeedOptionAvailable => 'Il devrait y avoir au moins une option de flux disponible.';
	@override String get walletCreated => 'Le portefeuille a été créé avec succès';
	@override String get walletLinked => 'Le portefeuille a été lié avec succès';
	@override String get errorCreatingWallet => 'Erreur survenue lors de la création du portefeuille';
	@override String get walletNotLinked => 'Le portefeuille ne peut pas être lié. Mauvaise adresse lightning';
	@override String get invalidPairingSecret => 'Secret d\'appariement invalide';
	@override String get errorSettingToken => 'Erreur survenue lors de la configuration du token';
	@override String get nwcInitialized => 'La connexion portefeuille nostr a été initialisée';
	@override String get noWalletLinkedMessage => 'Vous n\'avez aucun portefeuille lié à votre profil, souhaitez-vous lier ce portefeuille ?';
	@override String get errorUsingWallet => 'Erreur survenue lors de l\'utilisation du portefeuille !';
	@override String get submitValidData => 'Assurez-vous de soumettre des données valides';
	@override String get submitValidInvoice => 'Assurez-vous de soumettre une facture valide';
	@override String get paymentSucceeded => 'Paiement réussi';
	@override String get paymentFailed => 'Paiement échoué';
	@override String get notEnoughBalance => 'Solde insuffisant pour effectuer ce paiement.';
	@override String get permissionInvoiceNotGranted => 'Permission de payer les factures non accordée.';
	@override String get allUsersZapped => 'Tous les utilisateurs ont été zappés !';
	@override String get partialUsersZapped => 'Utilisateurs partiels zappés !';
	@override String get noUserZapped => 'Aucun utilisateur n\'a été zappé !';
	@override String get errorZappingUsers => 'Erreur survenue lors du zapping des utilisateurs';
	@override String get selectDefaultWallet => 'Sélectionnez un portefeuille par défaut dans les paramètres.';
	@override String get noInvoiceAvailable => 'Aucune facture disponible';
	@override String get invoicePaid => 'La facture a été payée avec succès';
	@override String get errorPayingInvoice => 'Erreur survenue lors du paiement en utilisant la facture';
	@override String get errorUsingExternalWallet => 'Erreur lors de l\'utilisation du portefeuille externe.';
	@override String get paymentSurpassMax => 'Le paiement dépasse le montant maximum autorisé.';
	@override String get errorSendingSats => 'Erreur survenue lors de l\'envoi des sats';
	@override String get setSatsMoreThanZero => 'Définir un montant de sats supérieur à 0';
	@override String get processCompleted => 'Le processus a été terminé';
	@override String get relayingStuff => 'Relayage en cours...';
	@override String get amberNotInstalled => 'L\'application Amber n\'est pas installée';
	@override String get alreadyLoggedIn => 'Vous êtes déjà connecté !';
	@override String get loggedIn => 'Vous êtes connecté !';
	@override String get attemptConnectAmber => 'La tentative de connexion avec Amber a été rejetée.';
	@override String get errorUploadingImage => 'Erreur survenue lors du téléchargement de l\'image';
	@override String get invalidPrivateKey => 'Clé privée invalide !';
	@override String get invalidHexKey => 'Clé hex invalide !';
	@override String get fetchingArticle => 'Récupération de l\'article';
	@override String get articleNotFound => 'L\'article n\'a pas pu être trouvé';
	@override String get fetchingCuration => 'Récupération de la curation';
	@override String get curationNotFound => 'La curation n\'a pas pu être trouvée';
	@override String get fetchingSmartWidget => 'Récupération du widget intelligent';
	@override String get smartWidgetNotFound => 'Le widget intelligent n\'a pas pu être trouvé';
	@override String get fetchingVideo => 'Récupération de la vidéo';
	@override String get videoNotFound => 'La vidéo n\'a pas pu être trouvée';
	@override String get fetchingNote => 'Récupération de la note';
	@override String get noteNotFound => 'La note n\'a pas pu être trouvée';
	@override String get eventNotFound => 'L\'événement n\'a pas pu être trouvé';
	@override String get verifiedNoteNotFound => 'La note vérifiée n\'a pas pu être trouvée';
	@override String get eventNotRecognized => 'L\'événement n\'a pas pu être reconnu';
	@override String get fetchingEventUserRelays => 'Récupération de l\'événement depuis les relais de l\'utilisateur';
	@override String get fetchingProfile => 'Récupération du profil';
	@override String get fetchingEvent => 'Récupération de l\'événement';
	@override String get loggedToYakiChest => 'Vous êtes connecté au coffre de Yakihonne';
	@override String get errorLoggingYakiChest => 'Erreur survenue lors de la connexion au coffre de Yakihonne';
	@override String get relayInUse => 'Relais déjà en utilisation';
	@override String get errorConnectingRelay => 'Erreur survenue lors de la connexion au relais';
	@override String get submitValidLud => 'Assurez-vous d\'obtenir un lud16/lud06 valide.';
	@override String get errorUpdatingData => 'Erreur survenue lors de la mise à jour des données';
	@override String get updatedSuccesfuly => 'Mis à jour avec succès';
	@override String get relaysListUpdated => 'La liste des relais a été mise à jour';
	@override String get couldNotUpdateRelaysList => 'Impossible de mettre à jour la liste des relais';
	@override String get errorUpdatingRelaysList => 'Erreur survenue lors de la mise à jour de la liste des relais';
	@override String get errorClaimingReward => 'Erreur survenue lors de la réclamation d\'une récompense';
	@override String get errorDecodingData => 'Erreur survenue lors du décodage des données';
	@override String get loggingIn => 'Connexion...';
	@override String get loggingOut => 'Déconnexion...';
	@override String get disconnecting => 'Déconnexion...';
	@override String get ratingSubmittedCheckReward => 'Votre évaluation a été soumise, vérifiez votre page de récompenses pour réclamer votre récompense d\'évaluation';
	@override String get errorSubmittingRating => 'Erreur survenue lors de la soumission de votre évaluation';
	@override String get verifiedNoteAdded => 'Votre note vérifiée a été ajoutée, vérifiez votre page de récompenses pour réclamer votre récompense d\'écriture';
	@override String get errorAddingVerifiedNote => 'Erreur survenue lors de l\'ajout de votre note vérifiée';
	@override String get ratingDeleted => 'Votre évaluation a été supprimée';
	@override String get errorDeletingRating => 'Erreur survenue lors de la suppression de votre évaluation';
	@override String get autoSavedArticleDeleted => 'L\'article auto-sauvegardé a été supprimé';
	@override String get articlePublished => 'Votre article a été publié !';
	@override String get errorAddingArticle => 'Une erreur est survenue lors de l\'ajout de l\'article';
	@override String get writeValidNote => 'Écrivez une note valide !';
	@override String get setOutboxRelays => 'Assurez-vous de configurer vos relais de sortie';
	@override String get notePublished => 'La note a été publiée !';
	@override String get paidNotePublished => 'La note payante a été publiée !';
	@override String get invoiceNotPayed => 'Il semble que vous n\'ayez pas payé la facture, vérifiez à nouveau';
	@override String get autoSavedSMdeleted => 'Le widget intelligent auto-sauvegardé a été supprimé';
	@override String get errorUploadingMedia => 'Erreur survenue lors du téléchargement du média';
	@override String get smartWidgetPublishedSuccessfuly => 'Le widget intelligent a été publié avec succès';
	@override String get errorAddingWidget => 'Une erreur est survenue lors de l\'ajout du widget intelligent';
	@override String get setAllRequiredContent => 'Assurez-vous de définir tout le contenu requis.';
	@override String get noEventIdCanBeFound => 'Aucun événement avec cet id trouvé !';
	@override String get notValidVideoEvent => 'Cet événement n\'est pas un événement vidéo valide !';
	@override String get emptyVideoUrl => 'Ce nevent a une url vide';
	@override String get submitValidVideoEvent => 'Veuillez soumettre un événement vidéo valide';
	@override String get errorUploadingVideo => 'Erreur survenue lors du téléchargement de la vidéo';
	@override String get errorAddingVideo => 'Une erreur est survenue lors de l\'ajout de la vidéo';
	@override String get submitMinMaxSats => 'Assurez-vous de soumettre des satoshis minimum et maximum valides';
	@override String get submitValidCloseDate => 'Assurez-vous de soumettre une date de fermeture valide.';
	@override String get submitValidOptions => 'Assurez-vous de soumettre des options valides.';
	@override String get pollZapPublished => 'Le sondage zap a été publié !';
	@override String get relaysNotReached => 'Les relais n\'ont pas pu être atteints';
	@override String get loginYakiChestPoints => 'Connectez-vous au coffre de Yakihonne, accumulez des points en étant actif sur la plateforme et gagnez de précieuses récompenses !';
	@override String get inaccessibleLink => 'Lien inaccessible';
	@override String get mediaExceedsMaxSize => 'Le média dépasse la taille maximale qui est de 21 mb';
	@override String get fetchingUserInboxRelays => 'Récupération des relais de boîte de réception de l\'utilisateur';
	@override String userZappedYou({required Object name, required Object number}) => '${name} vous a zappé ${number} sats';
	@override String userReactedYou({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à vous';
	@override String userRepostedYou({required Object name}) => '${name} a repartagé votre contenu';
	@override String userMentionedYouInNote({required Object name}) => '${name} vous a mentionné dans une note';
	@override String userMentionedYouInPaidNote({required Object name}) => '${name} vous a mentionné dans une note payante';
	@override String userMentionedYouInArticle({required Object name}) => '${name} vous a mentionné dans un article';
	@override String userMentionedYouInVideo({required Object name}) => '${name} vous a mentionné dans une vidéo';
	@override String userMentionedYouInCuration({required Object name}) => '${name} vous a mentionné dans une curation';
	@override String userMentionedYouInSmartWidget({required Object name}) => '${name} vous a mentionné dans un widget intelligent';
	@override String userMentionedYouInPoll({required Object name}) => '${name} vous a mentionné dans un sondage';
	@override String userPublishedPaidNote({required Object name}) => '${name} a publié une note payante';
	@override String userPublishedArticle({required Object name}) => '${name} a publié un article';
	@override String userPublishedVideo({required Object name}) => '${name} a publié une vidéo';
	@override String userPublishedCuration({required Object name}) => '${name} a publié une curation';
	@override String userPublishedSmartWidget({required Object name}) => '${name} a publié un widget intelligent';
	@override String userPublishedPoll({required Object name}) => '${name} a publié un sondage';
	@override String userZappedYourArticle({required Object name, required Object number}) => '${name} a zappé votre article ${number} sats';
	@override String userZappedYourCuration({required Object name, required Object number}) => '${name} a zappé votre curation ${number} sats';
	@override String userZappedYourVideo({required Object name, required Object number}) => '${name} a zappé votre vidéo ${number} sats';
	@override String userZappedYourSmartWidget({required Object name, required Object number}) => '${name} a zappé votre widget intelligent ${number} sats';
	@override String userZappedYourPoll({required Object name, required Object number}) => '${name} a zappé votre sondage ${number} sats';
	@override String userZappedYourNote({required Object name, required Object number}) => '${name} a zappé votre note ${number} sats';
	@override String userZappedYourPaidNote({required Object name, required Object number}) => '${name} a zappé votre note payante ${number} sats';
	@override String userReactedYourArticle({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à votre article';
	@override String userReactedYourCuration({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à votre curation';
	@override String userReactedYourVideo({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à votre vidéo';
	@override String userReactedYourSmartWidget({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à votre widget intelligent';
	@override String userReactedYourPoll({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à votre sondage';
	@override String userReactedYourNote({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à votre note';
	@override String userReactedYourPaidNote({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à votre note payante';
	@override String userReactedYourMessage({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à votre message';
	@override String userRepostedYourNote({required Object name}) => '${name} a repartagé votre note';
	@override String userRepostedYourPaidNote({required Object name}) => '${name} a repartagé votre note payante';
	@override String userRepliedYourArticle({required Object name}) => '${name} a répondu à votre article';
	@override String userRepliedYourCuration({required Object name}) => '${name} a répondu à votre curation';
	@override String userRepliedYourVideo({required Object name}) => '${name} a répondu à votre vidéo';
	@override String userRepliedYourSmartWidget({required Object name}) => '${name} a répondu à votre widget intelligent';
	@override String userRepliedYourPoll({required Object name}) => '${name} a répondu à votre sondage';
	@override String userRepliedYourNote({required Object name}) => '${name} a répondu à votre note';
	@override String userRepliedYourPaidNote({required Object name}) => '${name} a répondu à votre note payante';
	@override String userCommentedYourArticle({required Object name}) => '${name} a commenté votre article';
	@override String userCommentedYourCuration({required Object name}) => '${name} a commenté votre curation';
	@override String userCommentedYourVideo({required Object name}) => '${name} a commenté votre vidéo';
	@override String userCommentedYourSmartWidget({required Object name}) => '${name} a commenté votre widget intelligent';
	@override String userCommentedYourPoll({required Object name}) => '${name} a commenté votre sondage';
	@override String userCommentedYourNote({required Object name}) => '${name} a commenté votre note';
	@override String userCommentedYourPaidNote({required Object name}) => '${name} a commenté votre note payante';
	@override String userQuotedYourArticle({required Object name}) => '${name} a cité votre article';
	@override String userQuotedYourCuration({required Object name}) => '${name} a cité votre curation';
	@override String userQuotedYourVideo({required Object name}) => '${name} a cité votre vidéo';
	@override String userQuotedYourNote({required Object name}) => '${name} a cité votre note';
	@override String userQuotedYourPaidNote({required Object name}) => '${name} a cité votre note payante';
	@override String userReactedArticleYouIn({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à un article dans lequel vous étiez mentionné';
	@override String userReactedCurationYouIn({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à une curation dans laquelle vous étiez mentionné';
	@override String userReactedVideoYouIn({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à une vidéo dans laquelle vous étiez mentionné';
	@override String userReactedSmartWidgetYouIn({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à un widget intelligent dans lequel vous étiez mentionné';
	@override String userReactedPollYouIn({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à un sondage dans lequel vous étiez mentionné';
	@override String userReactedNoteYouIn({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à une note dans laquelle vous étiez mentionné';
	@override String userReactedPaidNoteYouIn({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à une note payante dans laquelle vous étiez mentionné';
	@override String userRepostedNoteYouIn({required Object name}) => '${name} a repartagé une note dans laquelle vous étiez mentionné';
	@override String userRepostedPaidNoteYouIn({required Object name}) => '${name} a repartagé une note payante dans laquelle vous étiez mentionné';
	@override String userRepliedArticleYouIn({required Object name}) => '${name} a répondu à un article dans lequel vous étiez mentionné';
	@override String userRepliedCurationYouIn({required Object name}) => '${name} a répondu à une curation dans laquelle vous étiez mentionné';
	@override String userRepliedVideoYouIn({required Object name}) => '${name} a répondu à une vidéo dans laquelle vous étiez mentionné';
	@override String userRepliedSmartWidgetYouIn({required Object name}) => '${name} a répondu à un widget intelligent dans lequel vous étiez mentionné';
	@override String userRepliedPollYouIn({required Object name}) => '${name} a répondu à un sondage dans lequel vous étiez mentionné';
	@override String userRepliedNoteYouIn({required Object name}) => '${name} a répondu à une note dans laquelle vous étiez mentionné';
	@override String userRepliedPaidNoteYouIn({required Object name}) => '${name} a répondu à une note payante dans laquelle vous étiez mentionné';
	@override String userCommentedArticleYouIn({required Object name}) => '${name} a commenté un article dans lequel vous étiez mentionné';
	@override String userCommentedCurationYouIn({required Object name}) => '${name} a commenté une curation dans laquelle vous étiez mentionné';
	@override String userCommentedVideoYouIn({required Object name}) => '${name} a commenté une vidéo dans laquelle vous étiez mentionné';
	@override String userCommentedSmartWidgetYouIn({required Object name}) => '${name} a commenté un widget intelligent dans lequel vous étiez mentionné';
	@override String userCommentedPollYouIn({required Object name}) => '${name} a commenté un sondage dans lequel vous étiez mentionné';
	@override String userCommentedNoteYouIn({required Object name}) => '${name} a commenté une note dans laquelle vous étiez mentionné';
	@override String userCommentedPaidNoteYouIn({required Object name}) => '${name} a commenté une note payante dans laquelle vous étiez mentionné';
	@override String userQuotedArticleYouIn({required Object name}) => '${name} a cité un article dans lequel vous étiez mentionné';
	@override String userQuotedCurationYouIn({required Object name}) => '${name} a cité une curation dans laquelle vous étiez mentionné';
	@override String userQuotedVideoYouIn({required Object name}) => '${name} a cité une vidéo dans laquelle vous étiez mentionné';
	@override String userQuotedNoteYouIn({required Object name}) => '${name} a cité une note dans laquelle vous étiez mentionné';
	@override String userQuotedPaidNoteYouIn({required Object name}) => '${name} a cité une note payante dans laquelle vous étiez mentionné';
	@override String reactedWith({required Object name, required Object reaction}) => '${name} a réagi avec ${reaction}';
	@override String get verifiedNoteSealed => 'Votre note vérifiée a été scellée.';
	@override String get verifiedNoteRateSealed => 'Une note vérifiée que vous avez évaluée a été scellée.';
	@override String userNewVideo({required Object name}) => 'Vidéo de ${name}';
	@override String titleData({required Object description}) => 'Titre : ${description}';
	@override String get checkoutVideo => 'consultez ma vidéo';
	@override String get yakihonneNotification => 'Notification de YakiHonne';
	@override String get unknownVerifiedNote => 'Note vérifiée inconnue';
	@override String userReply({required Object name}) => 'Réponse de ${name}';
	@override String userPaidNote({required Object name}) => 'Nouvelle note payante de ${name}';
	@override String contentData({required Object description}) => 'Contenu : ${description}';
	@override String get checkoutPaidNote => 'consultez ma note payante';
	@override String userNewCuration({required Object name}) => 'Nouvelle curation de ${name}';
	@override String userNewArticle({required Object name}) => 'Nouveau article de ${name}';
	@override String userNewSmartWidget({required Object name}) => 'Nouveau widget intelligent de ${name}';
	@override String get checkoutArticle => 'consultez mon article';
	@override String get checkoutCuration => 'consultez ma curation';
	@override String get checkoutSmartWidget => 'consultez mon widget intelligent';
	@override String get languagePreferences => 'Préférences de langue';
	@override String get contentTranslation => 'Traduction de contenu';
	@override String get appLanguage => 'Langue de l\'application';
	@override String get apiKeyRequired => 'Clé API (requise)';
	@override String get getApiKey => 'Obtenir la clé API';
	@override String get seeTranslation => 'Voir la traduction';
	@override String get seeOriginal => 'Voir l\'original';
	@override String get plan => 'Plan';
	@override String get free => 'Gratuit';
	@override String get pro => 'Pro';
	@override String get errorTranslating => 'Erreur survenue lors de la traduction du contenu.';
	@override String get errorMissingKey => 'Clé API manquante ou abonnement expiré. Vérifiez Paramètres -> Préférences de langue pour plus d\'informations.';
	@override String get comingSoon => 'Bientôt disponible';
	@override String get content => 'Contenu';
	@override String expiresOn({required Object date}) => 'Expire le : ${date}';
	@override String get collapseNote => 'Réduire la note';
	@override String get reactions => 'Réactions';
	@override String get reposts => 'Repartages';
	@override String get notifDisabled => 'Les notifications sont désactivées !';
	@override String get notifDisabledMessage => 'Les notifications sont désactivées pour ce type, vous pouvez les activer dans les paramètres de notifications.';
	@override String get oneNotifOptionAvailable => 'Il devrait y avoir au moins une option de notification disponible.';
	@override String get readAll => 'Tout lire';
	@override String get usernameTaken => 'Le nom d\'utilisateur est pris';
	@override String get usernameRequired => 'Le nom d\'utilisateur est requis';
	@override String get deleteWalletConfirmation => 'Veuillez vous assurer de sauvegarder en sécurité votre phrase de connexion NWC, car nous ne pouvons pas aider à récupérer les portefeuilles perdus.';
	@override String get unsupportedKind => 'Type non supporté';
	@override String get analyticsCrashlytics => 'Crashlytics';
	@override String get analyticsCache => 'Crashlytics et cache';
	@override String get analyticsCacheOn => 'Crashlytics ont été activés.';
	@override String get analyticsCacheOff => 'Crashlytics ont été désactivés.';
	@override String get shareNoUsage => 'Vous ne partagez aucun crashlytics avec nous pour le moment.';
	@override String get wantShareAnalytics => 'Voulez-vous partager les crashlytics ?';
	@override String get yakihonneAnCr => 'Crashlytics de YakiHonne';
	@override String get crashlyticsTerms => 'La collecte de crashlytics anonymisés est vitale pour affiner les fonctionnalités et l\'expérience utilisateur de notre application. Cela nous permet d\'identifier les préférences des utilisateurs, d\'améliorer les fonctionnalités populaires et de faire des optimisations éclairées, garantissant une application plus personnalisée et efficace pour nos utilisateurs.';
	@override String get collectAnonymised => 'Nous collectons des crashlytics anonymisés pour améliorer l\'expérience de l\'application.';
	@override String get linkWalletToProfile => 'Lier le portefeuille à votre profil';
	@override String get linkWalletToProfileDesc => 'Le portefeuille lié sera utilisé pour recevoir des sats';
	@override String get noWalletLinked => 'Vous n\'avez aucun portefeuille lié à votre profil, considérez en lier un des vôtres dans le menu ci-dessus';
	@override String get addPoll => 'Ajouter un sondage';
	@override String get browsePolls => 'Parcourir les sondages';
	@override String get maciPolls => 'Sondage MACI';
	@override String get beta => 'Bêta';
	@override String get choosePollType => 'Choisir un type de sondage';
	@override String get created => 'Créé';
	@override String get tallying => 'Décompte';
	@override String get ended => 'Terminé';
	@override String get closed => 'Fermé';
	@override String get voteResultsBy => 'Résultats de vote par';
	@override String get votes => 'votes';
	@override String get voiceCredit => 'Crédit vocal';
	@override String get viewDetails => 'Voir les détails';
	@override String get signup => 'S\'inscrire';
	@override String get notDownloadProof => 'Impossible de télécharger les preuves';
	@override String get name => 'Nom';
	@override String get status => 'Statut';
	@override String get circuit => 'Circuit';
	@override String get votingSystem => 'Système de vote';
	@override String get proofSystem => 'Système de preuve';
	@override String get gasStation => 'Station d\'essence';
	@override String get totalFund => '(fonds total)';
	@override String get roundStart => 'Début du tour';
	@override String get roundEnd => 'Fin du tour';
	@override String get operator => 'Opérateur';
	@override String get contractCreator => 'Créateur du contrat';
	@override String get contractAddress => 'Adresse du contrat';
	@override String get blockHeight => 'Hauteur de bloc';
	@override String atContractCreation({required Object number}) => '${number} (à la création du contrat)';
	@override String get zkProofs => 'Preuves ZK';
	@override String get downloadZkProofs => 'Télécharger les preuves';
	@override String get walletConnectionString => 'Chaîne de connexion du portefeuille';
	@override String get walletConnectionStringDesc => 'Veuillez vous assurer de copier ou d\'exporter en sécurité votre chaîne de connexion de portefeuille. Nous ne stockons pas ces informations, et si elles sont perdues, elles ne peuvent pas être récupérées.';
	@override String get export => 'Exporter';
	@override String get logout => 'Se déconnecter';
	@override String get exportAndLogout => 'Exporter et se déconnecter';
	@override String get exportWalletsDesc => 'Il semble que vous ayez des portefeuilles liés à votre compte. Veuillez télécharger vos secrets de portefeuille avant de vous déconnecter.';
	@override String get manageWallets => 'Gérer les portefeuilles';
	@override String get roundDuration => 'Durée du tour';
	@override String startAt({required Object date}) => 'Commence à : ${date}';
	@override String get loginAction => 'Se connecter';
	@override String get addPicture => 'Ajouter une image';
	@override String get editPicture => 'Modifier l\'image';
	@override String get exportKeys => 'Exporter les clés';
	@override String get mutedUser => 'Utilisateur en sourdine';
	@override String get unaccessibleContent => 'Contenu inaccessible';
	@override String get mutedUserDesc => 'Vous avez mis cet utilisateur en sourdine, considérez le réactiver pour voir ce contenu';
	@override String get commentHidden => 'Ce commentaire est masqué';
	@override String get upcoming => 'À venir';
	@override String get exportCredentials => 'Exporter les identifiants';
	@override String get loginToYakihonne => 'Se connecter à Yakihonne';
	@override String get alreadyUser => 'Déjà utilisateur ?';
	@override String get createPoll => 'Créer un sondage';
	@override String get gasStationTotal => 'Station d\'essence (total financé)';
	@override String get gasStationRemaining => 'Station d\'essence (solde restant)';
	@override String get paste => 'Coller';
	@override String get manual => 'Manuel';
	@override String get contacts => 'Contacts';
	@override String get typeManualDesc => 'Tapez l\'adresse Lightning, la facture Lightning ou LNURL';
	@override String get useValidPaymentRequest => 'Veuillez utiliser une demande de paiement valide';
	@override String get save => 'Sauvegarder';
	@override String get saveImageGallery => 'L\'image a été téléchargée dans votre galerie';
	@override String get errorSavingImage => 'Erreur survenue lors du téléchargement de l\'image';
	@override String get copyImageGallery => 'L\'image a été copiée dans votre presse-papiers';
	@override String get errorCopyImage => 'Erreur survenue lors de la copie de l\'image';
	@override String get scan => 'Scanner';
	@override String get invalidLightningAddress => 'Adresse lightning invalide';
	@override String get deleteAccountDesc => 'Vous êtes sur le point de supprimer votre compte, souhaitez-vous continuer ?';
	@override String get paymentFailedInvoice => 'Paiement échoué : vérifiez la validité de cette facture';
	@override String get validSatsAmount => 'Définir un montant de sats valide';
	@override String get placeholder => 'Espace réservé';
	@override String get inputFieldCustomization => 'Personnalisation du champ de saisie';
	@override String get addInputField => 'Ajouter un champ de saisie';
	@override String get addButton => 'Ajouter un bouton';
	@override String get selectImage => 'Sélectionner une image';
	@override String get moveLeft => 'Déplacer à gauche';
	@override String get moveRight => 'Déplacer à droite';
	@override String get buttonRequired => 'Il devrait y avoir au moins un bouton disponible';
	@override String get missingInputDesc => 'Il semble que vous utilisez une des fonctions personnalisées qui nécessite un composant de champ de saisie sans en intégrer un dans votre widget intelligent, veuillez ajouter un champ de saisie pour que la fonction fonctionne correctement.';
	@override String get countdown => 'Compte à rebours';
	@override String get contentEndsAt => 'Le contenu se termine à';
	@override String get countdownTime => 'L\'heure du compte à rebours est obligatoire';
	@override String get contentEndsDate => 'La date de fin du contenu est obligatoire';
	@override String get lnMandatory => 'L\'adresse lightning est obligatoire';
	@override String get pubkeysMandatory => 'Au moins un profil est obligatoire';
	@override String get buttonNoUrl => 'Les urls des boutons sont obligatoires';
	@override String get shareWidgetImage => 'Partager l\'image du widget';
	@override String get inputField => 'Champ de saisie';
	@override String get noReplies => 'Aucune réponse';
	@override String get message => 'Message';
	@override String get chat => 'Chat';
	@override String get onlyLettersNumber => 'Seules les lettres et chiffres sont autorisés';
	@override String get appCache => 'Cache de l\'application';
	@override String get cachedData => 'Données en cache';
	@override String get cachedMedia => 'Médias en cache';
	@override String get cacheCleared => 'Le cache a été vidé';
	@override String get closeAppClearingCache => 'Il est préférable de redémarrer l\'application après avoir vidé le cache pour s\'assurer que tous les changements prennent effet et que l\'application fonctionne en douceur';
	@override String get appCacheNotice => 'Votre cache d\'application augmente en taille. Pour assurer des performances fluides, il est recommandé de vider les anciennes données.';
	@override String get manageCache => 'Gérer le cache';
	@override String get filterByTime => 'Filtrer par temps';
	@override String get allTime => 'Tout le temps';
	@override String get oneMonth => '1 mois';
	@override String get threeMonths => '3 mois';
	@override String get sixMonths => '6 mois';
	@override String get oneYear => '1 an';
	@override String get defaultZapAmount => 'Montant de zap par défaut';
	@override String get oneTapZap => 'Activer le zap en un tap';
	@override String get verify => 'Vérifier';
	@override String get reset => 'réinitialiser';
	@override String get appCannotVerified => 'L\'application ne peut pas être vérifiée ou est invalide';
	@override String get useValidAppUrl => 'Utilisez une url d\'application valide';
	@override String get app => 'Application';
	@override String get userNotConnected => 'Utilisateur non connecté';
	@override String get userCannotSignEvent => 'Cet utilisateur ne peut pas signer d\'événements.';
	@override String get invalidEvent => 'Événement invalide';
	@override String get eventCannotBeSigned => 'L\'événement ne peut pas être signé';
	@override String get signEvent => 'Signer l\'événement';
	@override String get sign => 'Signer';
	@override String get signPublish => 'Signer et publier';
	@override String get signEventDes => 'Vous êtes sur le point de signer l\'événement suivant';
	@override String get enableAutomaticSigning => 'Signature automatique';
	@override String get tools => 'Outils';
	@override String get searchSmartWidgets => 'Rechercher des widgets intelligents';
	@override String get noToolsAvailable => 'Aucun outil disponible';
	@override String get underMaintenance => 'En maintenance';
	@override String get smartWidgetMaintenance => 'Le Widget Intelligent est en panne pour maintenance. Nous le réparons et il sera de retour bientôt !';
	@override String get mySavedTools => 'Mes outils sauvegardés';
	@override String get availableTools => 'Outils disponibles';
	@override String get remove => 'Supprimer';
	@override String get youHaveNoTools => 'Vous n\'avez pas d\'outils';
	@override String get discoverTools => 'Découvrez les outils publiés pour vous aider avec votre création de contenu';
	@override String get addWidgetTools => 'Ajouter des outils de widget';
	@override String get widgetSearch => 'Recherche de widget';
	@override String get widgetSearchDesc => 'recherche de widgets intelligents publiés et de ce que les gens ont fait';
	@override String get getInspired => 'Inspirez-vous';
	@override String get getInspirtedDesc => 'demandez à notre IA de vous aider à construire votre widget intelligent';
	@override String get trySearch => 'Essayez différentes méthodes de recherche';
	@override String get typeForCommands => 'Tapez / pour les commandes';
	@override String get loadMore => 'Charger plus';
	@override String searchingFor({required Object name}) => 'Rechercher : ${name}';
	@override String get playground => 'Terrain de jeu';
	@override String get typeKeywords => 'Tapez des mots-clés (ex : Mot-clé1, Mot-clé2..)';
	@override String get enableGossip => 'Modèle Gossip';
	@override String get enableGossipDesc => 'Le modèle Gossip est désactivé par défaut. Vous pouvez l\'activer, dans Paramètres, sous Modération de contenu.';
	@override String get enableExternalBrowser => 'Utiliser un navigateur externe';
	@override String get restartAppTakeEffect => 'Redémarrez l\'application pour que l\'action prenne effet';
	@override String get tips => 'Conseils';
	@override String get docs => 'Docs';
	@override String get tryMiniApp => 'Essayez votre mini-app avec des tests pratiques et interactifs.';
	@override String get exploreOurRepos => 'Explorez nos dépôts ou consultez notre documentation Smart Widgets.';
	@override String get bringAi => 'Nous apportons l\'IA !';
	@override String get bringAiDesc => 'Nous créons un assistant IA pour rationaliser votre travail avec les widgets programmables et le développement de mini-apps—gardez l\'œil ouvert !';
	@override String notesCount({required Object number}) => '${number} note(s)';
	@override String mixedContentCount({required Object number}) => '${number} contenu';
	@override String get noApp => 'Aucune application adaptée trouvée pour ouvrir le fichier exporté';
	@override String andMore({required Object number}) => '& ${number} autre(s)';
	@override String get addFilter => 'Ajouter un filtre';
	@override String get entitleFilter => 'Intituler le filtre';
	@override String get includedWords => 'Mots inclus';
	@override String get excludedWords => 'Mots exclus';
	@override String get hideSensitiveContent => 'Masquer le contenu sensible';
	@override String get mustIncludeThumbnail => 'Doit inclure une miniature';
	@override String get forArticles => 'Pour les articles';
	@override String get forVideos => 'Pour les vidéos';
	@override String get forCurations => 'Pour les curations';
	@override String get articleMinWords => 'Nombre minimum de mots du contenu';
	@override String get showOnlyArticleMedia => 'Afficher seulement les articles avec des médias';
	@override String get showOnlyNotesMedia => 'Afficher seulement les notes avec des médias';
	@override String get curationsType => 'Type de curations';
	@override String get minItemCount => 'Nombre minimum d\'éléments';
	@override String get addWord => 'Ajouter un mot approprié';
	@override String get wordNotInIncluded => 'Assurez-vous que le mot n\'est pas dans les mots inclus';
	@override String get wordNotInExcluded => 'Assurez-vous que le mot n\'est pas dans les mots exclus';
	@override String get fieldRequired => 'Champ requis';
	@override String get filterAdded => 'Le filtre a été ajouté';
	@override String get filterUpdated => 'Le filtre a été mis à jour';
	@override String get filterDeleted => 'Le filtre a été supprimé';
	@override String get filters => 'Filtres';
	@override String get contentFeed => 'Flux de contenu';
	@override String get communityFeed => 'Flux communautaire';
	@override String get relaysFeed => 'Flux de relais';
	@override String get marketplaceFeed => 'Flux marketplace';
	@override String get addYourFeed => 'Ajoutez votre flux préféré';
	@override String get myList => 'Ma liste';
	@override String get allFreeFeeds => 'Tous les flux gratuits';
	@override String get noRelays => 'Aucun relais présent';
	@override String get addRelays => 'Ajoutez votre liste de relais pour profiter d\'un flux propre et personnalisé';
	@override String get adjustYourFeedList => 'Ajustez votre liste de flux';
	@override String get addRelayUrl => 'Ajouter l\'url du relais';
	@override String get feedOptionEnabled => 'Au moins une option de flux devrait être activée';
	@override String get feedSetUpdate => 'L\'ensemble de flux a été mis à jour';
	@override String get global => 'Global';
	@override String get fromNetwork => 'Du réseau';
	@override String get top => 'Haut';
	@override String get showFollowingList => 'Votre flux actuel est basé sur la liste d\'abonnements de quelqu\'un d\'autre, commencez à suivre des personnes pour adapter votre flux à vos préférences';
	@override String get from => 'De';
	@override String get to => 'À';
	@override String get dayMonthYear => 'jj/MM/aaaa';
	@override String get fromDateMessage => 'La date \'De\' doit être antérieure à la date \'À\'';
	@override String get toDateMessage => 'La date \'À\' doit être postérieure à la date \'De\'';
	@override String get noResults => 'Aucun résultat';
	@override String get noResultsFilterMessage => 'Il semble que vous appliquez un filtre personnalisé, veuillez ajuster les paramètres et les dates pour acquérir plus de données';
	@override String get noResultsNoFilterMessage => 'Rien trouvé, veuillez changer votre source de contenu ou appliquer différents paramètres de filtre';
	@override String get addToNotes => 'Ajouter aux notes';
	@override String get addToDiscover => 'Ajouter à découvrir';
	@override String get shareRelayContent => 'Partager le contenu du relais';
	@override String get shareRelayUrl => 'Partager l\'URL du relais';
	@override String get basic => 'Basique';
	@override String get privateMessages => 'Messages privés';
	@override String get pushNotifications => 'Notifications push';
	@override String get repliesView => 'Vue des réponses';
	@override String get threadView => 'Fil';
	@override String get boxView => 'Boîte';
	@override String get viewAs => 'Voir comme';
	@override String get feedSettings => 'Paramètres de flux';
	@override String get appliedFilterDesc => 'Cette note est masquée en raison du filtre actuellement appliqué.';
	@override String get showNote => 'Afficher la note';
	@override String get allMedia => 'Tous les médias';
	@override String get searchInNostr => 'Rechercher dans Nostr';
	@override String get findPeopleContent => 'Trouver des personnes, notes et contenu';
	@override String get activeService => 'Service actif';
	@override String get regularServers => 'Serveurs réguliers';
	@override String get blossomServers => 'Serveurs BLOSSOM';
	@override String get mirrorAllServer => 'Miroir tous serveurs';
	@override String get mainServer => 'Serveur principal';
	@override String get select => 'Sélectionner';
	@override String get noServerFound => 'Aucun serveur trouvé';
	@override String get serverExists => 'Le serveur existe déjà dans votre liste';
	@override String get invalidUrl => 'Format d\'url invalide';
	@override String get serverPath => 'Chemin du serveur';
	@override String get errorAddingBlossom => 'Erreur survenue lors de l\'ajout du serveur blossom';
	@override String get errorSelectBlossom => 'Erreur survenue lors de la sélection du serveur blossom';
	@override String get errorDeleteBlossom => 'Erreur survenue lors de la suppression du serveur blossom';
	@override String get wotConfig => 'Configuration du web de confiance';
	@override String get wot => 'web de confiance';
	@override String get wotThreshold => 'Seuil du web de confiance';
	@override String get postActions => 'Actions de publication';
	@override String get enabledFor => 'Activé pour';
	@override String get dmRelayTitle => 'Les relais de messages privés ne sont pas configurés !';
	@override String get dmRelayDesc => 'Mettez à jour votre liste de relais en conséquence. ';
	@override String get youFollow => 'Vous suivez';
	@override String get quotaLimit => 'Vous avez dépassé votre limite de quota quotidien';
	@override String get alwaysUseExternal => 'Toujours utiliser les zaps de portefeuille externe';
	@override String get alwaysUseExternalDesc => 'Utiliser une application de portefeuille Lightning externe au lieu du portefeuille intégré de YakiHonne pour toutes les transactions de zap.';
	@override String get unreachableExternalWallet => 'Portefeuille externe inaccessible';
	@override String get secureStorageDesc => 'Vos clés sont stockées en sécurité sur votre appareil et ne sont jamais partagées avec nous ou qui que ce soit d\'autre.';
	@override String get pubkeySharedDesc => 'Sûr à partager - ceci vous identifie sur Nostr.';
	@override String get privKeyDesc => 'Garder privé - sauvegarder en sécurité pour accéder à votre compte ailleurs.';
	@override String get settingsKeysDesc => 'Gérez vos clés Nostr pour l\'identité réseau, la signature d\'événements et l\'authentification des publications.';
	@override String get settingsRelaysDesc => 'Configurez les connexions de relais Nostr pour stocker et distribuer les événements.';
	@override String get settingsCustomizationDesc => 'Personnalisez l\'affichage de votre flux YakiHonne, les gestes, les aperçus et les préférences pour une meilleure expérience Nostr.';
	@override String get settingsNotificationsDesc => 'Contrôlez les notifications pour les messages, mentions, réactions et autres événements Nostr.';
	@override String get settingsContentDesc => 'Contrôlez les interactions de contenu, les paramètres de confidentialité, la gestion des médias et les préférences de messagerie sur Nostr.';
	@override String get settingsLanguageDesc => 'Choisissez votre langue préférée pour l\'interface YakiHonne et la traduction de contenu.';
	@override String get settingsWalletDesc => 'Connectez et gérez les portefeuilles Bitcoin Lightning pour envoyer/recevoir des zaps avec des montants personnalisables et une intégration externe.';
	@override String get settingsAppearanceDesc => 'Personnalisez l\'apparence visuelle de YakiHonne pour correspondre à vos préférences et votre confort de visualisation.';
	@override String get settingsCacheDesc => 'Gérez la surveillance des performances de l\'application, le rapport d\'erreurs et l\'optimisation du stockage pour un fonctionnement fluide.';
	@override String get addQuickRelayDesc => 'Ajoutez rapidement un nouveau relais en entrant son URL.';
	@override String get fewerRelays => 'Moins de relais stables = meilleures performances et synchronisation plus rapide.';
	@override String get greenDotsDesc => 'Les points verts montrent les connexions actives.';
	@override String get redDotsDesc => 'Les points rouges montrent les relais hors ligne.';
	@override String get greyDotsDesc => 'Les points gris montrent les relais en attente.';
	@override String get homeFeedCustomDesc => 'Choisissez le style d\'affichage des réponses (Boîte ou Fil) et gérez les préférences de suggestions pour les personnes, le contenu et les intérêts.';
	@override String get NewPostDesc => 'Choisissez ce qui se passe quand vous appuyez longuement lors de la création de publications (actuellement défini sur Note).';
	@override String get profilePreviewDesc => 'Afficher les aperçus de profil utilisateur lorsque vous tapez sur les noms d\'utilisateur dans votre flux.';
	@override String get collapseNoteDesc => 'Minimiser automatiquement les longs posts pour garder votre flux propre et lisible.';
	@override String get pushNotificationsDesc => 'Recevez des alertes instantanées sur votre appareil. Axé sur la confidentialité en utilisant les protocoles sécurisés FCM et APNS';
	@override String get privateMessagesDesc => 'Soyez alerté des nouveaux messages directs et conversations privées.';
	@override String get followingDesc => 'Soyez notifié quand les personnes que vous suivez publient du nouveau contenu.';
	@override String get mentionsDesc => 'Soyez alerté quand quelqu\'un vous mentionne ou répond à vos publications.';
	@override String get repostsDesc => 'Soyez alerté quand quelqu\'un partage ou repartage votre contenu.';
	@override String get reactionsDesc => 'Soyez notifié quand quelqu\'un aime ou réagit à vos publications.';
	@override String get zapDesc => 'Soyez notifié quand vous recevez des pourboires Bitcoin (zaps) sur vos publications.';
	@override String get muteListDesc => 'Voir et gérer les utilisateurs que vous avez bloqués d\'apparaître dans votre flux.';
	@override String get mediaUploaderDesc => 'Choisissez quel service télécharge vos images et fichiers médias.';
	@override String get autoSignDesc => 'Signer automatiquement les événements demandés par les mini-apps (widgets intelligents d\'action/outil) sans confirmation manuelle à chaque fois.';
	@override String get gossipDesc => 'Gestion sophistiquée des relais qui trouve automatiquement les publications de vos abonnés à travers différents relais tout en minimisant les connexions et en s\'adaptant aux relais hors ligne.';
	@override String get useExternalBrowsDesc => 'Ouvrir les liens dans votre application de navigateur par défaut au lieu du navigateur intégré.';
	@override String get secureDmDesc => 'Utiliser le dernier standard de messagerie privée (NIP-17) avec chiffrement avancé. Désactiver pour utiliser l\'ancien format NIP-4 pour la compatibilité.';
	@override String get wotConfigDesc => 'Un mécanisme de confiance décentralisé utilisant des attestations sociales pour établir la réputation au sein du protocole Nostr.';
	@override String get appLangDesc => 'Choisissez la langue pour l\'interface, les menus et les boutons de YakiHonne.';
	@override String get contentTransDesc => 'Sélectionnez le service de traduction pour les publications en langues étrangères.';
	@override String get planDesc => 'Votre niveau de plan de traduction actuel et vos limites d\'utilisation.';
	@override String get manageWalletsDesc => 'Ajoutez et organisez vos portefeuilles Lightning pour envoyer et recevoir des zaps Bitcoin sur Nostr.';
	@override String get defaultZapDesc => 'Définissez le montant Bitcoin par défaut (en sats) lors de l\'envoi de zaps rapides aux publications.';
	@override String get enableZapDesc => 'Un tap envoie le montant par défaut instantanément. Double tap ouvre les options de zap (montant, portefeuille, message). Quand désactivé, double tap envoie le montant par défaut.';
	@override String get externalWalletDesc => 'Utiliser une application de portefeuille Lightning externe au lieu du portefeuille intégré de YakiHonne pour toutes les transactions de zap.';
	@override String get fontSizeDesc => 'Ajustez la taille du texte dans toute l\'application pour une meilleure lisibilité - utilisez le curseur pour agrandir ou réduire le texte.';
	@override String get appThemeDesc => 'Basculez entre le mode clair et sombre pour personnaliser l\'apparence visuelle de l\'application.';
	@override String get crashlyticsDesc => 'Rapport de crash anonyme et analyses d\'application pour aider à améliorer les performances et corriger les bugs. Nous utilisons les analyses Umami pour améliorer votre expérience. Désactivez à tout moment.';
	@override String get showSuggDesc => 'Afficher les recommandations de contenu général dans votre flux.';
	@override String get showSuggPeople => 'Afficher les utilisateurs recommandés à suivre basés sur votre activité.';
	@override String get showSuggContent => 'Afficher les publications et articles recommandés dans votre flux.';
	@override String get showSuggInterests => 'Afficher les recommandations de sujets et d\'intérêts pour la découverte.';
	@override String get striveToMake => 'Nous nous efforçons de tirer le meilleur parti de Nostr, Soutenez-nous ci-dessous ou envoyez-nous vos précieux commentaires : zap, dms, github.';
	@override String get errorAmber => 'Vous avez soit refusé, soit vous êtes déjà connecté à Amber';
	@override String get useOneRelay => 'Vous devez laisser au moins un relais connecté';
	@override String get automaticPurge => 'Purge automatique du cache';
	@override String get automaticPurgeDesc => 'Efface automatiquement le cache de l\'application lorsqu\'il atteint 2 Go. Maintient les performances et évite une utilisation excessive du stockage.';
	@override String get customServices => 'Services personnalisés';
	@override String get defaultServices => 'Services par défaut';
	@override String get addService => 'Ajouter un service';
	@override String get customServicesDesc => 'Services personnalisés disponibles ajoutés par vous.';
	@override String get urlRequired => 'URL requise';
	@override String get serviceAdded => 'Le service a été ajouté';
	@override String get showRawEvent => 'Afficher l\'événement brut';
	@override String get rawEventData => 'Données brutes de l\'événement';
	@override String get copyRawEventData => 'Les données brutes de l\'événement ont été copiées ! 👏';
	@override String get kind => 'Type';
	@override String get shortNote => 'Note courte';
	@override String get postedOnDate => 'Publié le';
	@override String get showMore => '... afficher plus';
	@override String get accountDeleted => 'Ce compte a été supprimé et n\'est plus accessible.';
	@override String get ok => 'OK';
	@override String get redeem => 'Utiliser';
	@override String get redeemCode => 'Utiliser le code';
	@override String get redeemAndEarn => 'Utiliser et gagner';
	@override String get redeemingFailed => 'Échec de l\'utilisation';
	@override String get redeemInProgress => 'Code en cours d\'utilisation...';
	@override String get redeemCodeDesc => 'Saisissez votre code pour l\'utiliser';
	@override String get missingCode => 'Code manquant';
	@override String get missingPubkey => 'Clé publique manquante';
	@override String get invalidPubkey => 'Clé publique invalide';
	@override String get missingLightningAddress => 'Adresse Lightning manquante';
	@override String get codeNotFound => 'Code introuvable';
	@override String get redeemCodeRequired => 'Le code est requis';
	@override String get redeemCodeInvalid => 'Code invalide';
	@override String get codeBeingRedeemed => 'Votre code est en cours d\'utilisation. S\'il n\'aboutit pas, veuillez réessayer sous peu.';
	@override String get redeemCodeSuccess => 'Le code a été utilisé avec succès';
	@override String get redeemFailed => 'Impossible d\'utiliser le code, veuillez réessayer plus tard.';
	@override String get codeAlreadyRedeemed => 'Le code a déjà été utilisé';
	@override String satsEarned({required Object amount}) => '+${amount} sats gagnés.';
	@override String get selectReceivingWallet => 'Sélectionner le portefeuille de réception';
	@override String get redeemCodeMessage => 'Obtenez des sats gratuits avec les codes YakiHonne — entrez simplement votre code et augmentez instantanément votre solde.';
	@override String get scanCode => 'Scanner le code';
	@override String get enterCode => 'Saisir le code';
	@override String get errorSharingMedia => 'Erreur lors du partage du média';
	@override String get open => 'Ouvrir';
	@override String get openUrl => 'Ouvrir l\'URL';
	@override String openUrlDesc({required Object url}) => 'Voulez-vous ouvrir "${url}" ?';
	@override String get openUrlPrompt => 'Demande d\'ouverture d\'URL';
	@override String get openUrlPromptDesc => 'Un avertissement de sécurité affichant l\'URL complète avant de l\'ouvrir dans votre navigateur.';
	@override String get whatsNew => 'Nouveautés';
}

/// Flat map(s) containing all translations.
/// Only for edge cases! For simple maps, use the map function of this library.
extension on TranslationsFr {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'addNewBookmark': return 'Aucune liste de favoris trouvée, essayez d\'en ajouter une !';
			case 'setBookmarkTitleDescription': return 'Définir un titre et une description pour votre liste de favoris.';
			case 'title': return 'titre';
			case 'description': return 'description';
			case 'descriptionOptional': return 'description (optionnelle)';
			case 'bookmarkLists': return 'Listes de favoris';
			case 'submit': return 'soumettre';
			case 'addBookmarkList': return 'Ajouter une liste de favoris';
			case 'submitBookmarkList': return 'Soumettre la liste de favoris';
			case 'next': return 'suivant';
			case 'saveDraft': return 'Sauvegarder le brouillon';
			case 'deleteDraft': return 'Supprimer le brouillon';
			case 'publish': return 'publier';
			case 'smHaveOneWidget': return 'Le widget intelligent devrait avoir au moins un composant.';
			case 'smHaveTitle': return 'Le widget intelligent devrait au moins avoir un titre';
			case 'whatsOnYourMind': return 'À quoi pensez-vous ?';
			case 'sensitiveContent': return 'Ceci est un contenu sensible';
			case 'addYourTopics': return 'Ajoutez vos sujets';
			case 'article': return 'article';
			case 'articles': return 'articles';
			case 'video': return 'vidéo';
			case 'videos': return 'vidéos';
			case 'curation': return 'curation';
			case 'curations': return 'curations';
			case 'thumbnailPreview': return 'Aperçu de la miniature';
			case 'selectAndUploadLocaleImage': return 'Sélectionner et télécharger une image locale';
			case 'issueOccuredSelectingImage': return 'Un problème est survenu lors de la sélection de l\'image.';
			case 'imageUploadHistory': return 'Historique des téléchargements d\'images';
			case 'noImageHistory': return 'Aucun historique d\'images trouvé';
			case 'cancel': return 'annuler';
			case 'uploadAndUse': return 'Télécharger et utiliser';
			case 'publishRemoveDraft': return 'Publier et supprimer le brouillon';
			case 'clearChat': return 'Effacer le chat';
			case 'noDataFromGpt': return 'Il y a des données à afficher depuis GPT.';
			case 'askMeSomething': return 'Demandez-moi quelque chose !';
			case 'copy': return 'copier';
			case 'textSuccesfulyCopied': return 'Texte copié avec succès !';
			case 'insertText': return 'Insérer le texte';
			case 'searchContentByTitle': return ({required Object type}) => 'Rechercher ${type} par titre';
			case 'noContentCanBeFound': return ({required Object type}) => 'Aucun ${type} trouvé';
			case 'noContentBelongToCuration': return ({required Object type}) => 'Aucun ${type} n\'appartient à cette curation';
			case 'byPerson': return ({required Object name}) => 'Par ${name}';
			case 'allRelays': return 'Tous les relais';
			case 'myArticles': return 'Mes articles';
			case 'myVideos': return 'Mes vidéos';
			case 'curationType': return 'Type de curation';
			case 'update': return 'mettre à jour';
			case 'invalidInvoiceLnurl': return 'Assurez-vous de définir une facture ou lnurl valide';
			case 'addValidUrl': return 'Assurez-vous d\'ajouter une url valide';
			case 'layoutCustomization': return 'Personnalisation de la mise en page';
			case 'duoLayout': return 'Mise en page double';
			case 'monoLayout': return 'Mise en page mono';
			case 'warning': return 'avertissement';
			case 'switchToMonolayout': return 'Vous passez à une mise en page mono tout en ayant des éléments des deux côtés, cela effacera le contenu du conteneur, souhaitez-vous continuer ?';
			case 'erase': return 'effacer';
			case 'textCustomization': return 'Personnalisation du texte';
			case 'writeYourText': return 'Écrivez votre texte';
			case 'size': return 'taille';
			case 'weight': return 'poids';
			case 'color': return 'couleur';
			case 'videoCustomization': return 'Personnalisation de la vidéo';
			case 'videoUrl': return 'Url de la vidéo';
			case 'zapPollCustomization': return 'Personnalisation du sondage zap';
			case 'contentTextColor': return 'Couleur du texte du contenu';
			case 'optionTextColor': return 'Couleur du texte de l\'option';
			case 'optionBackgroundColor': return 'Couleur de fond de l\'option';
			case 'fillColor': return 'Couleur de remplissage';
			case 'imageCustomization': return 'Personnalisation de l\'image';
			case 'imageUrl': return 'Url de l\'image';
			case 'imageAspectRatio': return 'Rapport d\'aspect de l\'image';
			case 'buttonCustomization': return 'Personnalisation du bouton';
			case 'buttonText': return 'Texte du bouton';
			case 'type': return 'type';
			case 'useInvoice': return 'Utiliser la facture';
			case 'invoice': return 'facture';
			case 'lightningAddress': return 'Adresse Lightning';
			case 'selectUserToZap': return 'Sélectionner un utilisateur à zapper (optionnel)';
			case 'zapPollNevent': return 'Nevent du sondage zap';
			case 'textColor': return 'Couleur du texte';
			case 'buttonColor': return 'Couleur du bouton';
			case 'url': return 'Url';
			case 'invoiceOrLN': return 'Facture ou adresse Lightning';
			case 'youtubeUrl': return 'Url Youtube';
			case 'telegramUrl': return 'Url Telegram';
			case 'xUrl': return 'Url X';
			case 'discordUrl': return 'Url Discord';
			case 'nostrScheme': return 'Schéma Nostr';
			case 'containerCustomization': return 'Personnalisation du conteneur';
			case 'backgroundColor': return 'Couleur de fond';
			case 'borderColor': return 'Couleur de la bordure';
			case 'value': return 'valeur';
			case 'pickYourComponent': return 'Choisissez votre composant';
			case 'selectComponent': return 'Sélectionnez le composant à votre convenance et modifiez-le.';
			case 'text': return 'texte';
			case 'image': return 'image';
			case 'button': return 'bouton';
			case 'summaryOptional': return 'Résumé (Optionnel)';
			case 'smartWidgetsDrafts': return 'Brouillons de widgets intelligents';
			case 'noSmartWidget': return 'Aucun brouillon de widgets intelligents trouvé';
			case 'noSmartWidgetCanBeFound': return 'Aucun widget intelligent trouvé';
			case 'smartWidgetConvention': return 'Ce widget intelligent ne suit pas la convention convenue.';
			case 'monolayoutRequired': return 'Mise en page mono requise';
			case 'zapPoll': return 'Sondage zap';
			case 'layout': return 'mise en page';
			case 'container': return 'conteneur';
			case 'edit': return 'modifier';
			case 'moveUp': return 'Déplacer vers le haut';
			case 'moveDown': return 'Déplacer vers le bas';
			case 'delete': return 'supprimer';
			case 'editToAddZapPoll': return 'Modifier pour ajouter un sondage zap';
			case 'options': return 'options';
			case 'smartWidgetBuilder': return 'Constructeur de widgets intelligents';
			case 'startBuildingSmartWidget': return 'Commencez à construire et personnaliser votre widget intelligent pour l\'utiliser sur le réseau Nostr';
			case 'blankWidget': return 'Widget vierge';
			case 'myDrafts': return 'Mes brouillons';
			case 'templates': return 'modèles';
			case 'communityPolls': return 'Sondages communautaires';
			case 'myPolls': return 'Mes sondages';
			case 'noPollsCanBeFound': return 'Aucun sondage trouvé';
			case 'totalNumber': return ({required Object number}) => 'Total : ${number}';
			case 'smartWidgetsTemplates': return 'Modèles de widgets intelligents';
			case 'noTemplatesCanBeFound': return 'Aucun modèle trouvé dans cette catégorie.';
			case 'useTemplate': return 'Utiliser le modèle';
			case 'pickYourVideo': return 'Choisissez votre vidéo';
			case 'canUploadPastLink': return 'Vous pouvez télécharger, coller un lien ou choisir un nevent kind 1063 pour votre vidéo.';
			case 'gallery': return 'Galerie';
			case 'link': return 'Lien';
			case 'fileSharing': return 'Partage de fichiers';
			case 'setUpYourLink': return 'Configurez votre lien';
			case 'setUpYourNevent': return 'Configurez votre nevent';
			case 'pasteYourLink': return 'Collez votre lien et soumettez-le';
			case 'pasteKind1063': return 'Collez votre nevent kind 1063 et soumettez-le';
			case 'addUrlNevent': return 'Ajouter une url/nevent appropriée';
			case 'nevent': return 'nevent';
			case 'addProperUrlNevent': return 'Ajouter une url/nevent appropriée';
			case 'horizontalVideo': return 'Vidéo horizontale';
			case 'preview': return 'Aperçu';
			case 'writeSummary': return 'Écrire un résumé';
			case 'uploadImage': return 'Télécharger une image';
			case 'addToCuration': return 'Ajouter à la curation';
			case 'submitCuration': return 'Soumettre la curation';
			case 'selectValidUrlImage': return 'Sélectionner une url d\'image valide.';
			case 'noCurationsFound': return 'Aucune curation trouvée. Essayez d\'en créer une pour pouvoir y ajouter du contenu.';
			case 'availableArticles': return ({required Object number}) => '${number} article(s) disponible(s)';
			case 'availableVideos': return ({required Object number}) => '${number} vidéo(s) disponible(s)';
			case 'articlesNum': return ({required Object number}) => '${number} article(s)';
			case 'videosNum': return ({required Object number}) => '${number} vidéo(s)';
			case 'articlesAvailableCuration': return 'Articles disponibles dans cette curation';
			case 'videosAvailableCuration': return 'Vidéos disponibles dans cette curation';
			case 'articleAddedCuration': return 'L\'article a été ajouté à votre curation.';
			case 'videoAddedCuration': return 'La vidéo a été ajoutée à votre curation.';
			case 'validTitleCuration': return 'Assurez-vous d\'ajouter un titre valide pour cette curation';
			case 'validDescriptionCuration': return 'Assurez-vous d\'ajouter une description valide pour cette curation';
			case 'validImageCuration': return 'Assurez-vous d\'ajouter une image valide pour cette curation';
			case 'addCuration': return 'Ajouter une curation';
			case 'postedBy': return 'Publié par';
			case 'follow': return 'suivre';
			case 'unfollow': return 'ne plus suivre';
			case 'postedFrom': return 'publié depuis';
			case 'noTitle': return 'Aucun titre';
			case 'itemsNumber': return ({required Object number}) => '${number} élément(s)';
			case 'noArticlesInCuration': return 'Aucun article dans cette curation trouvé';
			case 'noVideosInCuration': return 'Aucune vidéo dans cette curation trouvée';
			case 'add': return 'ajouter';
			case 'noBookmarksListFound': return 'Aucune liste de favoris trouvée, essayez d\'en ajouter une !';
			case 'deleteBookmarkList': return 'Supprimer la liste de favoris';
			case 'confirmDeleteBookmarkList': return 'Vous êtes sur le point de supprimer cette liste de favoris, souhaitez-vous continuer ?';
			case 'bookmarks': return 'Favoris';
			case 'bookmarksListCount': return ({required Object number}) => '${number} listes de favoris';
			case 'noDescription': return 'Aucune description';
			case 'editedOn': return ({required Object date}) => 'Modifié le : ${date}';
			case 'publishedOn': return ({required Object date}) => 'Publié le : ${date}';
			case 'publishedOnText': return 'Publié le';
			case 'lastUpdatedOn': return ({required Object date}) => 'Dernière mise à jour le : ${date}';
			case 'joinedOn': return ({required Object date}) => 'Rejoint le : ${date}';
			case 'list': return 'liste';
			case 'noElementsInBookmarks': return 'Aucun élément trouvé dans la liste des favoris';
			case 'draft': return 'brouillon';
			case 'note': return 'note';
			case 'notes': return 'notes';
			case 'smartWidget': return 'Widget intelligent';
			case 'widgets': return 'widgets';
			case 'postNote': return 'Publier une note';
			case 'postArticle': return 'Publier un article';
			case 'postCuration': return 'Publier une curation';
			case 'postVideo': return 'Publier une vidéo';
			case 'postSmartWidget': return 'Publier un widget intelligent';
			case 'ongoing': return 'en cours';
			case 'componentsSMCount': return ({required Object number}) => '${number} composants dans ce widget';
			case 'share': return 'partager';
			case 'copyNoteId': return 'Copier l\'id de la note';
			case 'noteIdCopied': return 'L\'id de la note a été copié ! 👏';
			case 'confirmDeleteDraft': return 'Vous êtes sur le point de supprimer ce brouillon, souhaitez-vous continuer ?';
			case 'reposted': return 'repartagé';
			case 'postInNote': return 'Publier en note';
			case 'clone': return 'cloner';
			case 'checkValidity': return 'Vérifier la validité';
			case 'copyNaddr': return 'copier naddr';
			case 'deleteContent': return ({required Object type}) => 'Supprimer ${type}';
			case 'confirmDeleteContent': return ({required Object type}) => 'Vous êtes sur le point de supprimer ce ${type}, souhaitez-vous continuer ?';
			case 'home': return 'Accueil';
			case 'followings': return 'Abonnements';
			case 'followers': return 'Abonnés';
			case 'replies': return 'réponses';
			case 'zapReceived': return 'Zaps reçus';
			case 'totalAmount': return 'Montant total';
			case 'zapSent': return 'Zaps envoyés';
			case 'latest': return 'dernier';
			case 'saved': return 'sauvegardé';
			case 'seeAll': return 'Voir tout';
			case 'popularNotes': return 'Notes populaires';
			case 'getStartedNow': return 'Commencer maintenant';
			case 'expandWorld': return 'Élargissez le monde en ajoutant ce qui vous fascine. Sélectionnez vos intérêts et laissez le voyage commencer';
			case 'addInterests': return 'Ajouter des intérêts';
			case 'manageInterests': return 'Gérer les intérêts';
			case 'interests': return 'intérêts';
			case 'yakihonneImprovements': return 'Améliorations de YakiHonne';
			case 'yakihonneNote': return 'Note de YakiHonne';
			case 'privacyNote': return 'Notre application garantit la plus grande confidentialité en stockant de manière sécurisée les données sensibles localement sur les appareils des utilisateurs, en utilisant un chiffrement strict. Soyez assuré, nous respectons une politique de non-partage stricte, garantissant que les informations sensibles restent confidentielles et ne quittent jamais l\'appareil de l\'utilisateur.';
			case 'pickYourMedia': return 'Choisissez vos médias';
			case 'uploadSendMedia': return 'Vous pouvez télécharger et envoyer des médias directement après votre sélection ou leur prise.';
			case 'noMessagesToDisplay': return 'Aucun message à afficher.';
			case 'enableSecureDmsMessage': return 'Pour plus de sécurité et de confidentialité, considérez l\'activation des DM sécurisés.';
			case 'replyingTo': return ({required Object name}) => 'En réponse à : ${name}';
			case 'writeYourMessage': return 'Écrire un message';
			case 'zap': return 'zap';
			case 'disableSecureDms': return 'Désactiver les DM sécurisés';
			case 'enableSecureDms': return 'Activer les DM sécurisés';
			case 'notUsingSecureDms': return 'Vous n\'utilisez plus les DM sécurisés';
			case 'usingSecureDms': return 'Vous utilisez maintenant les DM sécurisés';
			case 'mute': return 'muet';
			case 'unmute': return 'réactiver le son';
			case 'muteUser': return 'Mettre l\'utilisateur en sourdine';
			case 'unmuteUser': return 'Réactiver l\'utilisateur';
			case 'muteUserDesc': return ({required Object name}) => 'Vous êtes sur le point de mettre ${name} en sourdine, souhaitez-vous continuer ?';
			case 'unmuteUserDesc': return ({required Object name}) => 'Vous êtes sur le point de réactiver ${name}, souhaitez-vous continuer ?';
			case 'messageCopied': return 'Message copié avec succès !';
			case 'messageNotDecrypted': return 'Le message n\'a pas encore été déchiffré !';
			case 'reply': return 'répondre';
			case 'newMessage': return 'Nouveau message';
			case 'searchNameNpub': return 'Rechercher par nom, npub, nprofile';
			case 'searchByUserName': return 'Rechercher par nom d\'utilisateur';
			case 'known': return 'Connu';
			case 'unknown': return 'Inconnu';
			case 'noMessageCanBeFound': return 'Aucun message trouvé';
			case 'you': return 'Vous : ';
			case 'decrMessage': return 'Déchiffrement du message';
			case 'gifs': return 'gifs';
			case 'stickers': return 'autocollants';
			case 'customizeYourFeed': return 'Personnalisez votre flux';
			case 'feedOptions': return 'Options de flux';
			case 'recent': return 'récent';
			case 'recentWithReplies': return 'Récent avec réponses';
			case 'explore': return 'explorer';
			case 'following': return 'abonnements';
			case 'trending': return 'tendances';
			case 'highlights': return 'points forts';
			case 'paid': return 'payé';
			case 'others': return 'autres';
			case 'suggestionsBox': return 'Boîte de suggestions';
			case 'showSuggestions': return 'Afficher les suggestions';
			case 'showSuggestedPeople': return 'Afficher les personnes suggérées à suivre';
			case 'showArticlesNotesSuggestions': return 'Afficher les suggestions d\'articles/notes';
			case 'showSuggestedInterests': return 'Afficher les intérêts suggérés';
			case 'readTime': return ({required Object time}) => '${time}min de lecture';
			case 'watchNow': return 'regarder maintenant';
			case 'bookmark': return 'favori';
			case 'suggestions': return 'Suggestions';
			case 'hideSuggestions': return 'Masquer les suggestions';
			case 'enjoyExpOwnData': return 'Profitez de l\'expérience de posséder\nvos propres données !';
			case 'signIn': return 'Se connecter';
			case 'createAccount': return 'Créer un compte';
			case 'byContinuing': return 'En continuant, vous acceptez notre\n';
			case 'eula': return 'Contrat de licence utilisateur final (CLUF)';
			case 'continueAsGuest': return 'Continuer en tant qu\'invité';
			case 'heyWelcomeBack': return 'Salut,\nBon\nRetour';
			case 'npubNsecHex': return 'npub, nsec ou hex';
			case 'useAmber': return 'Utiliser Amber';
			case 'setValidKey': return 'Définir une clé valide';
			case 'pasteYourKey': return 'Collez votre clé';
			case 'taylorExperienceInterests': return 'Adaptez votre expérience en sélectionnant vos principaux intérêts';
			case 'peopleCountPlus': return ({required Object number}) => '+${number} personnes';
			case 'followAll': return 'Suivre tout';
			case 'unfollowAll': return 'Ne plus suivre tout';
			case 'details': return 'détails';
			case 'shareGlimps': return 'Partagez un aperçu de vous, avec des mots qui sonnent vrai.';
			case 'addCover': return 'Ajouter une couverture';
			case 'editCover': return 'Modifier la couverture';
			case 'yourName': return 'Votre nom';
			case 'setProperName': return 'Définir un nom approprié';
			case 'aboutYou': return 'À propos de vous';
			case 'secKeyDesc': return 'Vous pouvez trouver la clé secrète de votre compte dans vos paramètres. Cette clé est essentielle pour sécuriser l\'accès à votre compte. Veuillez la garder en sécurité et privée.';
			case 'secKeyWalletDesc': return 'Vous pouvez trouver la clé secrète de votre compte et le secret de connexion du portefeuille dans vos paramètres. Ces clés sont essentielles pour sécuriser l\'accès à votre compte et à votre portefeuille. Veuillez les garder en sécurité et privées.';
			case 'initializingAccount': return 'Initialisation du compte...';
			case 'letsGetStarted': return 'Commençons !';
			case 'dontHaveWallet': return 'Vous n\'avez pas de portefeuille ?';
			case 'createWalletSendRecSats': return 'Créer un portefeuille pour envoyer et recevoir des sats';
			case 'createWallet': return 'Créer un portefeuille';
			case 'youreAllSet': return 'Vous êtes prêt';
			case 'dashboard': return 'tableau de bord';
			case 'verifyNotes': return 'Vérifier les notes';
			case 'settings': return 'paramètres';
			case 'manageAccounts': return 'Gérer les comptes';
			case 'login': return 'Connexion';
			case 'switchAccounts': return 'Changer de compte';
			case 'addAccount': return 'Ajouter un compte';
			case 'logoutAllAccounts': return 'Déconnecter tous les comptes';
			case 'search': return 'rechercher';
			case 'smartWidgets': return 'Widgets intelligents';
			case 'notifications': return 'notifications';
			case 'inbox': return 'boîte de réception';
			case 'discover': return 'découvrir';
			case 'wallet': return 'portefeuille';
			case 'publicKey': return 'Clé publique';
			case 'profileLink': return 'Lien du profil';
			case 'profileCopied': return 'Le lien du profil a été copié ! 👏';
			case 'publicKeyCopied': return 'La clé publique a été copiée ! 👏';
			case 'lnCopied': return 'L\'adresse lightning a été copiée ! 👏';
			case 'scanQrCode': return 'Scanner le code QR';
			case 'viewQrCode': return 'Voir le code QR';
			case 'copyNpub': return 'Copier npub';
			case 'visitProfile': return 'Visiter le profil';
			case 'followMeOnNostr': return 'Suivez-moi sur Nostr';
			case 'close': return 'fermer';
			case 'loadingPreviousPosts': return 'Chargement des publications précédentes...';
			case 'noRepliesDesc': return 'Aucune réponse à cette note trouvée';
			case 'thread': return 'fil';
			case 'all': return 'tout';
			case 'mentions': return 'mentions';
			case 'zaps': return 'zaps';
			case 'noNotificationCanBeFound': return 'Aucune notification trouvée';
			case 'consumablePointsPerks1': return '1- Soumettre votre contenu pour attestation';
			case 'consumablePointsPerks2': return '2- Échanger des points pour publier des notes payantes';
			case 'consumablePointsPerks3': return '3- Échanger des points contre des SATs (Des seuils aléatoires sont sélectionnés et vous serez notifié chaque fois que l\'échange est disponible)';
			case 'yakihonneConsPoints': return 'Points consommables de YakiHonne';
			case 'soonUsers': return 'Bientôt, les utilisateurs pourront utiliser les points consommables dans l\'ensemble d\'activités suivant :';
			case 'startEarningPoints': return 'Commencez à gagner et tirez le meilleur parti de vos Yaki Points ! 🎉';
			case 'gotIt': return 'Compris !';
			case 'engagementChart': return 'Graphique d\'engagement';
			case 'lastGained': return ({required Object date}) => 'Dernier gain : ${date}';
			case 'attemptsRemained': return 'Tentatives restantes ';
			case 'congratulations': return 'Félicitations';
			case 'congratsDesc': return ({required Object number}) => 'Vous avez été récompensé de ${number} xp pour les actions suivantes, soyez actif et gagnez des récompenses !';
			case 'yakihonneChest': return 'Coffre de YakiHonne !';
			case 'noImGood': return 'Non, ça va';
			case 'points': return 'Points';
			case 'unlocked': return 'Débloqué';
			case 'locked': return 'Verrouillé';
			case 'whatsThis': return 'Qu\'est-ce que c\'est ?';
			case 'levelNumber': return ({required Object number}) => 'Niveau ${number}';
			case 'pointsSystem': return 'Système de points';
			case 'oneTimeRewards': return 'Récompenses uniques';
			case 'repeatedRewards': return 'Récompenses répétées';
			case 'consumablePoints': return 'Points consommables';
			case 'pointsRemaining': return ({required Object number}) => '${number} restants';
			case 'gain': return 'Gagner';
			case 'forName': return ({required Object name}) => 'pour ${name}';
			case 'min': return 'min';
			case 'levelsRequiredNum': return ({required Object number}) => '${number} niveaux requis';
			case 'seeMore': return 'Voir plus';
			case 'deleteCoverPic': return 'Supprimer l\'image de couverture !';
			case 'deleteCoverPicDesc': return 'Vous êtes sur le point de supprimer votre image de couverture, souhaitez-vous continuer ?';
			case 'editProfile': return 'Modifier le profil';
			case 'uploadingImage': return 'Téléchargement de l\'image...';
			case 'updateProfile': return 'Mettre à jour le profil';
			case 'userName': return 'Nom d\'utilisateur';
			case 'displayName': return 'Nom d\'affichage';
			case 'yourDisplayName': return 'Votre nom d\'affichage';
			case 'writeSomethingAboutYou': return 'Écrivez quelque chose sur vous !';
			case 'website': return 'Site web';
			case 'yourWebsite': return 'Votre site web';
			case 'verifyNip05': return 'Adresse Nostr vérifiée (NIP 05)';
			case 'enterNip05': return 'Entrez votre adresse NIP-05';
			case 'enterLn': return 'Entrez votre adresse LUD-06 ou LUD-16';
			case 'less': return 'Moins';
			case 'more': return 'Plus';
			case 'pictureUrl': return 'Url de l\'image';
			case 'coverUrl': return 'Url de couverture';
			case 'enterPictureUrl': return 'Entrez l\'url de votre image';
			case 'enterCoverUrl': return 'Entrez l\'url de votre couverture';
			case 'userNoArticles': return ({required Object name}) => '${name} n\'a pas d\'articles';
			case 'userNoCurations': return ({required Object name}) => '${name} n\'a pas de curations';
			case 'userNoNotes': return ({required Object name}) => '${name} n\'a pas de notes';
			case 'userNoVideos': return ({required Object name}) => '${name} n\'a pas de vidéos';
			case 'loadingFollowings': return 'Chargement des abonnements';
			case 'loadingFollowers': return 'chargement des abonnés';
			case 'followersNum': return ({required Object number}) => '${number} abonnés';
			case 'notFollowedByAnyoneYouFollow': return 'Pas suivi par quelqu\'un que vous suivez.';
			case 'mutuals': return 'commun(s)';
			case 'mutualsNum': return ({required Object number}) => '+ ${number} commun(s)';
			case 'followsYou': return 'Vous suit';
			case 'userNameCopied': return 'Le nom d\'utilisateur a été copié avec succès !';
			case 'profileRelays': return ({required Object number}) => 'Relais recommandés du profil - ${number}';
			case 'noUserRelays': return 'Aucun relais pour cet utilisateur trouvé.';
			case 'userNoSmartWidgets': return ({required Object name}) => '${name} n\'a pas de widgets intelligents';
			case 'un1': return 'Évaluations de Pas utile sur des notes qui ont fini avec un statut d\'Utile';
			case 'un1Desc': return 'Ces évaluations sont comptées deux fois car elles indiquent souvent un soutien pour des notes que d\'autres ont jugées utiles.';
			case 'un2': return 'Notes avec évaluations en cours';
			case 'un2Desc': return 'Évaluations sur des notes qui n\'ont actuellement pas un statut d\'Utile ou Pas utile';
			case 'unTextW1': return 'Notes qui ont obtenu le statut d\'Utile';
			case 'unTextW1Desc': return 'Ces notes sont maintenant affichées à tous ceux qui voient la publication, ajoutant du contexte et aidant à garder les gens informés.';
			case 'unTextR1': return 'Évaluations qui ont aidé une note à obtenir le statut d\'Utile';
			case 'unTextR1Desc': return 'Ces évaluations ont identifié des notes utiles qui sont montrées à tous, ajoutant du contexte et aidant à garder les gens informés.';
			case 'unTextW2': return 'Notes qui ont atteint le statut de Pas utile';
			case 'unTextW2Desc': return 'Ces notes ont été évaluées comme Pas utiles par suffisamment de contributeurs, y compris ceux qui ne sont parfois pas d\'accord dans leurs évaluations passées.';
			case 'unTextR2': return 'Évaluations qui ont aidé une note à obtenir le statut de Pas utile';
			case 'unTextR2Desc': return 'Ces évaluations améliorent les Notes vérifiées en donnant des retours aux auteurs de notes, et permettent aux contributeurs de se concentrer sur les notes les plus prometteuses';
			case 'unTextW3': return 'Notes qui ont besoin de plus d\'évaluations';
			case 'unTextW3Desc': return 'Notes qui n\'ont pas encore un statut d\'Utile ou Pas utile.';
			case 'unTextR3': return 'Évaluations de Pas utile sur des notes qui ont fini avec un statut d\'Utile';
			case 'unTextR3Desc': return 'Ne vous inquiétez pas, tout le monde en a ! Ces évaluations sont courantes et peuvent conduire à des changements de statut si suffisamment de personnes sont d\'accord qu\'une note \'Utile\' n\'est pas suffisamment utile.';
			case 'refresh': return 'actualiser';
			case 'userImpact': return 'Impact de l\'utilisateur';
			case 'userRelays': return 'Relais de l\'utilisateur';
			case 'rewards': return 'récompenses';
			case 'noRewards': return 'Vous n\'avez pas de récompenses, interagissez avec ou écrivez des notes vérifiées pour en obtenir.';
			case 'onDate': return ({required Object date}) => 'Le ${date}';
			case 'youHaveRated': return 'Vous avez évalué';
			case 'theFollowingNote': return 'la note suivante :';
			case 'youHaveLeftNote': return 'Vous avez laissé une note sur cette note payante :';
			case 'paidNoteLoading': return 'Chargement de la note payante';
			case 'yourNoteSealed': return 'Votre note suivante vient d\'être scellée :';
			case 'ratedNoteSealed': return 'Vous avez évalué la note suivante qui a été scellée :';
			case 'claimTime': return ({required Object time}) => 'Réclamer dans ${time}';
			case 'claim': return 'Réclamer';
			case 'requestInProgress': return 'Demande en cours';
			case 'granted': return 'Accordé';
			case 'interested': return 'Intéressé';
			case 'notInterested': return 'Pas intéressé';
			case 'noResKeyword': return 'Aucun résultat pour ce mot-clé';
			case 'noResKeywordDesc': return 'Aucun résultat trouvé avec ce mot-clé, essayez d\'utiliser d\'autres mots-clés pour obtenir de meilleurs résultats.';
			case 'startSearchPeople': return 'Commencer à rechercher des personnes';
			case 'startSearchContent': return 'Commencer à rechercher du contenu';
			case 'keys': return 'Clés';
			case 'myPublicKey': return 'Ma clé publique';
			case 'mySecretKey': return 'Ma clé secrète';
			case 'show': return 'afficher';
			case 'showSecret': return 'Afficher la clé secrète !';
			case 'showSecretDesc': return 'Assurez-vous de la garder en sécurité car elle donne un accès complet à votre compte.';
			case 'usingExternalSign': return 'Utilisation d\'un signataire externe';
			case 'usingExternalSignDesc': return 'Vous utilisez un signataire externe';
			case 'privKeyCopied': return 'La clé privée a été copiée ! 👏';
			case 'muteList': return 'Liste de sourdine';
			case 'noMutedUserFound': return 'Aucun utilisateur en sourdine trouvé.';
			case 'searchRelay': return 'Rechercher un relais';
			case 'deleteAccount': return 'Supprimer le compte';
			case 'clearAppCache': return 'Vider le cache de l\'application';
			case 'clearAppCacheDesc': return 'Vous êtes sur le point de vider le cache de l\'application, souhaitez-vous continuer ?';
			case 'clear': return 'vider';
			case 'fontSize': return 'Taille de police';
			case 'appTheme': return 'Thème de l\'application';
			case 'contentModeration': return 'Modération du contenu';
			case 'mediaUploader': return 'Téléchargeur de médias';
			case 'secureDirectMessaging': return 'Messages directs sécurisés';
			case 'customization': return 'Personnalisation';
			case 'hfCustomization': return 'Personnalisation du flux d\'accueil';
			case 'newPostGesture': return 'Geste d\'appui long pour nouveau post';
			case 'profilePreview': return 'Aperçu du profil';
			case 'relaySettings': return ({required Object number}) => 'Paramètres de relais ${number}';
			case 'yakihonne': return 'YakiHonne';
			case 'wallets': return 'portefeuilles';
			case 'addWallet': return 'Ajouter un portefeuille';
			case 'externalWallet': return 'Portefeuille externe';
			case 'yakiChest': return 'Coffre Yaki';
			case 'connected': return 'Connecté';
			case 'connect': return 'Connecter';
			case 'owner': return 'Propriétaire';
			case 'contact': return 'Contact';
			case 'software': return 'Logiciel';
			case 'version': return 'Version';
			case 'supportedNips': return 'Nips supportés';
			case 'instantConntect': return 'Connexion instantanée au relais';
			case 'invalidRelayUrl': return 'Url de relais invalide';
			case 'relays': return 'Relais';
			case 'readOnly': return 'Lecture seule';
			case 'writeOnly': return 'Écriture seule';
			case 'readWrite': return 'Lecture/Écriture';
			case 'defaultKey': return 'Par défaut';
			case 'viewProfile': return 'Voir le profil';
			case 'appearance': return 'Apparence';
			case 'untitled': return 'Sans titre';
			case 'smartWidgetChecker': return 'Vérificateur de widget intelligent';
			case 'naddr': return 'naddr';
			case 'noComponentsDisplayed': return 'Aucun composant ne peut être affiché';
			case 'metadata': return 'métadonnées';
			case 'createdAt': return 'Créé à';
			case 'identifier': return 'Identifiant';
			case 'enterSMaddr': return 'Entrez un naddr de widget intelligent pour vérifier sa validité.';
			case 'notFindSMwithAddr': return 'Impossible de trouver un widget intelligent avec cette adresse';
			case 'unableToOpenUrl': return 'Impossible d\'ouvrir l\'url';
			case 'voteToSeeStats': return 'Vous devez voter pour pouvoir voir les statistiques';
			case 'votesByZaps': return 'Votes par zaps';
			case 'votesByUsers': return 'Votes par utilisateurs';
			case 'alreadyVoted': return 'Vous avez déjà voté sur ce sondage';
			case 'userCannotBeFound': return 'L\'utilisateur ne peut pas être trouvé';
			case 'votesNumber': return ({required Object number}) => 'Votes : ${number}';
			case 'voteRequired': return 'Le vote est requis pour afficher les statistiques.';
			case 'showStats': return 'Afficher les statistiques';
			case 'pollClosesAt': return ({required Object date}) => 'Ferme à : ${date}';
			case 'pollClosedAt': return ({required Object date}) => 'Fermé à : ${date}';
			case 'checkSmartWidget': return 'Vérifier un widget intelligent';
			case 'emptyVerifiedNote': return 'Contenu de note vérifiée vide !';
			case 'post': return 'Publier';
			case 'seeAnything': return 'Voyez-vous quelque chose que vous souhaitez améliorer ?';
			case 'writeNote': return 'Écrire une note';
			case 'whatThinkThis': return 'Que pensez-vous de ceci ?';
			case 'sourceRecommended': return 'Source (recommandée)';
			case 'findPaidNoteCorrect': return 'Vous trouvez cette note payante correcte.';
			case 'findPaidNoteMisleading': return 'Vous trouvez cette note payante trompeuse.';
			case 'selectOneReason': return 'Sélectionnez au moins une raison';
			case 'rateHelpful': return 'Évaluer comme utile';
			case 'rateNotHelpful': return 'Évaluer comme pas utile';
			case 'ratedHelpful': return 'Évalué comme utile';
			case 'ratedNotHelpful': return 'Évalué comme pas utile';
			case 'youRatedHelpful': return 'vous avez évalué ceci comme utile';
			case 'youRatedNotHelpful': return 'vous avez évalué ceci comme pas utile';
			case 'findThisHelpful': return 'Trouvez-vous ceci utile ?';
			case 'findThisNotHelpful': return 'Trouvez-vous ceci pas utile ?';
			case 'setYourRating': return 'Définir votre évaluation';
			case 'whatThinkOfThat': return 'Que pensez-vous de cela ?';
			case 'changeRatingNote': return 'Note : changer votre évaluation ne sera valide que pendant 5 minutes, après cela vous n\'aurez plus l\'option d\'annuler ou de la changer.';
			case 'paidNote': return 'Note payante';
			case 'undo': return 'Annuler';
			case 'undoRating': return 'Annuler l\'évaluation';
			case 'undoRatingDesc': return 'Vous êtes sur le point d\'annuler votre évaluation, souhaitez-vous continuer ?';
			case 'seeAllAttempts': return 'Voir toutes les tentatives';
			case 'addNote': return 'Ajouter une note';
			case 'alreadyContributed': return 'Vous avez déjà contribué';
			case 'notesFromCommunity': return 'Notes de la communauté';
			case 'noCommunityNotes': return 'C\'est silencieux ici ! Pas encore de notes de la communauté.';
			case 'notHelpful': return 'Pas utile';
			case 'sealed': return 'Scellé';
			case 'notSealed': return 'Pas scellé';
			case 'notSealedYet': return 'Pas encore scellé';
			case 'needsMoreRating': return 'Besoin de plus d\'évaluations';
			case 'source': return 'Source';
			case 'thisNoteAwaitRating': return 'cette note attend l\'évaluation de la communauté.';
			case 'yourNoteAwaitRating': return 'cette note attend l\'évaluation de la communauté.';
			case 'topReasonsSelected': return 'Principales raisons sélectionnées par les évaluateurs :';
			case 'noReasonsSpecified': return 'Aucune raison spécifiée !';
			case 'postedOn': return ({required Object date}) => 'Publié le ${date}';
			case 'explanation': return 'Explication';
			case 'readAboutVerifyingNotes': return 'Lire à propos de la vérification des notes';
			case 'readAboutVerifyingNotesDesc': return 'Nous avons fait un article pour vous aider à comprendre notre objectif';
			case 'readArticle': return 'Lire l\'article';
			case 'whyVerifyingNotes': return 'Pourquoi vérifier les notes ?';
			case 'contributeUnderstanding': return 'Contribuer à construire la compréhension';
			case 'actGoodFaith': return 'Agir de bonne foi';
			case 'beHelpful': return 'Être utile, même à ceux qui ne sont pas d\'accord';
			case 'readMore': return 'Lire plus';
			case 'newKey': return 'Nouveau';
			case 'needsYourHelp': return 'A besoin de votre aide';
			case 'communityWallet': return 'Portefeuille communautaire';
			case 'noPaidNotesCanBeFound': return 'Aucune note payante trouvée.';
			case 'updatesNews': return 'Actualités des mises à jour';
			case 'updates': return 'Mises à jour';
			case 'toBeAbleSendSats': return 'Pour pouvoir envoyer des zaps, veuillez vous assurer de connecter votre portefeuille bitcoin lightning.';
			case 'receiveSats': return 'Recevoir des sats';
			case 'messageOptional': return 'Message (optionnel)';
			case 'amountInSats': return 'Montant en sats';
			case 'invoiceCopied': return 'Code de facture copié !';
			case 'copyInvoice': return 'Copier la facture';
			case 'ensureLnSet': return 'Assurez-vous que votre adresse lightning est bien configurée';
			case 'errorGeneratingInvoice': return 'Erreur survenue lors de la génération de la facture';
			case 'generateInvoice': return 'Générer une facture';
			case 'qrCode': return 'Code QR';
			case 'scanPay': return 'Scanner et payer';
			case 'slideToPay': return 'Glisser pour payer';
			case 'invalidInvoice': return 'Facture invalide';
			case 'invalidInvoiceDesc': return 'Il semble que la facture scannée soit invalide, re-scannez et réessayez.';
			case 'scanAgain': return 'Scanner à nouveau';
			case 'sendSats': return 'Envoyer des sats';
			case 'send': return 'Envoyer';
			case 'recentTransactions': return 'Transactions récentes';
			case 'noTransactionCanBeFound': return 'Aucune transaction trouvée';
			case 'selectWalletTransactions': return 'Sélectionnez un portefeuille pour obtenir les dernières transactions.';
			case 'noUserCanBeFound': return 'Aucun utilisateur trouvé.';
			case 'balance': return 'Solde';
			case 'noLnInNwc': return 'Nous n\'avons pas pu récupérer votre adresse depuis votre secret NWC, veuillez vérifier votre fournisseur de service d\'adresse lightning pour copier votre adresse ou pour mettre à jour votre profil en conséquence.';
			case 'copyLn': return 'Copier l\'adresse lightning';
			case 'receive': return 'Recevoir';
			case 'clickBelowToConnect': return 'Cliquez ci-dessous pour vous connecter';
			case 'connectWithNwc': return 'Se connecter avec NWC';
			case 'pasteNwcAddress': return 'Coller l\'adresse NWC';
			case 'createYakiWallet': return 'Créer le portefeuille de YakiHonne';
			case 'yakiNwc': return 'NWC de YakiHonne';
			case 'yakiNwcDesc': return 'Créer un portefeuille en utilisant le canal de YakiHonne';
			case 'orUseYourWallet': return 'Ou utilisez votre portefeuille';
			case 'nostrWalletConnect': return 'Connexion portefeuille nostr';
			case 'nostrWalletConnectDesc': return 'Connexion portefeuille nostr native';
			case 'alby': return 'Alby';
			case 'albyConnect': return 'Connexion Alby';
			case 'walletDataNote': return 'Note : Toutes les données liées à votre portefeuille seront stockées de manière sûre et sécurisée localement et ne sont jamais partagées en dehors des limites de l\'application.';
			case 'availableWallets': return 'Portefeuilles disponibles';
			case 'noWalletLinkedToYouProfile': return 'Vous n\'avez aucun portefeuille lié à votre profil.';
			case 'noWalletConnectedToYourProfile': return 'Aucun des portefeuilles connectés n\'est lié à votre profil.';
			case 'click': return 'Cliquez';
			case 'onSelectedWalletLinkIt': return 'sur votre portefeuille sélectionné et liez-le.';
			case 'noWalletCanBeFound': return 'Aucun portefeuille trouvé';
			case 'currentlyLinkedMessage': return 'Actuellement lié à votre profil pour recevoir des zaps';
			case 'linked': return 'Lié';
			case 'linkWallet': return 'Lier le portefeuille';
			case 'linkWalletDesc': return 'Vous êtes sur le point de remplacer votre portefeuille précédent et d\'en lier un nouveau à votre profil, souhaitez-vous continuer ?';
			case 'copyNwc': return 'Copier NWC';
			case 'nwcCopied': return 'NWC a été copié avec succès !';
			case 'deleteWallet': return 'Supprimer le portefeuille';
			case 'deleteWalletDesc': return 'Vous êtes sur le point de supprimer ce portefeuille, souhaitez-vous continuer ?';
			case 'userSentSat': return ({required Object name, required Object number}) => '${name} vous a envoyé ${number} Sats';
			case 'userReceivedSat': return ({required Object name, required Object number}) => '${name} a reçu de vous ${number} Sats';
			case 'ownSentSat': return ({required Object number}) => 'Vous avez envoyé ${number} Sats';
			case 'ownReceivedSat': return ({required Object number}) => 'Vous avez reçu ${number} Sats';
			case 'comment': return 'Commentaire';
			case 'supportYakihonne': return 'Soutenir YakiHonne';
			case 'fuelYakihonne': return 'Alimentez la croissance de YakiHonne ! Votre soutien stimule de nouvelles fonctionnalités et une meilleure expérience pour tous.';
			case 'supportUs': return '❤︎ Soutenez-nous';
			case 'peopleToFollow': return 'Personnes à suivre';
			case 'donations': return 'Dons';
			case 'inTag': return ({required Object name}) => 'Dans ${name}';
			case 'shareProfile': return 'Partager le profil';
			case 'shareProfileDesc': return 'Partagez votre profil pour atteindre plus de personnes, vous connecter avec d\'autres, et développer votre réseau';
			case 'moreDots': return 'plus...';
			case 'comments': return 'Commentaires';
			case 'noCommentsCanBeFound': return 'Aucun commentaire trouvé';
			case 'beFirstCommentThisVideo': return 'Soyez le premier à commenter cette vidéo !';
			case 'errorLoadingVideo': return 'Erreur lors du chargement de la vidéo';
			case 'seeAlso': return 'Voir aussi';
			case 'viewsNumber': return ({required Object number}) => '${number} vue';
			case 'upvotes': return 'Votes positifs';
			case 'downvotes': return 'Votes négatifs';
			case 'views': return 'Vues';
			case 'createdAtEditedAt': return ({required Object date1, required Object date2}) => 'créé le ${date1}, modifié le ${date2}';
			case 'loading': return 'Chargement';
			case 'releaseToLoad': return 'Relâcher pour charger plus';
			case 'finished': return 'terminé !';
			case 'noMoreData': return 'Plus de données';
			case 'refreshed': return 'Actualisé';
			case 'refreshing': return 'Actualisation';
			case 'pullToRefresh': return 'Tirer pour actualiser';
			case 'suggestedInterests': return 'Intérêts suggérés';
			case 'reveal': return 'Révéler';
			case 'wantToShareRevenues': return 'Je veux partager ces revenus';
			case 'splitRevenuesWithUsers': return 'Partager les revenus avec les utilisateurs';
			case 'addUser': return 'Ajouter un utilisateur';
			case 'selectAdate': return 'Sélectionner une date';
			case 'clearDate': return 'Effacer la date';
			case 'nothingToShowHere': return 'Oups ! Rien à montrer ici !';
			case 'confirmPayment': return 'Confirmer le paiement';
			case 'payWithNwc': return 'Payer avec NWC';
			case 'important': return 'Important';
			case 'adjustVolume': return 'Ajuster le volume';
			case 'adjustSpeed': return 'Ajuster la vitesse';
			case 'updateInterests': return 'Mettre à jour les intérêts';
			case 'usingViewMode': return 'Vous utilisez le mode visualisation';
			case 'usingViewModeDesc': return 'Connectez-vous avec votre clé privée et rejoignez la communauté.';
			case 'noInternetAccess': return 'Pas d\'accès Internet';
			case 'checkModelRouter': return 'Vérifiez votre modem ou routeur';
			case 'reconnectWifi': return 'Se reconnecter à un wifi';
			case 'somethingWentWrong': return 'Quelque chose s\'est mal passé !';
			case 'somethingWentWrongDesc': return 'Il semble que quelque chose se soit passé lors du chargement des données, réessayez !';
			case 'tryAgain': return 'Réessayer';
			case 'postNotFound': return 'La publication n\'a pas pu être trouvée';
			case 'user': return 'utilisateur';
			case 'view': return 'voir';
			case 'itsLive': return 'C\'est en direct !';
			case 'spreadWordSharingContent': return 'Faites passer le mot en partageant votre contenu partout.';
			case 'successfulRelays': return 'Relais réussis';
			case 'noRelaysCanBeFound': return 'Aucun relais trouvé';
			case 'dismiss': return 'ignorer';
			case 'deleteAccountMessage': return 'Vous tentez de vous connecter à un compte supprimé.';
			case 'exit': return 'Sortir';
			case 'shareContent': return 'Partager le contenu';
			case 'profile': return 'Profil';
			case 'by': return 'par';
			case 'shareLink': return 'Partager le lien';
			case 'shareImage': return 'Partager l\'image';
			case 'shareNoteId': return 'Partager l\'id de la note';
			case 'shareNprofile': return 'Partager le nprofile';
			case 'shareNaddr': return 'Partager le naddr';
			case 'bio': return ({required Object content}) => 'Bio : ${content}';
			case 'earnSats': return 'Gagner des SATs';
			case 'earnSatsDesc': return 'Aidez-nous à fournir plus d\'insights décentralisés pour examiner cette note payante.';
			case 'verifyingNote': return 'Vérification de la note';
			case 'pickYourImage': return 'Choisissez votre image';
			case 'uploadPasteUrl': return 'Vous pouvez télécharger ou coller une url pour votre image préférée';
			case 'back': return 'retour';
			case 'camera': return 'Caméra';
			case 'communityWidgets': return 'Widgets communautaires';
			case 'myWidgets': return 'Mes widgets';
			case 'pendingUnfollowing': return 'Désabonnement...';
			case 'pendingFollowing': return 'Abonnement...';
			case 'zappers': return 'Zappeurs';
			case 'noZappersCanBeFound': return 'Aucun zappeur trouvé.';
			case 'payPublish': return 'Payer et publier';
			case 'payPublishNote': return 'Note : Assurez-vous que tout le contenu que vous avez fourni est final car la publication est considérée comme irréversible et les SATS dépensés ne sont pas remboursables.';
			case 'userSubmittedPaidNote': return ({required Object name}) => '${name} a soumis une note payante';
			case 'getInvoice': return 'Obtenir une facture';
			case 'pay': return 'Payer';
			case 'compose': return 'Composer';
			case 'writeSomething': return 'Écrire quelque chose...';
			case 'highlightedNote': return 'Une note mise en évidence pour plus d\'exposition.';
			case 'typeValidZapQuestion': return 'Tapez une question de sondage valide !';
			case 'pollOptions': return 'Options de sondage';
			case 'minimumSatoshis': return 'Satoshis minimum';
			case 'minSats': return 'Sats min';
			case 'maxSats': return 'Sats max';
			case 'maximumSatoshis': return 'Satoshis maximum';
			case 'pollCloseDate': return 'Date de fermeture du sondage';
			case 'optionsNumber': return ({required Object number}) => 'Options : ${number}';
			case 'zapSplits': return 'Partages de zap';
			case 'minimumOfOneRequired': return 'Un montant minimum de 1 est requis';
			case 'valueBetweenMinMax': return 'La valeur doit être entre le montant min et max de sats';
			case 'writeCommentOptional': return 'Écrire un commentaire (optionnel)';
			case 'splitZapsWith': return 'Partager les zaps avec';
			case 'useCannotBeZapped': return 'Cet utilisateur ne peut pas être zappé';
			case 'waitingGenerationOfInvoice': return 'En attente de la génération des factures.';
			case 'userInvoiceGenerated': return ({required Object name}) => 'Une facture pour ${name} a été générée';
			case 'userInvoiceNotGenerated': return 'Impossible de créer une facture pour cet utilisateur.';
			case 'payAmount': return ({required Object number}) => 'Payer ${number} sats';
			case 'generateInvoices': return 'Générer les factures';
			case 'userZappedSuccesfuly': return 'L\'utilisateur a été zappé avec succès';
			case 'useValidTitle': return 'Un titre valide doit être utilisé';
			case 'errorAddingBookmark': return 'Erreur survenue lors de l\'ajout du favori';
			case 'bookmarkAdded': return 'La liste de favoris a été ajoutée';
			case 'voteNotSubmitted': return 'Le vote n\'a pas pu être soumis';
			case 'zapSplitsMessage': return 'Pour les partages de zap, il devrait y avoir au moins une personne';
			case 'errorUpdatingCuration': return 'Une erreur est survenue lors de la mise à jour de la curation';
			case 'errorAddingCuration': return 'Une erreur est survenue lors de l\'ajout de la curation';
			case 'errorDeletingContent': return 'Erreur survenue lors de la suppression du contenu';
			case 'errorSigningEvent': return 'Erreur survenue lors de la signature de l\'événement';
			case 'errorSendingEvent': return 'Erreur survenue lors de l\'envoi de l\'événement';
			case 'errorSendingMessage': return 'erreur survenue lors de l\'envoi du message';
			case 'userHasBeenMuted': return 'L\'utilisateur a été mis en sourdine';
			case 'userHasBeenUnmuted': return 'L\'utilisateur a été réactivé';
			case 'messageCouldNotBeDecrypted': return 'le message n\'a pas pu être déchiffré';
			case 'interestsUpdateMessage': return 'La liste d\'intérêts a été mise à jour avec succès !';
			case 'errorGeneratingEvent': return 'Erreur survenue lors de la génération de l\'événement';
			case 'oneFeedOptionAvailable': return 'Il devrait y avoir au moins une option de flux disponible.';
			case 'walletCreated': return 'Le portefeuille a été créé avec succès';
			case 'walletLinked': return 'Le portefeuille a été lié avec succès';
			case 'errorCreatingWallet': return 'Erreur survenue lors de la création du portefeuille';
			case 'walletNotLinked': return 'Le portefeuille ne peut pas être lié. Mauvaise adresse lightning';
			case 'invalidPairingSecret': return 'Secret d\'appariement invalide';
			case 'errorSettingToken': return 'Erreur survenue lors de la configuration du token';
			case 'nwcInitialized': return 'La connexion portefeuille nostr a été initialisée';
			case 'noWalletLinkedMessage': return 'Vous n\'avez aucun portefeuille lié à votre profil, souhaitez-vous lier ce portefeuille ?';
			case 'errorUsingWallet': return 'Erreur survenue lors de l\'utilisation du portefeuille !';
			case 'submitValidData': return 'Assurez-vous de soumettre des données valides';
			case 'submitValidInvoice': return 'Assurez-vous de soumettre une facture valide';
			case 'paymentSucceeded': return 'Paiement réussi';
			case 'paymentFailed': return 'Paiement échoué';
			case 'notEnoughBalance': return 'Solde insuffisant pour effectuer ce paiement.';
			case 'permissionInvoiceNotGranted': return 'Permission de payer les factures non accordée.';
			case 'allUsersZapped': return 'Tous les utilisateurs ont été zappés !';
			case 'partialUsersZapped': return 'Utilisateurs partiels zappés !';
			case 'noUserZapped': return 'Aucun utilisateur n\'a été zappé !';
			case 'errorZappingUsers': return 'Erreur survenue lors du zapping des utilisateurs';
			case 'selectDefaultWallet': return 'Sélectionnez un portefeuille par défaut dans les paramètres.';
			case 'noInvoiceAvailable': return 'Aucune facture disponible';
			case 'invoicePaid': return 'La facture a été payée avec succès';
			case 'errorPayingInvoice': return 'Erreur survenue lors du paiement en utilisant la facture';
			case 'errorUsingExternalWallet': return 'Erreur lors de l\'utilisation du portefeuille externe.';
			case 'paymentSurpassMax': return 'Le paiement dépasse le montant maximum autorisé.';
			case 'errorSendingSats': return 'Erreur survenue lors de l\'envoi des sats';
			case 'setSatsMoreThanZero': return 'Définir un montant de sats supérieur à 0';
			case 'processCompleted': return 'Le processus a été terminé';
			case 'relayingStuff': return 'Relayage en cours...';
			case 'amberNotInstalled': return 'L\'application Amber n\'est pas installée';
			case 'alreadyLoggedIn': return 'Vous êtes déjà connecté !';
			case 'loggedIn': return 'Vous êtes connecté !';
			case 'attemptConnectAmber': return 'La tentative de connexion avec Amber a été rejetée.';
			case 'errorUploadingImage': return 'Erreur survenue lors du téléchargement de l\'image';
			case 'invalidPrivateKey': return 'Clé privée invalide !';
			case 'invalidHexKey': return 'Clé hex invalide !';
			case 'fetchingArticle': return 'Récupération de l\'article';
			case 'articleNotFound': return 'L\'article n\'a pas pu être trouvé';
			case 'fetchingCuration': return 'Récupération de la curation';
			case 'curationNotFound': return 'La curation n\'a pas pu être trouvée';
			case 'fetchingSmartWidget': return 'Récupération du widget intelligent';
			case 'smartWidgetNotFound': return 'Le widget intelligent n\'a pas pu être trouvé';
			case 'fetchingVideo': return 'Récupération de la vidéo';
			case 'videoNotFound': return 'La vidéo n\'a pas pu être trouvée';
			case 'fetchingNote': return 'Récupération de la note';
			case 'noteNotFound': return 'La note n\'a pas pu être trouvée';
			case 'eventNotFound': return 'L\'événement n\'a pas pu être trouvé';
			case 'verifiedNoteNotFound': return 'La note vérifiée n\'a pas pu être trouvée';
			case 'eventNotRecognized': return 'L\'événement n\'a pas pu être reconnu';
			case 'fetchingEventUserRelays': return 'Récupération de l\'événement depuis les relais de l\'utilisateur';
			case 'fetchingProfile': return 'Récupération du profil';
			case 'fetchingEvent': return 'Récupération de l\'événement';
			case 'loggedToYakiChest': return 'Vous êtes connecté au coffre de Yakihonne';
			case 'errorLoggingYakiChest': return 'Erreur survenue lors de la connexion au coffre de Yakihonne';
			case 'relayInUse': return 'Relais déjà en utilisation';
			case 'errorConnectingRelay': return 'Erreur survenue lors de la connexion au relais';
			case 'submitValidLud': return 'Assurez-vous d\'obtenir un lud16/lud06 valide.';
			case 'errorUpdatingData': return 'Erreur survenue lors de la mise à jour des données';
			case 'updatedSuccesfuly': return 'Mis à jour avec succès';
			case 'relaysListUpdated': return 'La liste des relais a été mise à jour';
			case 'couldNotUpdateRelaysList': return 'Impossible de mettre à jour la liste des relais';
			case 'errorUpdatingRelaysList': return 'Erreur survenue lors de la mise à jour de la liste des relais';
			case 'errorClaimingReward': return 'Erreur survenue lors de la réclamation d\'une récompense';
			case 'errorDecodingData': return 'Erreur survenue lors du décodage des données';
			case 'loggingIn': return 'Connexion...';
			case 'loggingOut': return 'Déconnexion...';
			case 'disconnecting': return 'Déconnexion...';
			case 'ratingSubmittedCheckReward': return 'Votre évaluation a été soumise, vérifiez votre page de récompenses pour réclamer votre récompense d\'évaluation';
			case 'errorSubmittingRating': return 'Erreur survenue lors de la soumission de votre évaluation';
			case 'verifiedNoteAdded': return 'Votre note vérifiée a été ajoutée, vérifiez votre page de récompenses pour réclamer votre récompense d\'écriture';
			case 'errorAddingVerifiedNote': return 'Erreur survenue lors de l\'ajout de votre note vérifiée';
			case 'ratingDeleted': return 'Votre évaluation a été supprimée';
			case 'errorDeletingRating': return 'Erreur survenue lors de la suppression de votre évaluation';
			case 'autoSavedArticleDeleted': return 'L\'article auto-sauvegardé a été supprimé';
			case 'articlePublished': return 'Votre article a été publié !';
			case 'errorAddingArticle': return 'Une erreur est survenue lors de l\'ajout de l\'article';
			case 'writeValidNote': return 'Écrivez une note valide !';
			case 'setOutboxRelays': return 'Assurez-vous de configurer vos relais de sortie';
			case 'notePublished': return 'La note a été publiée !';
			case 'paidNotePublished': return 'La note payante a été publiée !';
			case 'invoiceNotPayed': return 'Il semble que vous n\'ayez pas payé la facture, vérifiez à nouveau';
			case 'autoSavedSMdeleted': return 'Le widget intelligent auto-sauvegardé a été supprimé';
			case 'errorUploadingMedia': return 'Erreur survenue lors du téléchargement du média';
			case 'smartWidgetPublishedSuccessfuly': return 'Le widget intelligent a été publié avec succès';
			case 'errorAddingWidget': return 'Une erreur est survenue lors de l\'ajout du widget intelligent';
			case 'setAllRequiredContent': return 'Assurez-vous de définir tout le contenu requis.';
			case 'noEventIdCanBeFound': return 'Aucun événement avec cet id trouvé !';
			case 'notValidVideoEvent': return 'Cet événement n\'est pas un événement vidéo valide !';
			case 'emptyVideoUrl': return 'Ce nevent a une url vide';
			case 'submitValidVideoEvent': return 'Veuillez soumettre un événement vidéo valide';
			case 'errorUploadingVideo': return 'Erreur survenue lors du téléchargement de la vidéo';
			case 'errorAddingVideo': return 'Une erreur est survenue lors de l\'ajout de la vidéo';
			case 'submitMinMaxSats': return 'Assurez-vous de soumettre des satoshis minimum et maximum valides';
			case 'submitValidCloseDate': return 'Assurez-vous de soumettre une date de fermeture valide.';
			case 'submitValidOptions': return 'Assurez-vous de soumettre des options valides.';
			case 'pollZapPublished': return 'Le sondage zap a été publié !';
			case 'relaysNotReached': return 'Les relais n\'ont pas pu être atteints';
			case 'loginYakiChestPoints': return 'Connectez-vous au coffre de Yakihonne, accumulez des points en étant actif sur la plateforme et gagnez de précieuses récompenses !';
			case 'inaccessibleLink': return 'Lien inaccessible';
			case 'mediaExceedsMaxSize': return 'Le média dépasse la taille maximale qui est de 21 mb';
			case 'fetchingUserInboxRelays': return 'Récupération des relais de boîte de réception de l\'utilisateur';
			case 'userZappedYou': return ({required Object name, required Object number}) => '${name} vous a zappé ${number} sats';
			case 'userReactedYou': return ({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à vous';
			case 'userRepostedYou': return ({required Object name}) => '${name} a repartagé votre contenu';
			case 'userMentionedYouInNote': return ({required Object name}) => '${name} vous a mentionné dans une note';
			case 'userMentionedYouInPaidNote': return ({required Object name}) => '${name} vous a mentionné dans une note payante';
			case 'userMentionedYouInArticle': return ({required Object name}) => '${name} vous a mentionné dans un article';
			case 'userMentionedYouInVideo': return ({required Object name}) => '${name} vous a mentionné dans une vidéo';
			case 'userMentionedYouInCuration': return ({required Object name}) => '${name} vous a mentionné dans une curation';
			case 'userMentionedYouInSmartWidget': return ({required Object name}) => '${name} vous a mentionné dans un widget intelligent';
			case 'userMentionedYouInPoll': return ({required Object name}) => '${name} vous a mentionné dans un sondage';
			case 'userPublishedPaidNote': return ({required Object name}) => '${name} a publié une note payante';
			case 'userPublishedArticle': return ({required Object name}) => '${name} a publié un article';
			case 'userPublishedVideo': return ({required Object name}) => '${name} a publié une vidéo';
			case 'userPublishedCuration': return ({required Object name}) => '${name} a publié une curation';
			case 'userPublishedSmartWidget': return ({required Object name}) => '${name} a publié un widget intelligent';
			case 'userPublishedPoll': return ({required Object name}) => '${name} a publié un sondage';
			case 'userZappedYourArticle': return ({required Object name, required Object number}) => '${name} a zappé votre article ${number} sats';
			case 'userZappedYourCuration': return ({required Object name, required Object number}) => '${name} a zappé votre curation ${number} sats';
			case 'userZappedYourVideo': return ({required Object name, required Object number}) => '${name} a zappé votre vidéo ${number} sats';
			case 'userZappedYourSmartWidget': return ({required Object name, required Object number}) => '${name} a zappé votre widget intelligent ${number} sats';
			case 'userZappedYourPoll': return ({required Object name, required Object number}) => '${name} a zappé votre sondage ${number} sats';
			case 'userZappedYourNote': return ({required Object name, required Object number}) => '${name} a zappé votre note ${number} sats';
			case 'userZappedYourPaidNote': return ({required Object name, required Object number}) => '${name} a zappé votre note payante ${number} sats';
			case 'userReactedYourArticle': return ({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à votre article';
			case 'userReactedYourCuration': return ({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à votre curation';
			case 'userReactedYourVideo': return ({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à votre vidéo';
			case 'userReactedYourSmartWidget': return ({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à votre widget intelligent';
			case 'userReactedYourPoll': return ({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à votre sondage';
			case 'userReactedYourNote': return ({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à votre note';
			case 'userReactedYourPaidNote': return ({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à votre note payante';
			case 'userReactedYourMessage': return ({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à votre message';
			case 'userRepostedYourNote': return ({required Object name}) => '${name} a repartagé votre note';
			case 'userRepostedYourPaidNote': return ({required Object name}) => '${name} a repartagé votre note payante';
			case 'userRepliedYourArticle': return ({required Object name}) => '${name} a répondu à votre article';
			case 'userRepliedYourCuration': return ({required Object name}) => '${name} a répondu à votre curation';
			case 'userRepliedYourVideo': return ({required Object name}) => '${name} a répondu à votre vidéo';
			case 'userRepliedYourSmartWidget': return ({required Object name}) => '${name} a répondu à votre widget intelligent';
			case 'userRepliedYourPoll': return ({required Object name}) => '${name} a répondu à votre sondage';
			case 'userRepliedYourNote': return ({required Object name}) => '${name} a répondu à votre note';
			case 'userRepliedYourPaidNote': return ({required Object name}) => '${name} a répondu à votre note payante';
			case 'userCommentedYourArticle': return ({required Object name}) => '${name} a commenté votre article';
			case 'userCommentedYourCuration': return ({required Object name}) => '${name} a commenté votre curation';
			case 'userCommentedYourVideo': return ({required Object name}) => '${name} a commenté votre vidéo';
			case 'userCommentedYourSmartWidget': return ({required Object name}) => '${name} a commenté votre widget intelligent';
			case 'userCommentedYourPoll': return ({required Object name}) => '${name} a commenté votre sondage';
			case 'userCommentedYourNote': return ({required Object name}) => '${name} a commenté votre note';
			case 'userCommentedYourPaidNote': return ({required Object name}) => '${name} a commenté votre note payante';
			case 'userQuotedYourArticle': return ({required Object name}) => '${name} a cité votre article';
			case 'userQuotedYourCuration': return ({required Object name}) => '${name} a cité votre curation';
			case 'userQuotedYourVideo': return ({required Object name}) => '${name} a cité votre vidéo';
			case 'userQuotedYourNote': return ({required Object name}) => '${name} a cité votre note';
			case 'userQuotedYourPaidNote': return ({required Object name}) => '${name} a cité votre note payante';
			case 'userReactedArticleYouIn': return ({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à un article dans lequel vous étiez mentionné';
			case 'userReactedCurationYouIn': return ({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à une curation dans laquelle vous étiez mentionné';
			case 'userReactedVideoYouIn': return ({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à une vidéo dans laquelle vous étiez mentionné';
			case 'userReactedSmartWidgetYouIn': return ({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à un widget intelligent dans lequel vous étiez mentionné';
			case 'userReactedPollYouIn': return ({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à un sondage dans lequel vous étiez mentionné';
			case 'userReactedNoteYouIn': return ({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à une note dans laquelle vous étiez mentionné';
			case 'userReactedPaidNoteYouIn': return ({required Object name, required Object reaction}) => '${name} a réagi ${reaction} à une note payante dans laquelle vous étiez mentionné';
			case 'userRepostedNoteYouIn': return ({required Object name}) => '${name} a repartagé une note dans laquelle vous étiez mentionné';
			case 'userRepostedPaidNoteYouIn': return ({required Object name}) => '${name} a repartagé une note payante dans laquelle vous étiez mentionné';
			case 'userRepliedArticleYouIn': return ({required Object name}) => '${name} a répondu à un article dans lequel vous étiez mentionné';
			case 'userRepliedCurationYouIn': return ({required Object name}) => '${name} a répondu à une curation dans laquelle vous étiez mentionné';
			case 'userRepliedVideoYouIn': return ({required Object name}) => '${name} a répondu à une vidéo dans laquelle vous étiez mentionné';
			case 'userRepliedSmartWidgetYouIn': return ({required Object name}) => '${name} a répondu à un widget intelligent dans lequel vous étiez mentionné';
			case 'userRepliedPollYouIn': return ({required Object name}) => '${name} a répondu à un sondage dans lequel vous étiez mentionné';
			case 'userRepliedNoteYouIn': return ({required Object name}) => '${name} a répondu à une note dans laquelle vous étiez mentionné';
			case 'userRepliedPaidNoteYouIn': return ({required Object name}) => '${name} a répondu à une note payante dans laquelle vous étiez mentionné';
			case 'userCommentedArticleYouIn': return ({required Object name}) => '${name} a commenté un article dans lequel vous étiez mentionné';
			case 'userCommentedCurationYouIn': return ({required Object name}) => '${name} a commenté une curation dans laquelle vous étiez mentionné';
			case 'userCommentedVideoYouIn': return ({required Object name}) => '${name} a commenté une vidéo dans laquelle vous étiez mentionné';
			case 'userCommentedSmartWidgetYouIn': return ({required Object name}) => '${name} a commenté un widget intelligent dans lequel vous étiez mentionné';
			case 'userCommentedPollYouIn': return ({required Object name}) => '${name} a commenté un sondage dans lequel vous étiez mentionné';
			case 'userCommentedNoteYouIn': return ({required Object name}) => '${name} a commenté une note dans laquelle vous étiez mentionné';
			case 'userCommentedPaidNoteYouIn': return ({required Object name}) => '${name} a commenté une note payante dans laquelle vous étiez mentionné';
			case 'userQuotedArticleYouIn': return ({required Object name}) => '${name} a cité un article dans lequel vous étiez mentionné';
			case 'userQuotedCurationYouIn': return ({required Object name}) => '${name} a cité une curation dans laquelle vous étiez mentionné';
			case 'userQuotedVideoYouIn': return ({required Object name}) => '${name} a cité une vidéo dans laquelle vous étiez mentionné';
			case 'userQuotedNoteYouIn': return ({required Object name}) => '${name} a cité une note dans laquelle vous étiez mentionné';
			case 'userQuotedPaidNoteYouIn': return ({required Object name}) => '${name} a cité une note payante dans laquelle vous étiez mentionné';
			case 'reactedWith': return ({required Object name, required Object reaction}) => '${name} a réagi avec ${reaction}';
			case 'verifiedNoteSealed': return 'Votre note vérifiée a été scellée.';
			case 'verifiedNoteRateSealed': return 'Une note vérifiée que vous avez évaluée a été scellée.';
			case 'userNewVideo': return ({required Object name}) => 'Vidéo de ${name}';
			case 'titleData': return ({required Object description}) => 'Titre : ${description}';
			case 'checkoutVideo': return 'consultez ma vidéo';
			case 'yakihonneNotification': return 'Notification de YakiHonne';
			case 'unknownVerifiedNote': return 'Note vérifiée inconnue';
			case 'userReply': return ({required Object name}) => 'Réponse de ${name}';
			case 'userPaidNote': return ({required Object name}) => 'Nouvelle note payante de ${name}';
			case 'contentData': return ({required Object description}) => 'Contenu : ${description}';
			case 'checkoutPaidNote': return 'consultez ma note payante';
			case 'userNewCuration': return ({required Object name}) => 'Nouvelle curation de ${name}';
			case 'userNewArticle': return ({required Object name}) => 'Nouveau article de ${name}';
			case 'userNewSmartWidget': return ({required Object name}) => 'Nouveau widget intelligent de ${name}';
			case 'checkoutArticle': return 'consultez mon article';
			case 'checkoutCuration': return 'consultez ma curation';
			case 'checkoutSmartWidget': return 'consultez mon widget intelligent';
			case 'languagePreferences': return 'Préférences de langue';
			case 'contentTranslation': return 'Traduction de contenu';
			case 'appLanguage': return 'Langue de l\'application';
			case 'apiKeyRequired': return 'Clé API (requise)';
			case 'getApiKey': return 'Obtenir la clé API';
			case 'seeTranslation': return 'Voir la traduction';
			case 'seeOriginal': return 'Voir l\'original';
			case 'plan': return 'Plan';
			case 'free': return 'Gratuit';
			case 'pro': return 'Pro';
			case 'errorTranslating': return 'Erreur survenue lors de la traduction du contenu.';
			case 'errorMissingKey': return 'Clé API manquante ou abonnement expiré. Vérifiez Paramètres -> Préférences de langue pour plus d\'informations.';
			case 'comingSoon': return 'Bientôt disponible';
			case 'content': return 'Contenu';
			case 'expiresOn': return ({required Object date}) => 'Expire le : ${date}';
			case 'collapseNote': return 'Réduire la note';
			case 'reactions': return 'Réactions';
			case 'reposts': return 'Repartages';
			case 'notifDisabled': return 'Les notifications sont désactivées !';
			case 'notifDisabledMessage': return 'Les notifications sont désactivées pour ce type, vous pouvez les activer dans les paramètres de notifications.';
			case 'oneNotifOptionAvailable': return 'Il devrait y avoir au moins une option de notification disponible.';
			case 'readAll': return 'Tout lire';
			case 'usernameTaken': return 'Le nom d\'utilisateur est pris';
			case 'usernameRequired': return 'Le nom d\'utilisateur est requis';
			case 'deleteWalletConfirmation': return 'Veuillez vous assurer de sauvegarder en sécurité votre phrase de connexion NWC, car nous ne pouvons pas aider à récupérer les portefeuilles perdus.';
			case 'unsupportedKind': return 'Type non supporté';
			case 'analyticsCrashlytics': return 'Crashlytics';
			case 'analyticsCache': return 'Crashlytics et cache';
			case 'analyticsCacheOn': return 'Crashlytics ont été activés.';
			case 'analyticsCacheOff': return 'Crashlytics ont été désactivés.';
			case 'shareNoUsage': return 'Vous ne partagez aucun crashlytics avec nous pour le moment.';
			case 'wantShareAnalytics': return 'Voulez-vous partager les crashlytics ?';
			case 'yakihonneAnCr': return 'Crashlytics de YakiHonne';
			case 'crashlyticsTerms': return 'La collecte de crashlytics anonymisés est vitale pour affiner les fonctionnalités et l\'expérience utilisateur de notre application. Cela nous permet d\'identifier les préférences des utilisateurs, d\'améliorer les fonctionnalités populaires et de faire des optimisations éclairées, garantissant une application plus personnalisée et efficace pour nos utilisateurs.';
			case 'collectAnonymised': return 'Nous collectons des crashlytics anonymisés pour améliorer l\'expérience de l\'application.';
			case 'linkWalletToProfile': return 'Lier le portefeuille à votre profil';
			case 'linkWalletToProfileDesc': return 'Le portefeuille lié sera utilisé pour recevoir des sats';
			case 'noWalletLinked': return 'Vous n\'avez aucun portefeuille lié à votre profil, considérez en lier un des vôtres dans le menu ci-dessus';
			case 'addPoll': return 'Ajouter un sondage';
			case 'browsePolls': return 'Parcourir les sondages';
			case 'maciPolls': return 'Sondage MACI';
			case 'beta': return 'Bêta';
			case 'choosePollType': return 'Choisir un type de sondage';
			case 'created': return 'Créé';
			case 'tallying': return 'Décompte';
			case 'ended': return 'Terminé';
			case 'closed': return 'Fermé';
			case 'voteResultsBy': return 'Résultats de vote par';
			case 'votes': return 'votes';
			case 'voiceCredit': return 'Crédit vocal';
			case 'viewDetails': return 'Voir les détails';
			case 'signup': return 'S\'inscrire';
			case 'notDownloadProof': return 'Impossible de télécharger les preuves';
			case 'name': return 'Nom';
			case 'status': return 'Statut';
			case 'circuit': return 'Circuit';
			case 'votingSystem': return 'Système de vote';
			case 'proofSystem': return 'Système de preuve';
			case 'gasStation': return 'Station d\'essence';
			case 'totalFund': return '(fonds total)';
			case 'roundStart': return 'Début du tour';
			case 'roundEnd': return 'Fin du tour';
			case 'operator': return 'Opérateur';
			case 'contractCreator': return 'Créateur du contrat';
			case 'contractAddress': return 'Adresse du contrat';
			case 'blockHeight': return 'Hauteur de bloc';
			case 'atContractCreation': return ({required Object number}) => '${number} (à la création du contrat)';
			case 'zkProofs': return 'Preuves ZK';
			case 'downloadZkProofs': return 'Télécharger les preuves';
			case 'walletConnectionString': return 'Chaîne de connexion du portefeuille';
			case 'walletConnectionStringDesc': return 'Veuillez vous assurer de copier ou d\'exporter en sécurité votre chaîne de connexion de portefeuille. Nous ne stockons pas ces informations, et si elles sont perdues, elles ne peuvent pas être récupérées.';
			case 'export': return 'Exporter';
			case 'logout': return 'Se déconnecter';
			case 'exportAndLogout': return 'Exporter et se déconnecter';
			case 'exportWalletsDesc': return 'Il semble que vous ayez des portefeuilles liés à votre compte. Veuillez télécharger vos secrets de portefeuille avant de vous déconnecter.';
			case 'manageWallets': return 'Gérer les portefeuilles';
			case 'roundDuration': return 'Durée du tour';
			case 'startAt': return ({required Object date}) => 'Commence à : ${date}';
			case 'loginAction': return 'Se connecter';
			case 'addPicture': return 'Ajouter une image';
			case 'editPicture': return 'Modifier l\'image';
			case 'exportKeys': return 'Exporter les clés';
			case 'mutedUser': return 'Utilisateur en sourdine';
			case 'unaccessibleContent': return 'Contenu inaccessible';
			case 'mutedUserDesc': return 'Vous avez mis cet utilisateur en sourdine, considérez le réactiver pour voir ce contenu';
			case 'commentHidden': return 'Ce commentaire est masqué';
			case 'upcoming': return 'À venir';
			case 'exportCredentials': return 'Exporter les identifiants';
			case 'loginToYakihonne': return 'Se connecter à Yakihonne';
			case 'alreadyUser': return 'Déjà utilisateur ?';
			case 'createPoll': return 'Créer un sondage';
			case 'gasStationTotal': return 'Station d\'essence (total financé)';
			case 'gasStationRemaining': return 'Station d\'essence (solde restant)';
			case 'paste': return 'Coller';
			case 'manual': return 'Manuel';
			case 'contacts': return 'Contacts';
			case 'typeManualDesc': return 'Tapez l\'adresse Lightning, la facture Lightning ou LNURL';
			case 'useValidPaymentRequest': return 'Veuillez utiliser une demande de paiement valide';
			case 'save': return 'Sauvegarder';
			case 'saveImageGallery': return 'L\'image a été téléchargée dans votre galerie';
			case 'errorSavingImage': return 'Erreur survenue lors du téléchargement de l\'image';
			case 'copyImageGallery': return 'L\'image a été copiée dans votre presse-papiers';
			case 'errorCopyImage': return 'Erreur survenue lors de la copie de l\'image';
			case 'scan': return 'Scanner';
			case 'invalidLightningAddress': return 'Adresse lightning invalide';
			case 'deleteAccountDesc': return 'Vous êtes sur le point de supprimer votre compte, souhaitez-vous continuer ?';
			case 'paymentFailedInvoice': return 'Paiement échoué : vérifiez la validité de cette facture';
			case 'validSatsAmount': return 'Définir un montant de sats valide';
			case 'placeholder': return 'Espace réservé';
			case 'inputFieldCustomization': return 'Personnalisation du champ de saisie';
			case 'addInputField': return 'Ajouter un champ de saisie';
			case 'addButton': return 'Ajouter un bouton';
			case 'selectImage': return 'Sélectionner une image';
			case 'moveLeft': return 'Déplacer à gauche';
			case 'moveRight': return 'Déplacer à droite';
			case 'buttonRequired': return 'Il devrait y avoir au moins un bouton disponible';
			case 'missingInputDesc': return 'Il semble que vous utilisez une des fonctions personnalisées qui nécessite un composant de champ de saisie sans en intégrer un dans votre widget intelligent, veuillez ajouter un champ de saisie pour que la fonction fonctionne correctement.';
			case 'countdown': return 'Compte à rebours';
			case 'contentEndsAt': return 'Le contenu se termine à';
			case 'countdownTime': return 'L\'heure du compte à rebours est obligatoire';
			case 'contentEndsDate': return 'La date de fin du contenu est obligatoire';
			case 'lnMandatory': return 'L\'adresse lightning est obligatoire';
			case 'pubkeysMandatory': return 'Au moins un profil est obligatoire';
			case 'buttonNoUrl': return 'Les urls des boutons sont obligatoires';
			case 'shareWidgetImage': return 'Partager l\'image du widget';
			case 'inputField': return 'Champ de saisie';
			case 'noReplies': return 'Aucune réponse';
			case 'message': return 'Message';
			case 'chat': return 'Chat';
			case 'onlyLettersNumber': return 'Seules les lettres et chiffres sont autorisés';
			case 'appCache': return 'Cache de l\'application';
			case 'cachedData': return 'Données en cache';
			case 'cachedMedia': return 'Médias en cache';
			case 'cacheCleared': return 'Le cache a été vidé';
			case 'closeAppClearingCache': return 'Il est préférable de redémarrer l\'application après avoir vidé le cache pour s\'assurer que tous les changements prennent effet et que l\'application fonctionne en douceur';
			case 'appCacheNotice': return 'Votre cache d\'application augmente en taille. Pour assurer des performances fluides, il est recommandé de vider les anciennes données.';
			case 'manageCache': return 'Gérer le cache';
			case 'filterByTime': return 'Filtrer par temps';
			case 'allTime': return 'Tout le temps';
			case 'oneMonth': return '1 mois';
			case 'threeMonths': return '3 mois';
			case 'sixMonths': return '6 mois';
			case 'oneYear': return '1 an';
			case 'defaultZapAmount': return 'Montant de zap par défaut';
			case 'oneTapZap': return 'Activer le zap en un tap';
			case 'verify': return 'Vérifier';
			case 'reset': return 'réinitialiser';
			case 'appCannotVerified': return 'L\'application ne peut pas être vérifiée ou est invalide';
			case 'useValidAppUrl': return 'Utilisez une url d\'application valide';
			case 'app': return 'Application';
			case 'userNotConnected': return 'Utilisateur non connecté';
			case 'userCannotSignEvent': return 'Cet utilisateur ne peut pas signer d\'événements.';
			case 'invalidEvent': return 'Événement invalide';
			case 'eventCannotBeSigned': return 'L\'événement ne peut pas être signé';
			case 'signEvent': return 'Signer l\'événement';
			case 'sign': return 'Signer';
			case 'signPublish': return 'Signer et publier';
			case 'signEventDes': return 'Vous êtes sur le point de signer l\'événement suivant';
			case 'enableAutomaticSigning': return 'Signature automatique';
			case 'tools': return 'Outils';
			case 'searchSmartWidgets': return 'Rechercher des widgets intelligents';
			case 'noToolsAvailable': return 'Aucun outil disponible';
			case 'underMaintenance': return 'En maintenance';
			case 'smartWidgetMaintenance': return 'Le Widget Intelligent est en panne pour maintenance. Nous le réparons et il sera de retour bientôt !';
			case 'mySavedTools': return 'Mes outils sauvegardés';
			case 'availableTools': return 'Outils disponibles';
			case 'remove': return 'Supprimer';
			case 'youHaveNoTools': return 'Vous n\'avez pas d\'outils';
			case 'discoverTools': return 'Découvrez les outils publiés pour vous aider avec votre création de contenu';
			case 'addWidgetTools': return 'Ajouter des outils de widget';
			case 'widgetSearch': return 'Recherche de widget';
			case 'widgetSearchDesc': return 'recherche de widgets intelligents publiés et de ce que les gens ont fait';
			case 'getInspired': return 'Inspirez-vous';
			case 'getInspirtedDesc': return 'demandez à notre IA de vous aider à construire votre widget intelligent';
			case 'trySearch': return 'Essayez différentes méthodes de recherche';
			case 'typeForCommands': return 'Tapez / pour les commandes';
			case 'loadMore': return 'Charger plus';
			case 'searchingFor': return ({required Object name}) => 'Rechercher : ${name}';
			case 'playground': return 'Terrain de jeu';
			case 'typeKeywords': return 'Tapez des mots-clés (ex : Mot-clé1, Mot-clé2..)';
			case 'enableGossip': return 'Modèle Gossip';
			case 'enableGossipDesc': return 'Le modèle Gossip est désactivé par défaut. Vous pouvez l\'activer, dans Paramètres, sous Modération de contenu.';
			case 'enableExternalBrowser': return 'Utiliser un navigateur externe';
			case 'restartAppTakeEffect': return 'Redémarrez l\'application pour que l\'action prenne effet';
			case 'tips': return 'Conseils';
			case 'docs': return 'Docs';
			case 'tryMiniApp': return 'Essayez votre mini-app avec des tests pratiques et interactifs.';
			case 'exploreOurRepos': return 'Explorez nos dépôts ou consultez notre documentation Smart Widgets.';
			case 'bringAi': return 'Nous apportons l\'IA !';
			case 'bringAiDesc': return 'Nous créons un assistant IA pour rationaliser votre travail avec les widgets programmables et le développement de mini-apps—gardez l\'œil ouvert !';
			case 'notesCount': return ({required Object number}) => '${number} note(s)';
			case 'mixedContentCount': return ({required Object number}) => '${number} contenu';
			case 'noApp': return 'Aucune application adaptée trouvée pour ouvrir le fichier exporté';
			case 'andMore': return ({required Object number}) => '& ${number} autre(s)';
			case 'addFilter': return 'Ajouter un filtre';
			case 'entitleFilter': return 'Intituler le filtre';
			case 'includedWords': return 'Mots inclus';
			case 'excludedWords': return 'Mots exclus';
			case 'hideSensitiveContent': return 'Masquer le contenu sensible';
			case 'mustIncludeThumbnail': return 'Doit inclure une miniature';
			case 'forArticles': return 'Pour les articles';
			case 'forVideos': return 'Pour les vidéos';
			case 'forCurations': return 'Pour les curations';
			case 'articleMinWords': return 'Nombre minimum de mots du contenu';
			case 'showOnlyArticleMedia': return 'Afficher seulement les articles avec des médias';
			case 'showOnlyNotesMedia': return 'Afficher seulement les notes avec des médias';
			case 'curationsType': return 'Type de curations';
			case 'minItemCount': return 'Nombre minimum d\'éléments';
			case 'addWord': return 'Ajouter un mot approprié';
			case 'wordNotInIncluded': return 'Assurez-vous que le mot n\'est pas dans les mots inclus';
			case 'wordNotInExcluded': return 'Assurez-vous que le mot n\'est pas dans les mots exclus';
			case 'fieldRequired': return 'Champ requis';
			case 'filterAdded': return 'Le filtre a été ajouté';
			case 'filterUpdated': return 'Le filtre a été mis à jour';
			case 'filterDeleted': return 'Le filtre a été supprimé';
			case 'filters': return 'Filtres';
			case 'contentFeed': return 'Flux de contenu';
			case 'communityFeed': return 'Flux communautaire';
			case 'relaysFeed': return 'Flux de relais';
			case 'marketplaceFeed': return 'Flux marketplace';
			case 'addYourFeed': return 'Ajoutez votre flux préféré';
			case 'myList': return 'Ma liste';
			case 'allFreeFeeds': return 'Tous les flux gratuits';
			case 'noRelays': return 'Aucun relais présent';
			case 'addRelays': return 'Ajoutez votre liste de relais pour profiter d\'un flux propre et personnalisé';
			case 'adjustYourFeedList': return 'Ajustez votre liste de flux';
			case 'addRelayUrl': return 'Ajouter l\'url du relais';
			case 'feedOptionEnabled': return 'Au moins une option de flux devrait être activée';
			case 'feedSetUpdate': return 'L\'ensemble de flux a été mis à jour';
			case 'global': return 'Global';
			case 'fromNetwork': return 'Du réseau';
			case 'top': return 'Haut';
			case 'showFollowingList': return 'Votre flux actuel est basé sur la liste d\'abonnements de quelqu\'un d\'autre, commencez à suivre des personnes pour adapter votre flux à vos préférences';
			case 'from': return 'De';
			case 'to': return 'À';
			case 'dayMonthYear': return 'jj/MM/aaaa';
			case 'fromDateMessage': return 'La date \'De\' doit être antérieure à la date \'À\'';
			case 'toDateMessage': return 'La date \'À\' doit être postérieure à la date \'De\'';
			case 'noResults': return 'Aucun résultat';
			case 'noResultsFilterMessage': return 'Il semble que vous appliquez un filtre personnalisé, veuillez ajuster les paramètres et les dates pour acquérir plus de données';
			case 'noResultsNoFilterMessage': return 'Rien trouvé, veuillez changer votre source de contenu ou appliquer différents paramètres de filtre';
			case 'addToNotes': return 'Ajouter aux notes';
			case 'addToDiscover': return 'Ajouter à découvrir';
			case 'shareRelayContent': return 'Partager le contenu du relais';
			case 'shareRelayUrl': return 'Partager l\'URL du relais';
			case 'basic': return 'Basique';
			case 'privateMessages': return 'Messages privés';
			case 'pushNotifications': return 'Notifications push';
			case 'repliesView': return 'Vue des réponses';
			case 'threadView': return 'Fil';
			case 'boxView': return 'Boîte';
			case 'viewAs': return 'Voir comme';
			case 'feedSettings': return 'Paramètres de flux';
			case 'appliedFilterDesc': return 'Cette note est masquée en raison du filtre actuellement appliqué.';
			case 'showNote': return 'Afficher la note';
			case 'allMedia': return 'Tous les médias';
			case 'searchInNostr': return 'Rechercher dans Nostr';
			case 'findPeopleContent': return 'Trouver des personnes, notes et contenu';
			case 'activeService': return 'Service actif';
			case 'regularServers': return 'Serveurs réguliers';
			case 'blossomServers': return 'Serveurs BLOSSOM';
			case 'mirrorAllServer': return 'Miroir tous serveurs';
			case 'mainServer': return 'Serveur principal';
			case 'select': return 'Sélectionner';
			case 'noServerFound': return 'Aucun serveur trouvé';
			case 'serverExists': return 'Le serveur existe déjà dans votre liste';
			case 'invalidUrl': return 'Format d\'url invalide';
			case 'serverPath': return 'Chemin du serveur';
			case 'errorAddingBlossom': return 'Erreur survenue lors de l\'ajout du serveur blossom';
			case 'errorSelectBlossom': return 'Erreur survenue lors de la sélection du serveur blossom';
			case 'errorDeleteBlossom': return 'Erreur survenue lors de la suppression du serveur blossom';
			case 'wotConfig': return 'Configuration du web de confiance';
			case 'wot': return 'web de confiance';
			case 'wotThreshold': return 'Seuil du web de confiance';
			case 'postActions': return 'Actions de publication';
			case 'enabledFor': return 'Activé pour';
			case 'dmRelayTitle': return 'Les relais de messages privés ne sont pas configurés !';
			case 'dmRelayDesc': return 'Mettez à jour votre liste de relais en conséquence. ';
			case 'youFollow': return 'Vous suivez';
			case 'quotaLimit': return 'Vous avez dépassé votre limite de quota quotidien';
			case 'alwaysUseExternal': return 'Toujours utiliser les zaps de portefeuille externe';
			case 'alwaysUseExternalDesc': return 'Utiliser une application de portefeuille Lightning externe au lieu du portefeuille intégré de YakiHonne pour toutes les transactions de zap.';
			case 'unreachableExternalWallet': return 'Portefeuille externe inaccessible';
			case 'secureStorageDesc': return 'Vos clés sont stockées en sécurité sur votre appareil et ne sont jamais partagées avec nous ou qui que ce soit d\'autre.';
			case 'pubkeySharedDesc': return 'Sûr à partager - ceci vous identifie sur Nostr.';
			case 'privKeyDesc': return 'Garder privé - sauvegarder en sécurité pour accéder à votre compte ailleurs.';
			case 'settingsKeysDesc': return 'Gérez vos clés Nostr pour l\'identité réseau, la signature d\'événements et l\'authentification des publications.';
			case 'settingsRelaysDesc': return 'Configurez les connexions de relais Nostr pour stocker et distribuer les événements.';
			case 'settingsCustomizationDesc': return 'Personnalisez l\'affichage de votre flux YakiHonne, les gestes, les aperçus et les préférences pour une meilleure expérience Nostr.';
			case 'settingsNotificationsDesc': return 'Contrôlez les notifications pour les messages, mentions, réactions et autres événements Nostr.';
			case 'settingsContentDesc': return 'Contrôlez les interactions de contenu, les paramètres de confidentialité, la gestion des médias et les préférences de messagerie sur Nostr.';
			case 'settingsLanguageDesc': return 'Choisissez votre langue préférée pour l\'interface YakiHonne et la traduction de contenu.';
			case 'settingsWalletDesc': return 'Connectez et gérez les portefeuilles Bitcoin Lightning pour envoyer/recevoir des zaps avec des montants personnalisables et une intégration externe.';
			case 'settingsAppearanceDesc': return 'Personnalisez l\'apparence visuelle de YakiHonne pour correspondre à vos préférences et votre confort de visualisation.';
			case 'settingsCacheDesc': return 'Gérez la surveillance des performances de l\'application, le rapport d\'erreurs et l\'optimisation du stockage pour un fonctionnement fluide.';
			case 'addQuickRelayDesc': return 'Ajoutez rapidement un nouveau relais en entrant son URL.';
			case 'fewerRelays': return 'Moins de relais stables = meilleures performances et synchronisation plus rapide.';
			case 'greenDotsDesc': return 'Les points verts montrent les connexions actives.';
			case 'redDotsDesc': return 'Les points rouges montrent les relais hors ligne.';
			case 'greyDotsDesc': return 'Les points gris montrent les relais en attente.';
			case 'homeFeedCustomDesc': return 'Choisissez le style d\'affichage des réponses (Boîte ou Fil) et gérez les préférences de suggestions pour les personnes, le contenu et les intérêts.';
			case 'NewPostDesc': return 'Choisissez ce qui se passe quand vous appuyez longuement lors de la création de publications (actuellement défini sur Note).';
			case 'profilePreviewDesc': return 'Afficher les aperçus de profil utilisateur lorsque vous tapez sur les noms d\'utilisateur dans votre flux.';
			case 'collapseNoteDesc': return 'Minimiser automatiquement les longs posts pour garder votre flux propre et lisible.';
			case 'pushNotificationsDesc': return 'Recevez des alertes instantanées sur votre appareil. Axé sur la confidentialité en utilisant les protocoles sécurisés FCM et APNS';
			case 'privateMessagesDesc': return 'Soyez alerté des nouveaux messages directs et conversations privées.';
			case 'followingDesc': return 'Soyez notifié quand les personnes que vous suivez publient du nouveau contenu.';
			case 'mentionsDesc': return 'Soyez alerté quand quelqu\'un vous mentionne ou répond à vos publications.';
			case 'repostsDesc': return 'Soyez alerté quand quelqu\'un partage ou repartage votre contenu.';
			case 'reactionsDesc': return 'Soyez notifié quand quelqu\'un aime ou réagit à vos publications.';
			case 'zapDesc': return 'Soyez notifié quand vous recevez des pourboires Bitcoin (zaps) sur vos publications.';
			case 'muteListDesc': return 'Voir et gérer les utilisateurs que vous avez bloqués d\'apparaître dans votre flux.';
			case 'mediaUploaderDesc': return 'Choisissez quel service télécharge vos images et fichiers médias.';
			case 'autoSignDesc': return 'Signer automatiquement les événements demandés par les mini-apps (widgets intelligents d\'action/outil) sans confirmation manuelle à chaque fois.';
			case 'gossipDesc': return 'Gestion sophistiquée des relais qui trouve automatiquement les publications de vos abonnés à travers différents relais tout en minimisant les connexions et en s\'adaptant aux relais hors ligne.';
			case 'useExternalBrowsDesc': return 'Ouvrir les liens dans votre application de navigateur par défaut au lieu du navigateur intégré.';
			case 'secureDmDesc': return 'Utiliser le dernier standard de messagerie privée (NIP-17) avec chiffrement avancé. Désactiver pour utiliser l\'ancien format NIP-4 pour la compatibilité.';
			case 'wotConfigDesc': return 'Un mécanisme de confiance décentralisé utilisant des attestations sociales pour établir la réputation au sein du protocole Nostr.';
			case 'appLangDesc': return 'Choisissez la langue pour l\'interface, les menus et les boutons de YakiHonne.';
			case 'contentTransDesc': return 'Sélectionnez le service de traduction pour les publications en langues étrangères.';
			case 'planDesc': return 'Votre niveau de plan de traduction actuel et vos limites d\'utilisation.';
			case 'manageWalletsDesc': return 'Ajoutez et organisez vos portefeuilles Lightning pour envoyer et recevoir des zaps Bitcoin sur Nostr.';
			case 'defaultZapDesc': return 'Définissez le montant Bitcoin par défaut (en sats) lors de l\'envoi de zaps rapides aux publications.';
			case 'enableZapDesc': return 'Un tap envoie le montant par défaut instantanément. Double tap ouvre les options de zap (montant, portefeuille, message). Quand désactivé, double tap envoie le montant par défaut.';
			case 'externalWalletDesc': return 'Utiliser une application de portefeuille Lightning externe au lieu du portefeuille intégré de YakiHonne pour toutes les transactions de zap.';
			case 'fontSizeDesc': return 'Ajustez la taille du texte dans toute l\'application pour une meilleure lisibilité - utilisez le curseur pour agrandir ou réduire le texte.';
			case 'appThemeDesc': return 'Basculez entre le mode clair et sombre pour personnaliser l\'apparence visuelle de l\'application.';
			case 'crashlyticsDesc': return 'Rapport de crash anonyme et analyses d\'application pour aider à améliorer les performances et corriger les bugs. Nous utilisons les analyses Umami pour améliorer votre expérience. Désactivez à tout moment.';
			case 'showSuggDesc': return 'Afficher les recommandations de contenu général dans votre flux.';
			case 'showSuggPeople': return 'Afficher les utilisateurs recommandés à suivre basés sur votre activité.';
			case 'showSuggContent': return 'Afficher les publications et articles recommandés dans votre flux.';
			case 'showSuggInterests': return 'Afficher les recommandations de sujets et d\'intérêts pour la découverte.';
			case 'striveToMake': return 'Nous nous efforçons de tirer le meilleur parti de Nostr, Soutenez-nous ci-dessous ou envoyez-nous vos précieux commentaires : zap, dms, github.';
			case 'errorAmber': return 'Vous avez soit refusé, soit vous êtes déjà connecté à Amber';
			case 'useOneRelay': return 'Vous devez laisser au moins un relais connecté';
			case 'automaticPurge': return 'Purge automatique du cache';
			case 'automaticPurgeDesc': return 'Efface automatiquement le cache de l\'application lorsqu\'il atteint 2 Go. Maintient les performances et évite une utilisation excessive du stockage.';
			case 'customServices': return 'Services personnalisés';
			case 'defaultServices': return 'Services par défaut';
			case 'addService': return 'Ajouter un service';
			case 'customServicesDesc': return 'Services personnalisés disponibles ajoutés par vous.';
			case 'urlRequired': return 'URL requise';
			case 'serviceAdded': return 'Le service a été ajouté';
			case 'showRawEvent': return 'Afficher l\'événement brut';
			case 'rawEventData': return 'Données brutes de l\'événement';
			case 'copyRawEventData': return 'Les données brutes de l\'événement ont été copiées ! 👏';
			case 'kind': return 'Type';
			case 'shortNote': return 'Note courte';
			case 'postedOnDate': return 'Publié le';
			case 'showMore': return '... afficher plus';
			case 'accountDeleted': return 'Ce compte a été supprimé et n\'est plus accessible.';
			case 'ok': return 'OK';
			case 'redeem': return 'Utiliser';
			case 'redeemCode': return 'Utiliser le code';
			case 'redeemAndEarn': return 'Utiliser et gagner';
			case 'redeemingFailed': return 'Échec de l\'utilisation';
			case 'redeemInProgress': return 'Code en cours d\'utilisation...';
			case 'redeemCodeDesc': return 'Saisissez votre code pour l\'utiliser';
			case 'missingCode': return 'Code manquant';
			case 'missingPubkey': return 'Clé publique manquante';
			case 'invalidPubkey': return 'Clé publique invalide';
			case 'missingLightningAddress': return 'Adresse Lightning manquante';
			case 'codeNotFound': return 'Code introuvable';
			case 'redeemCodeRequired': return 'Le code est requis';
			case 'redeemCodeInvalid': return 'Code invalide';
			case 'codeBeingRedeemed': return 'Votre code est en cours d\'utilisation. S\'il n\'aboutit pas, veuillez réessayer sous peu.';
			case 'redeemCodeSuccess': return 'Le code a été utilisé avec succès';
			case 'redeemFailed': return 'Impossible d\'utiliser le code, veuillez réessayer plus tard.';
			case 'codeAlreadyRedeemed': return 'Le code a déjà été utilisé';
			case 'satsEarned': return ({required Object amount}) => '+${amount} sats gagnés.';
			case 'selectReceivingWallet': return 'Sélectionner le portefeuille de réception';
			case 'redeemCodeMessage': return 'Obtenez des sats gratuits avec les codes YakiHonne — entrez simplement votre code et augmentez instantanément votre solde.';
			case 'scanCode': return 'Scanner le code';
			case 'enterCode': return 'Saisir le code';
			case 'errorSharingMedia': return 'Erreur lors du partage du média';
			case 'open': return 'Ouvrir';
			case 'openUrl': return 'Ouvrir l\'URL';
			case 'openUrlDesc': return ({required Object url}) => 'Voulez-vous ouvrir "${url}" ?';
			case 'openUrlPrompt': return 'Demande d\'ouverture d\'URL';
			case 'openUrlPromptDesc': return 'Un avertissement de sécurité affichant l\'URL complète avant de l\'ouvrir dans votre navigateur.';
			case 'whatsNew': return 'Nouveautés';
			default: return null;
		}
	}
}

